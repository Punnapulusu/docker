###############################################################
# Dockerfile generated by Bocker-v1.1. Do not edit this file. #
###############################################################

FROM icy/supervisor:latest
MAINTAINER Anh K. Huynh <kyanh@theslinux.org>

ENV DEBIAN_FRONTEND noninteractive
ENV NGINX_CHECKSUM 12bad312764feae50246685ab2e74512d1aa9b2f
ENV NGINX_VERSION 1.8.0
ENV WWW_UID 10005

# Bocker method => __ed_ship
# * The output is /bocker.sh in the result image.
# * List of methods:
#   - ed_apt_clean
#   - ed_apt_purge
#
# | set -eux
# | if [[ -f /bocker.sh ]]; then source /bocker.sh; fi
# | ed_apt_clean () 
# | { 
# |     rm -fv /var/cache/apt/*.bin;
# |     rm -fv /var/cache/apt/archives/*.*;
# |     rm -fv /var/lib/apt/lists/*.*;
# |     apt-get autoclean
# | }
# | ed_apt_purge () 
# | { 
# |     apt-get purge -y --auto-remove $@;
# |     ed_apt_clean
# | }
# | echo '#!/bin/bash' > /bocker.sh
# | echo '# This file is generated by Bocker.' >> /bocker.sh
# | declare -f >> /bocker.sh
# | echo 'if [[ -n "$@" ]]; then $@; fi; ' >> /bocker.sh
# | chmod 755 /bocker.sh
#
RUN echo \
c2V0IC1ldXgKaWYgW1sgLWYgL2JvY2tlci5zaCBdXTsgdGhlbiBzb3VyY2UgL2JvY2tlci5\
zaDsgZmkKZWRfYXB0X2NsZWFuICgpIAp7IAogICAgcm0gLWZ2IC92YXIvY2FjaGUvYXB0Ly\
ouYmluOwogICAgcm0gLWZ2IC92YXIvY2FjaGUvYXB0L2FyY2hpdmVzLyouKjsKICAgIHJtI\
C1mdiAvdmFyL2xpYi9hcHQvbGlzdHMvKi4qOwogICAgYXB0LWdldCBhdXRvY2xlYW4KfQpl\
ZF9hcHRfcHVyZ2UgKCkgCnsgCiAgICBhcHQtZ2V0IHB1cmdlIC15IC0tYXV0by1yZW1vdmU\
gJEA7CiAgICBlZF9hcHRfY2xlYW4KfQplY2hvICcjIS9iaW4vYmFzaCcgPiAvYm9ja2VyLn\
NoCmVjaG8gJyMgVGhpcyBmaWxlIGlzIGdlbmVyYXRlZCBieSBCb2NrZXIuJyA+PiAvYm9ja\
2VyLnNoCmRlY2xhcmUgLWYgPj4gL2JvY2tlci5zaAplY2hvICdpZiBbWyAtbiAiJEAiIF1d\
OyB0aGVuICRAOyBmaTsgJyA+PiAvYm9ja2VyLnNoCmNobW9kIDc1NSAvYm9ja2VyLnNoCg=\
=\
  | base64 -d | bash

# Bocker methods:
# - ed_nginx_install_packages
# - ed_nginx_download_source
# - ed_nginx_build
# - ed_nginx_clean_up
# - ed_nginx_create_generator
#
# | set -eux
# | if [[ -f /bocker.sh ]]; then source /bocker.sh; fi
# | ed_nginx_install_packages () 
# | { 
# |     apt-get update;
# |     apt-get install -y gcc libc6-dev make libpcre3-dev git nginx libssl-dev
# | }
# | ed_nginx_download_source () 
# | { 
# |     mkdir -pv /usr/src/build/modules/;
# |     cd /usr/src/build/;
# |     curl -Lso- https://github.com/openresty/echo-nginx-module/archive/v0.57.tar.gz | tar -xzf - -C /usr/src/build/modules/;
# |     curl -Lso- https://github.com/openresty/headers-more-nginx-module/archive/v0.25.tar.gz | tar -xzf - -C /usr/src/build/modules/;
# |     curl -Lso /usr/src/build/nginx.tar.gz http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz;
# |     echo "$NGINX_CHECKSUM *nginx.tar.gz" | sha1sum -c -;
# |     tar -xzf nginx.tar.gz -C /usr/src/build/
# | }
# | ed_nginx_build () 
# | { 
# |     _NGINX_NAME="nginx-${NGINX_VERSION}";
# |     _NGINX_FLAGS="
# |       --prefix=/usr/       --conf-path=/etc/nginx/nginx.conf
# |       --http-log-path=/var/log/nginx/access.log
# |       --error-log-path=/var/log/nginx/error.log
# |       --lock-path=/var/lock/nginx.lock
# |       --pid-path=/run/nginx.pid
# |       --http-client-body-temp-path=/var/lib/nginx/body
# |       --http-fastcgi-temp-path=/var/lib/nginx/fastcgi
# |       --http-proxy-temp-path=/var/lib/nginx/proxy
# |       --http-scgi-temp-path=/var/lib/nginx/scgi
# |       --http-uwsgi-temp-path=/var/lib/nginx/uwsgi
# |       --with-pcre
# |       --with-http_ssl_module
# |       --with-http_stub_status_module
# |       --with-http_realip_module
# |       --with-http_gzip_static_module
# |       --with-http_sub_module
# |     ";
# |     _NONSTANDARD_MODULES="";
# |     _D_BUILD="/usr/src/build/";
# |     _NONSTANDARD_MODULES="$(     find $_D_BUILD/modules/           -mindepth 1 -maxdepth 1 -type d       | while read _d; do           echo -en " --add-module=$_d";         done)";
# |     cd $_D_BUILD/$_NGINX_NAME;
# |     sed -i -e 's# bgcolor=\\"white\\"##g' -e 's#<center><h1>##g' -e 's#</h1></center>##g' -e '/NGINX_VER/d' -e '/>nginx</d' ./src/http/ngx_http_special_response.c;
# |     sh configure $_NGINX_FLAGS $_NONSTANDARD_MODULES;
# |     make;
# |     make install
# | }
# | ed_nginx_clean_up () 
# | { 
# |     cd /;
# |     rm -rf /etc/nginx/ /usr/src/build/;
# |     ed_apt_purge make libpcre3-dev git libssl-dev
# | }
# | ed_nginx_create_generator () 
# | { 
# |     { 
# |         echo "#!/bin/bash";
# |         echo "/bocker.sh ed_nginx_generate_config"
# |     } > /etc/s.supervisor/nginx.sh
# | }
# | ed_nginx_install_packages
# | ed_nginx_download_source
# | ed_nginx_build
# | ed_nginx_clean_up
# | ed_nginx_create_generator
#
RUN echo \
c2V0IC1ldXgKaWYgW1sgLWYgL2JvY2tlci5zaCBdXTsgdGhlbiBzb3VyY2UgL2JvY2tlci5\
zaDsgZmkKZWRfbmdpbnhfaW5zdGFsbF9wYWNrYWdlcyAoKSAKeyAKICAgIGFwdC1nZXQgdX\
BkYXRlOwogICAgYXB0LWdldCBpbnN0YWxsIC15IGdjYyBsaWJjNi1kZXYgbWFrZSBsaWJwY\
3JlMy1kZXYgZ2l0IG5naW54IGxpYnNzbC1kZXYKfQplZF9uZ2lueF9kb3dubG9hZF9zb3Vy\
Y2UgKCkgCnsgCiAgICBta2RpciAtcHYgL3Vzci9zcmMvYnVpbGQvbW9kdWxlcy87CiAgICB\
jZCAvdXNyL3NyYy9idWlsZC87CiAgICBjdXJsIC1Mc28tIGh0dHBzOi8vZ2l0aHViLmNvbS\
9vcGVucmVzdHkvZWNoby1uZ2lueC1tb2R1bGUvYXJjaGl2ZS92MC41Ny50YXIuZ3ogfCB0Y\
XIgLXh6ZiAtIC1DIC91c3Ivc3JjL2J1aWxkL21vZHVsZXMvOwogICAgY3VybCAtTHNvLSBo\
dHRwczovL2dpdGh1Yi5jb20vb3BlbnJlc3R5L2hlYWRlcnMtbW9yZS1uZ2lueC1tb2R1bGU\
vYXJjaGl2ZS92MC4yNS50YXIuZ3ogfCB0YXIgLXh6ZiAtIC1DIC91c3Ivc3JjL2J1aWxkL2\
1vZHVsZXMvOwogICAgY3VybCAtTHNvIC91c3Ivc3JjL2J1aWxkL25naW54LnRhci5neiBod\
HRwOi8vbmdpbngub3JnL2Rvd25sb2FkL25naW54LSR7TkdJTlhfVkVSU0lPTn0udGFyLmd6\
OwogICAgZWNobyAiJE5HSU5YX0NIRUNLU1VNICpuZ2lueC50YXIuZ3oiIHwgc2hhMXN1bSA\
tYyAtOwogICAgdGFyIC14emYgbmdpbngudGFyLmd6IC1DIC91c3Ivc3JjL2J1aWxkLwp9Cm\
VkX25naW54X2J1aWxkICgpIAp7IAogICAgX05HSU5YX05BTUU9Im5naW54LSR7TkdJTlhfV\
kVSU0lPTn0iOwogICAgX05HSU5YX0ZMQUdTPSIKICAgICAgLS1wcmVmaXg9L3Vzci8gICAg\
ICAgLS1jb25mLXBhdGg9L2V0Yy9uZ2lueC9uZ2lueC5jb25mCiAgICAgIC0taHR0cC1sb2c\
tcGF0aD0vdmFyL2xvZy9uZ2lueC9hY2Nlc3MubG9nCiAgICAgIC0tZXJyb3ItbG9nLXBhdG\
g9L3Zhci9sb2cvbmdpbngvZXJyb3IubG9nCiAgICAgIC0tbG9jay1wYXRoPS92YXIvbG9ja\
y9uZ2lueC5sb2NrCiAgICAgIC0tcGlkLXBhdGg9L3J1bi9uZ2lueC5waWQKICAgICAgLS1o\
dHRwLWNsaWVudC1ib2R5LXRlbXAtcGF0aD0vdmFyL2xpYi9uZ2lueC9ib2R5CiAgICAgIC0\
taHR0cC1mYXN0Y2dpLXRlbXAtcGF0aD0vdmFyL2xpYi9uZ2lueC9mYXN0Y2dpCiAgICAgIC\
0taHR0cC1wcm94eS10ZW1wLXBhdGg9L3Zhci9saWIvbmdpbngvcHJveHkKICAgICAgLS1od\
HRwLXNjZ2ktdGVtcC1wYXRoPS92YXIvbGliL25naW54L3NjZ2kKICAgICAgLS1odHRwLXV3\
c2dpLXRlbXAtcGF0aD0vdmFyL2xpYi9uZ2lueC91d3NnaQogICAgICAtLXdpdGgtcGNyZQo\
gICAgICAtLXdpdGgtaHR0cF9zc2xfbW9kdWxlCiAgICAgIC0td2l0aC1odHRwX3N0dWJfc3\
RhdHVzX21vZHVsZQogICAgICAtLXdpdGgtaHR0cF9yZWFsaXBfbW9kdWxlCiAgICAgIC0td\
2l0aC1odHRwX2d6aXBfc3RhdGljX21vZHVsZQogICAgICAtLXdpdGgtaHR0cF9zdWJfbW9k\
dWxlCiAgICAiOwogICAgX05PTlNUQU5EQVJEX01PRFVMRVM9IiI7CiAgICBfRF9CVUlMRD0\
iL3Vzci9zcmMvYnVpbGQvIjsKICAgIF9OT05TVEFOREFSRF9NT0RVTEVTPSIkKCAgICAgZm\
luZCAkX0RfQlVJTEQvbW9kdWxlcy8gICAgICAgICAgIC1taW5kZXB0aCAxIC1tYXhkZXB0a\
CAxIC10eXBlIGQgICAgICAgfCB3aGlsZSByZWFkIF9kOyBkbyAgICAgICAgICAgZWNobyAt\
ZW4gIiAtLWFkZC1tb2R1bGU9JF9kIjsgICAgICAgICBkb25lKSI7CiAgICBjZCAkX0RfQlV\
JTEQvJF9OR0lOWF9OQU1FOwogICAgc2VkIC1pIC1lICdzIyBiZ2NvbG9yPVxcIndoaXRlXF\
wiIyNnJyAtZSAncyM8Y2VudGVyPjxoMT4jI2cnIC1lICdzIzwvaDE+PC9jZW50ZXI+IyNnJ\
yAtZSAnL05HSU5YX1ZFUi9kJyAtZSAnLz5uZ2lueDwvZCcgLi9zcmMvaHR0cC9uZ3hfaHR0\
cF9zcGVjaWFsX3Jlc3BvbnNlLmM7CiAgICBzaCBjb25maWd1cmUgJF9OR0lOWF9GTEFHUyA\
kX05PTlNUQU5EQVJEX01PRFVMRVM7CiAgICBtYWtlOwogICAgbWFrZSBpbnN0YWxsCn0KZW\
RfbmdpbnhfY2xlYW5fdXAgKCkgCnsgCiAgICBjZCAvOwogICAgcm0gLXJmIC9ldGMvbmdpb\
ngvIC91c3Ivc3JjL2J1aWxkLzsKICAgIGVkX2FwdF9wdXJnZSBtYWtlIGxpYnBjcmUzLWRl\
diBnaXQgbGlic3NsLWRldgp9CmVkX25naW54X2NyZWF0ZV9nZW5lcmF0b3IgKCkgCnsgCiA\
gICB7IAogICAgICAgIGVjaG8gIiMhL2Jpbi9iYXNoIjsKICAgICAgICBlY2hvICIvYm9ja2\
VyLnNoIGVkX25naW54X2dlbmVyYXRlX2NvbmZpZyIKICAgIH0gPiAvZXRjL3Muc3VwZXJ2a\
XNvci9uZ2lueC5zaAp9CmVkX25naW54X2luc3RhbGxfcGFja2FnZXMKZWRfbmdpbnhfZG93\
bmxvYWRfc291cmNlCmVkX25naW54X2J1aWxkCmVkX25naW54X2NsZWFuX3VwCmVkX25naW5\
4X2NyZWF0ZV9nZW5lcmF0b3IK\
  | base64 -d | bash

ADD etc/nginx/ /etc/nginx/

# Bocker method => __ed_ship
# * The output is /bocker.sh in the result image.
# * List of methods:
#   - ed_nginx_daemonize
#   - ed_nginx_generate_config
#
# | set -eux
# | if [[ -f /bocker.sh ]]; then source /bocker.sh; fi
# | ed_nginx_daemonize () 
# | { 
# |     /usr/sbin/nginx -t -c /etc/nginx/nginx.conf || exit 1;
# |     exec /usr/sbin/nginx -c /etc/nginx/nginx.conf
# | }
# | ed_nginx_generate_config () 
# | { 
# |     chown -R www-data:www-data /var/lib/nginx;
# |     cat > /etc/s.supervisor/nginx.s  <<EOF
# | [program:nginx]
# | command=/bocker.sh ed_nginx_daemonize
# | process_name=%(program_name)s
# | numprocs=1
# | directory=/
# | umask=022
# | priority=999
# | autostart=true
# | autorestart=true
# | startsecs=1
# | startretries=3
# | exitcodes=0,2
# | stopsignal=TERM
# | stopwaitsecs=10
# | user=root
# | redirect_stderr=true
# | stdout_logfile=/supervisor/nginx.log
# | stdout_logfile_maxbytes=50MB
# | stdout_logfile_backups=10
# | stdout_capture_maxbytes=0
# | stdout_events_enabled=false
# | stderr_logfile=AUTO
# | stderr_logfile_maxbytes=50MB
# | stderr_logfile_backups=10
# | stderr_capture_maxbytes=0
# | stderr_events_enabled=false
# | environment=
# | EOF
# | 
# | }
# | echo '#!/bin/bash' > /bocker.sh
# | echo '# This file is generated by Bocker.' >> /bocker.sh
# | declare -f >> /bocker.sh
# | echo 'if [[ -n "$@" ]]; then $@; fi; ' >> /bocker.sh
# | chmod 755 /bocker.sh
#
RUN echo \
c2V0IC1ldXgKaWYgW1sgLWYgL2JvY2tlci5zaCBdXTsgdGhlbiBzb3VyY2UgL2JvY2tlci5\
zaDsgZmkKZWRfbmdpbnhfZGFlbW9uaXplICgpIAp7IAogICAgL3Vzci9zYmluL25naW54IC\
10IC1jIC9ldGMvbmdpbngvbmdpbnguY29uZiB8fCBleGl0IDE7CiAgICBleGVjIC91c3Ivc\
2Jpbi9uZ2lueCAtYyAvZXRjL25naW54L25naW54LmNvbmYKfQplZF9uZ2lueF9nZW5lcmF0\
ZV9jb25maWcgKCkgCnsgCiAgICBjaG93biAtUiB3d3ctZGF0YTp3d3ctZGF0YSAvdmFyL2x\
pYi9uZ2lueDsKICAgIGNhdCA+IC9ldGMvcy5zdXBlcnZpc29yL25naW54LnMgIDw8RU9GCl\
twcm9ncmFtOm5naW54XQpjb21tYW5kPS9ib2NrZXIuc2ggZWRfbmdpbnhfZGFlbW9uaXplC\
nByb2Nlc3NfbmFtZT0lKHByb2dyYW1fbmFtZSlzCm51bXByb2NzPTEKZGlyZWN0b3J5PS8K\
dW1hc2s9MDIyCnByaW9yaXR5PTk5OQphdXRvc3RhcnQ9dHJ1ZQphdXRvcmVzdGFydD10cnV\
lCnN0YXJ0c2Vjcz0xCnN0YXJ0cmV0cmllcz0zCmV4aXRjb2Rlcz0wLDIKc3RvcHNpZ25hbD\
1URVJNCnN0b3B3YWl0c2Vjcz0xMAp1c2VyPXJvb3QKcmVkaXJlY3Rfc3RkZXJyPXRydWUKc\
3Rkb3V0X2xvZ2ZpbGU9L3N1cGVydmlzb3IvbmdpbngubG9nCnN0ZG91dF9sb2dmaWxlX21h\
eGJ5dGVzPTUwTUIKc3Rkb3V0X2xvZ2ZpbGVfYmFja3Vwcz0xMApzdGRvdXRfY2FwdHVyZV9\
tYXhieXRlcz0wCnN0ZG91dF9ldmVudHNfZW5hYmxlZD1mYWxzZQpzdGRlcnJfbG9nZmlsZT\
1BVVRPCnN0ZGVycl9sb2dmaWxlX21heGJ5dGVzPTUwTUIKc3RkZXJyX2xvZ2ZpbGVfYmFja\
3Vwcz0xMApzdGRlcnJfY2FwdHVyZV9tYXhieXRlcz0wCnN0ZGVycl9ldmVudHNfZW5hYmxl\
ZD1mYWxzZQplbnZpcm9ubWVudD0KRU9GCgp9CmVjaG8gJyMhL2Jpbi9iYXNoJyA+IC9ib2N\
rZXIuc2gKZWNobyAnIyBUaGlzIGZpbGUgaXMgZ2VuZXJhdGVkIGJ5IEJvY2tlci4nID4+IC\
9ib2NrZXIuc2gKZGVjbGFyZSAtZiA+PiAvYm9ja2VyLnNoCmVjaG8gJ2lmIFtbIC1uICIkQ\
CIgXV07IHRoZW4gJEA7IGZpOyAnID4+IC9ib2NrZXIuc2gKY2htb2QgNzU1IC9ib2NrZXIu\
c2gK\
  | base64 -d | bash

CMD ["/supervisor.sh"]
