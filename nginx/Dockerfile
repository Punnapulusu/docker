###############################################################
# Dockerfile generated by Bocker-v1.0. Do not edit this file. #
###############################################################

FROM icy/supervisor:latest
MAINTAINER Anh K. Huynh <kyanh@theslinux.org>

ENV DEBIAN_FRONTEND noninteractive
ENV NGINX_CHECKSUM 12bad312764feae50246685ab2e74512d1aa9b2f
ENV NGINX_VERSION 1.8.0
ENV WWW_UID 10005

# Bocker method => __ed_ship
# * The output is /bocker.sh in the result image.
# * List of methods:
#   - ed_apt_clean
#   - ed_apt_purge
#   - ed_nginx_build
#
# | set -eux
# | if [[ -f /bocker.sh ]]; then source /bocker.sh; fi
# | ed_apt_clean () 
# | { 
# |     rm -fv /var/cache/apt/*.bin;
# |     rm -fv /var/cache/apt/archives/*.*;
# |     rm -fv /var/lib/apt/lists/*.*;
# |     apt-get autoclean
# | }
# | ed_apt_purge () 
# | { 
# |     apt-get purge -y --auto-remove $@;
# |     ed_apt_clean
# | }
# | ed_nginx_build () 
# | { 
# |     _NGINX_NAME="nginx-${NGINX_VERSION}";
# |     _NGINX_FLAGS="
# |       --prefix=/usr/       --conf-path=/etc/nginx/nginx.conf
# |       --http-log-path=/var/log/nginx/access.log
# |       --error-log-path=/var/log/nginx/error.log
# |       --lock-path=/var/lock/nginx.lock
# |       --pid-path=/run/nginx.pid
# |       --http-client-body-temp-path=/var/lib/nginx/body
# |       --http-fastcgi-temp-path=/var/lib/nginx/fastcgi
# |       --http-proxy-temp-path=/var/lib/nginx/proxy
# |       --http-scgi-temp-path=/var/lib/nginx/scgi
# |       --http-uwsgi-temp-path=/var/lib/nginx/uwsgi
# |       --with-pcre
# |       --with-http_ssl_module
# |       --with-http_stub_status_module
# |       --with-http_realip_module
# |       --with-http_gzip_static_module
# |       --with-http_sub_module
# |     ";
# |     _NONSTANDARD_MODULES="";
# |     _D_BUILD="/usr/src/build/";
# |     _NONSTANDARD_MODULES="$(     find $_D_BUILD/modules/           -mindepth 1 -maxdepth 1 -type d       | while read _d; do           echo -en " --add-module=$_d";         done)";
# |     cd $_D_BUILD/$_NGINX_NAME;
# |     sed -i -e 's# bgcolor=\\"white\\"##g' -e 's#<center><h1>##g' -e 's#</h1></center>##g' -e '/NGINX_VER/d' -e '/>nginx</d' ./src/http/ngx_http_special_response.c;
# |     sh configure $_NGINX_FLAGS $_NONSTANDARD_MODULES;
# |     make;
# |     make install
# | }
# | echo '#!/bin/bash' > /bocker.sh
# | echo '# This file is generated by Bocker.' >> /bocker.sh
# | declare -f >> /bocker.sh
# | echo 'if [[ -n "$@" ]]; then $@; fi; ' >> /bocker.sh
# | chmod 755 /bocker.sh
#
RUN echo c2V0IC1ldXgKaWYgW1sgLWYgL2JvY2tlci5zaCBdXTsgdGhlbiBzb3VyY2UgL2JvY2tlci5zaDsgZmkKZWRfYXB0X2NsZWFuICgpIAp7IAogICAgcm0gLWZ2IC92YXIvY2FjaGUvYXB0LyouYmluOwogICAgcm0gLWZ2IC92YXIvY2FjaGUvYXB0L2FyY2hpdmVzLyouKjsKICAgIHJtIC1mdiAvdmFyL2xpYi9hcHQvbGlzdHMvKi4qOwogICAgYXB0LWdldCBhdXRvY2xlYW4KfQplZF9hcHRfcHVyZ2UgKCkgCnsgCiAgICBhcHQtZ2V0IHB1cmdlIC15IC0tYXV0by1yZW1vdmUgJEA7CiAgICBlZF9hcHRfY2xlYW4KfQplZF9uZ2lueF9idWlsZCAoKSAKeyAKICAgIF9OR0lOWF9OQU1FPSJuZ2lueC0ke05HSU5YX1ZFUlNJT059IjsKICAgIF9OR0lOWF9GTEFHUz0iCiAgICAgIC0tcHJlZml4PS91c3IvICAgICAgIC0tY29uZi1wYXRoPS9ldGMvbmdpbngvbmdpbnguY29uZgogICAgICAtLWh0dHAtbG9nLXBhdGg9L3Zhci9sb2cvbmdpbngvYWNjZXNzLmxvZwogICAgICAtLWVycm9yLWxvZy1wYXRoPS92YXIvbG9nL25naW54L2Vycm9yLmxvZwogICAgICAtLWxvY2stcGF0aD0vdmFyL2xvY2svbmdpbngubG9jawogICAgICAtLXBpZC1wYXRoPS9ydW4vbmdpbngucGlkCiAgICAgIC0taHR0cC1jbGllbnQtYm9keS10ZW1wLXBhdGg9L3Zhci9saWIvbmdpbngvYm9keQogICAgICAtLWh0dHAtZmFzdGNnaS10ZW1wLXBhdGg9L3Zhci9saWIvbmdpbngvZmFzdGNnaQogICAgICAtLWh0dHAtcHJveHktdGVtcC1wYXRoPS92YXIvbGliL25naW54L3Byb3h5CiAgICAgIC0taHR0cC1zY2dpLXRlbXAtcGF0aD0vdmFyL2xpYi9uZ2lueC9zY2dpCiAgICAgIC0taHR0cC11d3NnaS10ZW1wLXBhdGg9L3Zhci9saWIvbmdpbngvdXdzZ2kKICAgICAgLS13aXRoLXBjcmUKICAgICAgLS13aXRoLWh0dHBfc3NsX21vZHVsZQogICAgICAtLXdpdGgtaHR0cF9zdHViX3N0YXR1c19tb2R1bGUKICAgICAgLS13aXRoLWh0dHBfcmVhbGlwX21vZHVsZQogICAgICAtLXdpdGgtaHR0cF9nemlwX3N0YXRpY19tb2R1bGUKICAgICAgLS13aXRoLWh0dHBfc3ViX21vZHVsZQogICAgIjsKICAgIF9OT05TVEFOREFSRF9NT0RVTEVTPSIiOwogICAgX0RfQlVJTEQ9Ii91c3Ivc3JjL2J1aWxkLyI7CiAgICBfTk9OU1RBTkRBUkRfTU9EVUxFUz0iJCggICAgIGZpbmQgJF9EX0JVSUxEL21vZHVsZXMvICAgICAgICAgICAtbWluZGVwdGggMSAtbWF4ZGVwdGggMSAtdHlwZSBkICAgICAgIHwgd2hpbGUgcmVhZCBfZDsgZG8gICAgICAgICAgIGVjaG8gLWVuICIgLS1hZGQtbW9kdWxlPSRfZCI7ICAgICAgICAgZG9uZSkiOwogICAgY2QgJF9EX0JVSUxELyRfTkdJTlhfTkFNRTsKICAgIHNlZCAtaSAtZSAncyMgYmdjb2xvcj1cXCJ3aGl0ZVxcIiMjZycgLWUgJ3MjPGNlbnRlcj48aDE+IyNnJyAtZSAncyM8L2gxPjwvY2VudGVyPiMjZycgLWUgJy9OR0lOWF9WRVIvZCcgLWUgJy8+bmdpbng8L2QnIC4vc3JjL2h0dHAvbmd4X2h0dHBfc3BlY2lhbF9yZXNwb25zZS5jOwogICAgc2ggY29uZmlndXJlICRfTkdJTlhfRkxBR1MgJF9OT05TVEFOREFSRF9NT0RVTEVTOwogICAgbWFrZTsKICAgIG1ha2UgaW5zdGFsbAp9CmVjaG8gJyMhL2Jpbi9iYXNoJyA+IC9ib2NrZXIuc2gKZWNobyAnIyBUaGlzIGZpbGUgaXMgZ2VuZXJhdGVkIGJ5IEJvY2tlci4nID4+IC9ib2NrZXIuc2gKZGVjbGFyZSAtZiA+PiAvYm9ja2VyLnNoCmVjaG8gJ2lmIFtbIC1uICIkQCIgXV07IHRoZW4gJEA7IGZpOyAnID4+IC9ib2NrZXIuc2gKY2htb2QgNzU1IC9ib2NrZXIuc2gK | base64 -d | bash

# Bocker method => ed_nginx_download_and_install
#
# | set -eux
# | if [[ -f /bocker.sh ]]; then source /bocker.sh; fi
# | ed_nginx_download_and_install () 
# | { 
# |     apt-get update;
# |     apt-get install -y gcc libc6-dev make libpcre3-dev git nginx libssl-dev;
# |     mkdir -pv /usr/src/build/modules/;
# |     cd /usr/src/build/;
# |     curl -Lso- https://github.com/openresty/echo-nginx-module/archive/v0.57.tar.gz | tar -xzf - -C /usr/src/build/modules/;
# |     curl -Lso- https://github.com/openresty/headers-more-nginx-module/archive/v0.25.tar.gz | tar -xzf - -C /usr/src/build/modules/;
# |     curl -Lso /usr/src/build/nginx.tar.gz http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz;
# |     echo "$NGINX_CHECKSUM *nginx.tar.gz" | sha1sum -c -;
# |     tar -xzf nginx.tar.gz -C /usr/src/build/;
# |     ed_nginx_build;
# |     ed_apt_purge make libpcre3-dev git libssl-dev;
# |     { 
# |         echo "#!/bin/bash";
# |         echo "/bocker.sh ed_nginx_generate_config"
# |     } > /etc/s.supervisor/nginx.sh
# | }
# | ed_nginx_download_and_install
#
RUN echo c2V0IC1ldXgKaWYgW1sgLWYgL2JvY2tlci5zaCBdXTsgdGhlbiBzb3VyY2UgL2JvY2tlci5zaDsgZmkKZWRfbmdpbnhfZG93bmxvYWRfYW5kX2luc3RhbGwgKCkgCnsgCiAgICBhcHQtZ2V0IHVwZGF0ZTsKICAgIGFwdC1nZXQgaW5zdGFsbCAteSBnY2MgbGliYzYtZGV2IG1ha2UgbGlicGNyZTMtZGV2IGdpdCBuZ2lueCBsaWJzc2wtZGV2OwogICAgbWtkaXIgLXB2IC91c3Ivc3JjL2J1aWxkL21vZHVsZXMvOwogICAgY2QgL3Vzci9zcmMvYnVpbGQvOwogICAgY3VybCAtTHNvLSBodHRwczovL2dpdGh1Yi5jb20vb3BlbnJlc3R5L2VjaG8tbmdpbngtbW9kdWxlL2FyY2hpdmUvdjAuNTcudGFyLmd6IHwgdGFyIC14emYgLSAtQyAvdXNyL3NyYy9idWlsZC9tb2R1bGVzLzsKICAgIGN1cmwgLUxzby0gaHR0cHM6Ly9naXRodWIuY29tL29wZW5yZXN0eS9oZWFkZXJzLW1vcmUtbmdpbngtbW9kdWxlL2FyY2hpdmUvdjAuMjUudGFyLmd6IHwgdGFyIC14emYgLSAtQyAvdXNyL3NyYy9idWlsZC9tb2R1bGVzLzsKICAgIGN1cmwgLUxzbyAvdXNyL3NyYy9idWlsZC9uZ2lueC50YXIuZ3ogaHR0cDovL25naW54Lm9yZy9kb3dubG9hZC9uZ2lueC0ke05HSU5YX1ZFUlNJT059LnRhci5nejsKICAgIGVjaG8gIiROR0lOWF9DSEVDS1NVTSAqbmdpbngudGFyLmd6IiB8IHNoYTFzdW0gLWMgLTsKICAgIHRhciAteHpmIG5naW54LnRhci5neiAtQyAvdXNyL3NyYy9idWlsZC87CiAgICBlZF9uZ2lueF9idWlsZDsKICAgIGVkX2FwdF9wdXJnZSBtYWtlIGxpYnBjcmUzLWRldiBnaXQgbGlic3NsLWRldjsKICAgIHsgCiAgICAgICAgZWNobyAiIyEvYmluL2Jhc2giOwogICAgICAgIGVjaG8gIi9ib2NrZXIuc2ggZWRfbmdpbnhfZ2VuZXJhdGVfY29uZmlnIgogICAgfSA+IC9ldGMvcy5zdXBlcnZpc29yL25naW54LnNoCn0KZWRfbmdpbnhfZG93bmxvYWRfYW5kX2luc3RhbGwK | base64 -d | bash

ADD etc/nginx/ /etc/nginx/

# Bocker method => __ed_ship
# * The output is /bocker.sh in the result image.
# * List of methods:
#   - ed_nginx_daemonize
#   - ed_nginx_generate_config
#
# | set -eux
# | if [[ -f /bocker.sh ]]; then source /bocker.sh; fi
# | ed_nginx_daemonize () 
# | { 
# |     /usr/sbin/nginx -t -c /etc/nginx/nginx.conf || exit 1;
# |     exec /usr/sbin/nginx -c /etc/nginx/nginx.conf
# | }
# | ed_nginx_generate_config () 
# | { 
# |     chown -R www-data:www-data /var/lib/nginx;
# |     cat > /etc/s.supervisor/nginx.s  <<EOF
# | [program:nginx]
# | command=/bocker.sh ed_nginx_daemonize
# | process_name=%(program_name)s
# | numprocs=1
# | directory=/
# | umask=022
# | priority=999
# | autostart=true
# | autorestart=true
# | startsecs=1
# | startretries=3
# | exitcodes=0,2
# | stopsignal=TERM
# | stopwaitsecs=10
# | user=root
# | redirect_stderr=true
# | stdout_logfile=/supervisor/nginx.log
# | stdout_logfile_maxbytes=50MB
# | stdout_logfile_backups=10
# | stdout_capture_maxbytes=0
# | stdout_events_enabled=false
# | stderr_logfile=AUTO
# | stderr_logfile_maxbytes=50MB
# | stderr_logfile_backups=10
# | stderr_capture_maxbytes=0
# | stderr_events_enabled=false
# | environment=
# | EOF
# | 
# | }
# | echo '#!/bin/bash' > /bocker.sh
# | echo '# This file is generated by Bocker.' >> /bocker.sh
# | declare -f >> /bocker.sh
# | echo 'if [[ -n "$@" ]]; then $@; fi; ' >> /bocker.sh
# | chmod 755 /bocker.sh
#
RUN echo c2V0IC1ldXgKaWYgW1sgLWYgL2JvY2tlci5zaCBdXTsgdGhlbiBzb3VyY2UgL2JvY2tlci5zaDsgZmkKZWRfbmdpbnhfZGFlbW9uaXplICgpIAp7IAogICAgL3Vzci9zYmluL25naW54IC10IC1jIC9ldGMvbmdpbngvbmdpbnguY29uZiB8fCBleGl0IDE7CiAgICBleGVjIC91c3Ivc2Jpbi9uZ2lueCAtYyAvZXRjL25naW54L25naW54LmNvbmYKfQplZF9uZ2lueF9nZW5lcmF0ZV9jb25maWcgKCkgCnsgCiAgICBjaG93biAtUiB3d3ctZGF0YTp3d3ctZGF0YSAvdmFyL2xpYi9uZ2lueDsKICAgIGNhdCA+IC9ldGMvcy5zdXBlcnZpc29yL25naW54LnMgIDw8RU9GCltwcm9ncmFtOm5naW54XQpjb21tYW5kPS9ib2NrZXIuc2ggZWRfbmdpbnhfZGFlbW9uaXplCnByb2Nlc3NfbmFtZT0lKHByb2dyYW1fbmFtZSlzCm51bXByb2NzPTEKZGlyZWN0b3J5PS8KdW1hc2s9MDIyCnByaW9yaXR5PTk5OQphdXRvc3RhcnQ9dHJ1ZQphdXRvcmVzdGFydD10cnVlCnN0YXJ0c2Vjcz0xCnN0YXJ0cmV0cmllcz0zCmV4aXRjb2Rlcz0wLDIKc3RvcHNpZ25hbD1URVJNCnN0b3B3YWl0c2Vjcz0xMAp1c2VyPXJvb3QKcmVkaXJlY3Rfc3RkZXJyPXRydWUKc3Rkb3V0X2xvZ2ZpbGU9L3N1cGVydmlzb3IvbmdpbngubG9nCnN0ZG91dF9sb2dmaWxlX21heGJ5dGVzPTUwTUIKc3Rkb3V0X2xvZ2ZpbGVfYmFja3Vwcz0xMApzdGRvdXRfY2FwdHVyZV9tYXhieXRlcz0wCnN0ZG91dF9ldmVudHNfZW5hYmxlZD1mYWxzZQpzdGRlcnJfbG9nZmlsZT1BVVRPCnN0ZGVycl9sb2dmaWxlX21heGJ5dGVzPTUwTUIKc3RkZXJyX2xvZ2ZpbGVfYmFja3Vwcz0xMApzdGRlcnJfY2FwdHVyZV9tYXhieXRlcz0wCnN0ZGVycl9ldmVudHNfZW5hYmxlZD1mYWxzZQplbnZpcm9ubWVudD0KRU9GCgp9CmVjaG8gJyMhL2Jpbi9iYXNoJyA+IC9ib2NrZXIuc2gKZWNobyAnIyBUaGlzIGZpbGUgaXMgZ2VuZXJhdGVkIGJ5IEJvY2tlci4nID4+IC9ib2NrZXIuc2gKZGVjbGFyZSAtZiA+PiAvYm9ja2VyLnNoCmVjaG8gJ2lmIFtbIC1uICIkQCIgXV07IHRoZW4gJEA7IGZpOyAnID4+IC9ib2NrZXIuc2gKY2htb2QgNzU1IC9ib2NrZXIuc2gK | base64 -d | bash

CMD ["/supervisor.sh"]
