###############################################################
# Dockerfile generated by Bocker-v1.1. Do not edit this file. #
###############################################################

FROM debian:wheezy
MAINTAINER Anh K. Huynh <kyanh@theslinux.org>

# Bocker method => __ed_ship
# * The output is /bocker.sh in the result image.
# * List of methods:
#   - ed_apt_clean
#   - ed_apt_install
#   - ed_apt_purge
#
# | set -eux
# | if [[ -f /bocker.sh ]]; then source /bocker.sh; fi
# | ed_apt_clean () 
# | { 
# |     rm -fv /var/cache/apt/*.bin;
# |     rm -fv /var/cache/apt/archives/*.*;
# |     rm -fv /var/lib/apt/lists/*.*;
# |     apt-get autoclean
# | }
# | ed_apt_install () 
# | { 
# |     apt-get update;
# |     DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends $@
# | }
# | ed_apt_purge () 
# | { 
# |     apt-get purge -y --auto-remove $@;
# |     ed_apt_clean
# | }
# | echo '#!/bin/bash' > /bocker.sh
# | echo '# This file is generated by Bocker.' >> /bocker.sh
# | declare -f >> /bocker.sh
# | echo 'if [[ -n "$@" ]]; then $@; fi; ' >> /bocker.sh
# | chmod 755 /bocker.sh
#
RUN echo \
c2V0IC1ldXgKaWYgW1sgLWYgL2JvY2tlci5zaCBdXTsgdGhlbiBzb3VyY2UgL2JvY2tlci5\
zaDsgZmkKZWRfYXB0X2NsZWFuICgpIAp7IAogICAgcm0gLWZ2IC92YXIvY2FjaGUvYXB0Ly\
ouYmluOwogICAgcm0gLWZ2IC92YXIvY2FjaGUvYXB0L2FyY2hpdmVzLyouKjsKICAgIHJtI\
C1mdiAvdmFyL2xpYi9hcHQvbGlzdHMvKi4qOwogICAgYXB0LWdldCBhdXRvY2xlYW4KfQpl\
ZF9hcHRfaW5zdGFsbCAoKSAKeyAKICAgIGFwdC1nZXQgdXBkYXRlOwogICAgREVCSUFOX0Z\
ST05URU5EPW5vbmludGVyYWN0aXZlIGFwdC1nZXQgaW5zdGFsbCAteSAtLW5vLWluc3RhbG\
wtcmVjb21tZW5kcyAkQAp9CmVkX2FwdF9wdXJnZSAoKSAKeyAKICAgIGFwdC1nZXQgcHVyZ\
2UgLXkgLS1hdXRvLXJlbW92ZSAkQDsKICAgIGVkX2FwdF9jbGVhbgp9CmVjaG8gJyMhL2Jp\
bi9iYXNoJyA+IC9ib2NrZXIuc2gKZWNobyAnIyBUaGlzIGZpbGUgaXMgZ2VuZXJhdGVkIGJ\
5IEJvY2tlci4nID4+IC9ib2NrZXIuc2gKZGVjbGFyZSAtZiA+PiAvYm9ja2VyLnNoCmVjaG\
8gJ2lmIFtbIC1uICIkQCIgXV07IHRoZW4gJEA7IGZpOyAnID4+IC9ib2NrZXIuc2gKY2htb\
2QgNzU1IC9ib2NrZXIuc2gK\
  | base64 -d | bash

# Bocker method => ed_supervisor_install_base
#
# | set -eux
# | if [[ -f /bocker.sh ]]; then source /bocker.sh; fi
# | ed_supervisor_install_base () 
# | { 
# |     ed_apt_install supervisor cron exim4-daemon-light curl ca-certificates;
# |     ed_apt_clean;
# |     rm -rf /etc/supervisor/;
# |     mkdir -pv /etc/s.supervisor/ /supervisor/;
# |     ln -s /usr/bin/supervisorctl /usr/bin/s;
# |     rm -rf /var/log/exim4/ /var/spool/exim4/
# | }
# | ed_supervisor_install_base
#
RUN echo \
c2V0IC1ldXgKaWYgW1sgLWYgL2JvY2tlci5zaCBdXTsgdGhlbiBzb3VyY2UgL2JvY2tlci5\
zaDsgZmkKZWRfc3VwZXJ2aXNvcl9pbnN0YWxsX2Jhc2UgKCkgCnsgCiAgICBlZF9hcHRfaW\
5zdGFsbCBzdXBlcnZpc29yIGNyb24gZXhpbTQtZGFlbW9uLWxpZ2h0IGN1cmwgY2EtY2Vyd\
GlmaWNhdGVzOwogICAgZWRfYXB0X2NsZWFuOwogICAgcm0gLXJmIC9ldGMvc3VwZXJ2aXNv\
ci87CiAgICBta2RpciAtcHYgL2V0Yy9zLnN1cGVydmlzb3IvIC9zdXBlcnZpc29yLzsKICA\
gIGxuIC1zIC91c3IvYmluL3N1cGVydmlzb3JjdGwgL3Vzci9iaW4vczsKICAgIHJtIC1yZi\
AvdmFyL2xvZy9leGltNC8gL3Zhci9zcG9vbC9leGltNC8KfQplZF9zdXBlcnZpc29yX2luc\
3RhbGxfYmFzZQo=\
  | base64 -d | bash

# Bocker method => ed_supervisor_install_supervisor
#
# | set -eux
# | if [[ -f /bocker.sh ]]; then source /bocker.sh; fi
# | ed_supervisor_install_supervisor () 
# | { 
# |     ed_apt_install python-setuptools;
# |     curl -Lso /usr/bin/syslog-stdout.py https://raw.githubusercontent.com/icyfork/syslog-stdout/master/syslog-stdout.py;
# |     mkdir -pv /usr/src/pip/;
# |     cd /usr/src/pip/;
# |     curl -Lso - https://github.com/icyfork/supervisor-stdout/archive/master.tar.gz | tar -xzf - -C /usr/src/pip/ --strip-components=1;
# |     python2 setup.py install;
# |     cd /;
# |     rm -rf /usr/src/pip/;
# |     ed_apt_purge python-setuptools
# | }
# | ed_supervisor_install_supervisor
#
RUN echo \
c2V0IC1ldXgKaWYgW1sgLWYgL2JvY2tlci5zaCBdXTsgdGhlbiBzb3VyY2UgL2JvY2tlci5\
zaDsgZmkKZWRfc3VwZXJ2aXNvcl9pbnN0YWxsX3N1cGVydmlzb3IgKCkgCnsgCiAgICBlZF\
9hcHRfaW5zdGFsbCBweXRob24tc2V0dXB0b29sczsKICAgIGN1cmwgLUxzbyAvdXNyL2Jpb\
i9zeXNsb2ctc3Rkb3V0LnB5IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9p\
Y3lmb3JrL3N5c2xvZy1zdGRvdXQvbWFzdGVyL3N5c2xvZy1zdGRvdXQucHk7CiAgICBta2R\
pciAtcHYgL3Vzci9zcmMvcGlwLzsKICAgIGNkIC91c3Ivc3JjL3BpcC87CiAgICBjdXJsIC\
1Mc28gLSBodHRwczovL2dpdGh1Yi5jb20vaWN5Zm9yay9zdXBlcnZpc29yLXN0ZG91dC9hc\
mNoaXZlL21hc3Rlci50YXIuZ3ogfCB0YXIgLXh6ZiAtIC1DIC91c3Ivc3JjL3BpcC8gLS1z\
dHJpcC1jb21wb25lbnRzPTE7CiAgICBweXRob24yIHNldHVwLnB5IGluc3RhbGw7CiAgICB\
jZCAvOwogICAgcm0gLXJmIC91c3Ivc3JjL3BpcC87CiAgICBlZF9hcHRfcHVyZ2UgcHl0aG\
9uLXNldHVwdG9vbHMKfQplZF9zdXBlcnZpc29yX2luc3RhbGxfc3VwZXJ2aXNvcgo=\
  | base64 -d | bash

# Bocker method => ed_supervisor_install_init_script
#
# | set -eux
# | if [[ -f /bocker.sh ]]; then source /bocker.sh; fi
# | ed_supervisor_install_init_script () 
# | { 
# |     { 
# |         echo "#!/bin/bash";
# |         echo "/bocker.sh ed_cron_generate_config";
# |         echo "/bocker.sh ed_exim4_generate_config";
# |         echo "/bocker.sh ed_msyslog_generate_config";
# |         echo "exec /bocker.sh ed_supervisor_daemonize"
# |     } > /supervisor.sh;
# |     chmod 755 /supervisor.sh
# | }
# | ed_supervisor_install_init_script
#
RUN echo \
c2V0IC1ldXgKaWYgW1sgLWYgL2JvY2tlci5zaCBdXTsgdGhlbiBzb3VyY2UgL2JvY2tlci5\
zaDsgZmkKZWRfc3VwZXJ2aXNvcl9pbnN0YWxsX2luaXRfc2NyaXB0ICgpIAp7IAogICAgey\
AKICAgICAgICBlY2hvICIjIS9iaW4vYmFzaCI7CiAgICAgICAgZWNobyAiL2JvY2tlci5za\
CBlZF9jcm9uX2dlbmVyYXRlX2NvbmZpZyI7CiAgICAgICAgZWNobyAiL2JvY2tlci5zaCBl\
ZF9leGltNF9nZW5lcmF0ZV9jb25maWciOwogICAgICAgIGVjaG8gIi9ib2NrZXIuc2ggZWR\
fbXN5c2xvZ19nZW5lcmF0ZV9jb25maWciOwogICAgICAgIGVjaG8gImV4ZWMgL2JvY2tlci\
5zaCBlZF9zdXBlcnZpc29yX2RhZW1vbml6ZSIKICAgIH0gPiAvc3VwZXJ2aXNvci5zaDsKI\
CAgIGNobW9kIDc1NSAvc3VwZXJ2aXNvci5zaAp9CmVkX3N1cGVydmlzb3JfaW5zdGFsbF9p\
bml0X3NjcmlwdAo=\
  | base64 -d | bash

# Bocker methods:
# - ed_nginx_install_packages
# - ed_nginx_download_source
# - ed_nginx_build
# - ed_nginx_clean_up
# - ed_nginx_create_generator
#
# | set -eux
# | if [[ -f /bocker.sh ]]; then source /bocker.sh; fi
# | ed_nginx_install_packages () 
# | { 
# |     export NGINX_VERSION=1.8.0;
# |     export NGINX_CHECKSUM=12bad312764feae50246685ab2e74512d1aa9b2f;
# |     ed_apt_install gcc libc6-dev make libpcre3-dev git nginx libssl-dev
# | }
# | ed_nginx_download_source () 
# | { 
# |     mkdir -pv /usr/src/build/modules/;
# |     cd /usr/src/build/;
# |     curl -Lso- https://github.com/openresty/echo-nginx-module/archive/v0.57.tar.gz | tar -xzf - -C /usr/src/build/modules/;
# |     curl -Lso- https://github.com/openresty/headers-more-nginx-module/archive/v0.25.tar.gz | tar -xzf - -C /usr/src/build/modules/;
# |     curl -Lso /usr/src/build/nginx.tar.gz http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz;
# |     echo "$NGINX_CHECKSUM *nginx.tar.gz" | sha1sum -c -;
# |     tar -xzf nginx.tar.gz -C /usr/src/build/
# | }
# | ed_nginx_build () 
# | { 
# |     _NGINX_NAME="nginx-${NGINX_VERSION}";
# |     _NGINX_FLAGS="
# |       --prefix=/usr/       --conf-path=/etc/nginx/nginx.conf
# |       --http-log-path=/var/log/nginx/access.log
# |       --error-log-path=/var/log/nginx/error.log
# |       --lock-path=/var/lock/nginx.lock
# |       --pid-path=/run/nginx.pid
# |       --http-client-body-temp-path=/var/lib/nginx/body
# |       --http-fastcgi-temp-path=/var/lib/nginx/fastcgi
# |       --http-proxy-temp-path=/var/lib/nginx/proxy
# |       --http-scgi-temp-path=/var/lib/nginx/scgi
# |       --http-uwsgi-temp-path=/var/lib/nginx/uwsgi
# |       --with-pcre
# |       --with-http_ssl_module
# |       --with-http_stub_status_module
# |       --with-http_realip_module
# |       --with-http_gzip_static_module
# |       --with-http_sub_module
# |     ";
# |     _NONSTANDARD_MODULES="";
# |     _D_BUILD="/usr/src/build/";
# |     _NONSTANDARD_MODULES="$(     find $_D_BUILD/modules/           -mindepth 1 -maxdepth 1 -type d       | while read _d; do           echo -en " --add-module=$_d";         done)";
# |     cd $_D_BUILD/$_NGINX_NAME;
# |     sed -i -e 's# bgcolor=\\"white\\"##g' -e 's#<center><h1>##g' -e 's#</h1></center>##g' -e '/NGINX_VER/d' -e '/>nginx</d' ./src/http/ngx_http_special_response.c;
# |     sh configure $_NGINX_FLAGS $_NONSTANDARD_MODULES;
# |     make;
# |     make install
# | }
# | ed_nginx_clean_up () 
# | { 
# |     cd /;
# |     rm -rf /etc/nginx/ /usr/src/build/;
# |     ed_apt_purge make libpcre3-dev git libssl-dev
# | }
# | ed_nginx_create_generator () 
# | { 
# |     { 
# |         echo "#!/bin/bash";
# |         echo "/bocker.sh ed_nginx_generate_config"
# |     } > /etc/s.supervisor/nginx.sh
# | }
# | ed_nginx_install_packages
# | ed_nginx_download_source
# | ed_nginx_build
# | ed_nginx_clean_up
# | ed_nginx_create_generator
#
RUN echo \
c2V0IC1ldXgKaWYgW1sgLWYgL2JvY2tlci5zaCBdXTsgdGhlbiBzb3VyY2UgL2JvY2tlci5\
zaDsgZmkKZWRfbmdpbnhfaW5zdGFsbF9wYWNrYWdlcyAoKSAKeyAKICAgIGV4cG9ydCBOR0\
lOWF9WRVJTSU9OPTEuOC4wOwogICAgZXhwb3J0IE5HSU5YX0NIRUNLU1VNPTEyYmFkMzEyN\
zY0ZmVhZTUwMjQ2Njg1YWIyZTc0NTEyZDFhYTliMmY7CiAgICBlZF9hcHRfaW5zdGFsbCBn\
Y2MgbGliYzYtZGV2IG1ha2UgbGlicGNyZTMtZGV2IGdpdCBuZ2lueCBsaWJzc2wtZGV2Cn0\
KZWRfbmdpbnhfZG93bmxvYWRfc291cmNlICgpIAp7IAogICAgbWtkaXIgLXB2IC91c3Ivc3\
JjL2J1aWxkL21vZHVsZXMvOwogICAgY2QgL3Vzci9zcmMvYnVpbGQvOwogICAgY3VybCAtT\
HNvLSBodHRwczovL2dpdGh1Yi5jb20vb3BlbnJlc3R5L2VjaG8tbmdpbngtbW9kdWxlL2Fy\
Y2hpdmUvdjAuNTcudGFyLmd6IHwgdGFyIC14emYgLSAtQyAvdXNyL3NyYy9idWlsZC9tb2R\
1bGVzLzsKICAgIGN1cmwgLUxzby0gaHR0cHM6Ly9naXRodWIuY29tL29wZW5yZXN0eS9oZW\
FkZXJzLW1vcmUtbmdpbngtbW9kdWxlL2FyY2hpdmUvdjAuMjUudGFyLmd6IHwgdGFyIC14e\
mYgLSAtQyAvdXNyL3NyYy9idWlsZC9tb2R1bGVzLzsKICAgIGN1cmwgLUxzbyAvdXNyL3Ny\
Yy9idWlsZC9uZ2lueC50YXIuZ3ogaHR0cDovL25naW54Lm9yZy9kb3dubG9hZC9uZ2lueC0\
ke05HSU5YX1ZFUlNJT059LnRhci5nejsKICAgIGVjaG8gIiROR0lOWF9DSEVDS1NVTSAqbm\
dpbngudGFyLmd6IiB8IHNoYTFzdW0gLWMgLTsKICAgIHRhciAteHpmIG5naW54LnRhci5ne\
iAtQyAvdXNyL3NyYy9idWlsZC8KfQplZF9uZ2lueF9idWlsZCAoKSAKeyAKICAgIF9OR0lO\
WF9OQU1FPSJuZ2lueC0ke05HSU5YX1ZFUlNJT059IjsKICAgIF9OR0lOWF9GTEFHUz0iCiA\
gICAgIC0tcHJlZml4PS91c3IvICAgICAgIC0tY29uZi1wYXRoPS9ldGMvbmdpbngvbmdpbn\
guY29uZgogICAgICAtLWh0dHAtbG9nLXBhdGg9L3Zhci9sb2cvbmdpbngvYWNjZXNzLmxvZ\
wogICAgICAtLWVycm9yLWxvZy1wYXRoPS92YXIvbG9nL25naW54L2Vycm9yLmxvZwogICAg\
ICAtLWxvY2stcGF0aD0vdmFyL2xvY2svbmdpbngubG9jawogICAgICAtLXBpZC1wYXRoPS9\
ydW4vbmdpbngucGlkCiAgICAgIC0taHR0cC1jbGllbnQtYm9keS10ZW1wLXBhdGg9L3Zhci\
9saWIvbmdpbngvYm9keQogICAgICAtLWh0dHAtZmFzdGNnaS10ZW1wLXBhdGg9L3Zhci9sa\
WIvbmdpbngvZmFzdGNnaQogICAgICAtLWh0dHAtcHJveHktdGVtcC1wYXRoPS92YXIvbGli\
L25naW54L3Byb3h5CiAgICAgIC0taHR0cC1zY2dpLXRlbXAtcGF0aD0vdmFyL2xpYi9uZ2l\
ueC9zY2dpCiAgICAgIC0taHR0cC11d3NnaS10ZW1wLXBhdGg9L3Zhci9saWIvbmdpbngvdX\
dzZ2kKICAgICAgLS13aXRoLXBjcmUKICAgICAgLS13aXRoLWh0dHBfc3NsX21vZHVsZQogI\
CAgICAtLXdpdGgtaHR0cF9zdHViX3N0YXR1c19tb2R1bGUKICAgICAgLS13aXRoLWh0dHBf\
cmVhbGlwX21vZHVsZQogICAgICAtLXdpdGgtaHR0cF9nemlwX3N0YXRpY19tb2R1bGUKICA\
gICAgLS13aXRoLWh0dHBfc3ViX21vZHVsZQogICAgIjsKICAgIF9OT05TVEFOREFSRF9NT0\
RVTEVTPSIiOwogICAgX0RfQlVJTEQ9Ii91c3Ivc3JjL2J1aWxkLyI7CiAgICBfTk9OU1RBT\
kRBUkRfTU9EVUxFUz0iJCggICAgIGZpbmQgJF9EX0JVSUxEL21vZHVsZXMvICAgICAgICAg\
ICAtbWluZGVwdGggMSAtbWF4ZGVwdGggMSAtdHlwZSBkICAgICAgIHwgd2hpbGUgcmVhZCB\
fZDsgZG8gICAgICAgICAgIGVjaG8gLWVuICIgLS1hZGQtbW9kdWxlPSRfZCI7ICAgICAgIC\
AgZG9uZSkiOwogICAgY2QgJF9EX0JVSUxELyRfTkdJTlhfTkFNRTsKICAgIHNlZCAtaSAtZ\
SAncyMgYmdjb2xvcj1cXCJ3aGl0ZVxcIiMjZycgLWUgJ3MjPGNlbnRlcj48aDE+IyNnJyAt\
ZSAncyM8L2gxPjwvY2VudGVyPiMjZycgLWUgJy9OR0lOWF9WRVIvZCcgLWUgJy8+bmdpbng\
8L2QnIC4vc3JjL2h0dHAvbmd4X2h0dHBfc3BlY2lhbF9yZXNwb25zZS5jOwogICAgc2ggY2\
9uZmlndXJlICRfTkdJTlhfRkxBR1MgJF9OT05TVEFOREFSRF9NT0RVTEVTOwogICAgbWFrZ\
TsKICAgIG1ha2UgaW5zdGFsbAp9CmVkX25naW54X2NsZWFuX3VwICgpIAp7IAogICAgY2Qg\
LzsKICAgIHJtIC1yZiAvZXRjL25naW54LyAvdXNyL3NyYy9idWlsZC87CiAgICBlZF9hcHR\
fcHVyZ2UgbWFrZSBsaWJwY3JlMy1kZXYgZ2l0IGxpYnNzbC1kZXYKfQplZF9uZ2lueF9jcm\
VhdGVfZ2VuZXJhdG9yICgpIAp7IAogICAgeyAKICAgICAgICBlY2hvICIjIS9iaW4vYmFza\
CI7CiAgICAgICAgZWNobyAiL2JvY2tlci5zaCBlZF9uZ2lueF9nZW5lcmF0ZV9jb25maWci\
CiAgICB9ID4gL2V0Yy9zLnN1cGVydmlzb3Ivbmdpbnguc2gKfQplZF9uZ2lueF9pbnN0YWx\
sX3BhY2thZ2VzCmVkX25naW54X2Rvd25sb2FkX3NvdXJjZQplZF9uZ2lueF9idWlsZAplZF\
9uZ2lueF9jbGVhbl91cAplZF9uZ2lueF9jcmVhdGVfZ2VuZXJhdG9yCg==\
  | base64 -d | bash

ADD etc/nginx/ /etc/nginx/

# Bocker method => ed_phpfpm_install
#
# | set -eux
# | if [[ -f /bocker.sh ]]; then source /bocker.sh; fi
# | ed_phpfpm_install () 
# | { 
# |     ed_apt_install php5-mysql php5-curl php5-gd php5-cgi php-mail php5-fpm;
# |     ed_apt_clean;
# |     mkdir -p /phpfpm/www/ /phpfpm/var/ /phpfpm/logs/;
# |     { 
# |         echo "#!/bin/bash";
# |         echo "/bocker.sh ed_phpfpm_generate_config"
# |     } > /etc/s.supervisor/phpfpm.sh
# | }
# | ed_phpfpm_install
#
RUN echo \
c2V0IC1ldXgKaWYgW1sgLWYgL2JvY2tlci5zaCBdXTsgdGhlbiBzb3VyY2UgL2JvY2tlci5\
zaDsgZmkKZWRfcGhwZnBtX2luc3RhbGwgKCkgCnsgCiAgICBlZF9hcHRfaW5zdGFsbCBwaH\
A1LW15c3FsIHBocDUtY3VybCBwaHA1LWdkIHBocDUtY2dpIHBocC1tYWlsIHBocDUtZnBtO\
wogICAgZWRfYXB0X2NsZWFuOwogICAgbWtkaXIgLXAgL3BocGZwbS93d3cvIC9waHBmcG0v\
dmFyLyAvcGhwZnBtL2xvZ3MvOwogICAgeyAKICAgICAgICBlY2hvICIjIS9iaW4vYmFzaCI\
7CiAgICAgICAgZWNobyAiL2JvY2tlci5zaCBlZF9waHBmcG1fZ2VuZXJhdGVfY29uZmlnIg\
ogICAgfSA+IC9ldGMvcy5zdXBlcnZpc29yL3BocGZwbS5zaAp9CmVkX3BocGZwbV9pbnN0Y\
WxsCg==\
  | base64 -d | bash

ADD phpfpm.conf.default /phpfpm/

# Bocker method => __ed_ship
# * The output is /bocker.sh in the result image.
# * List of methods:
#   - ed_cron_daemonize
#   - ed_cron_generate_config
#   - ed_exim4_config_update
#   - ed_exim4_daemonize
#   - ed_exim4_generate_config
#   - ed_exim4_uid_gid_update
#   - ed_msyslog_damonize
#   - ed_msyslog_generate_config
#   - ed_nginx_daemonize
#   - ed_nginx_generate_config
#   - ed_phpfpm_daemonize
#   - ed_phpfpm_generate_config
#   - ed_phpfpm_generate_nginx_config
#   - ed_supervisor_daemonize
#   - ed_supervisor_execute_generators
#   - ed_supervisor_fix_uid_gid
#   - ed_supervisor_generate_base_config
#
# | set -eux
# | if [[ -f /bocker.sh ]]; then source /bocker.sh; fi
# | ed_cron_daemonize () 
# | { 
# |     if [[ "${CRON_ENABLE:-0}" == "0" ]]; then
# |         rm -f /etc/s.supervisor/cron.s;
# |         exit 0;
# |     fi;
# |     exec /usr/sbin/cron -f -L ${CRON_LOGLEVEL:-1}
# | }
# | ed_cron_generate_config () 
# | { 
# |     if [[ "${CRON_ENABLE:-0}" == "0" ]]; then
# |         rm -f /etc/s.supervisor/cron.s;
# |         exit 0;
# |     fi;
# |     cat > /etc/s.supervisor/cron.s  <<EOF
# | [program:cron]
# | command=/bocker.sh ed_cron_daemonize
# | process_name=%(program_name)s
# | numprocs=1
# | directory=/
# | umask=022
# | priority=999
# | autostart=true
# | autorestart=true
# | startsecs=1
# | startretries=3
# | exitcodes=0,2
# | stopsignal=TERM
# | stopwaitsecs=10
# | user=root
# | redirect_stderr=true
# | stdout_logfile=/supervisor/cron.log
# | stdout_logfile_maxbytes=50MB
# | stdout_logfile_backups=10
# | stdout_capture_maxbytes=0
# | stdout_events_enabled=false
# | stderr_logfile=AUTO
# | stderr_logfile_maxbytes=50MB
# | stderr_logfile_backups=10
# | stderr_capture_maxbytes=0
# | stderr_events_enabled=false
# | environment=
# | EOF
# | 
# | }
# | ed_exim4_config_update () 
# | { 
# |     local _other_names;
# |     if [[ "${EXIM4_MINE_CONFIG:-0}" != 0 ]]; then
# |         /usr/sbin/update-exim4.conf;
# |         return;
# |     fi;
# |     if [[ -z "${EXIM4_MAILNAME:-}" ]]; then
# |         EXIM4_MAILNAME="$(hostname -f)";
# |     fi;
# |     echo "$EXIM4_MAILNAME" > /etc/mailname;
# |     local _other_names="$EXIM4_MAILNAME";
# |     for _name in ${EXIM4_OTHER_NAMES:-};
# |     do
# |         _other_names="$_other_names ; $_name";
# |     done;
# |     cat > /etc/exim4/update-exim4.conf.conf  <<EOF
# | # This file is generated by Docker generator.
# | # Please do not edit this file.
# | dc_eximconfig_configtype='internet'
# | dc_other_hostnames='$_other_names'
# | dc_local_interfaces='127.0.0.1 ; ::1'
# | dc_readhost=''
# | dc_relay_domains=''
# | dc_minimaldns='false'
# | dc_relay_nets=''
# | dc_smarthost=''
# | CFILEMODE='644'
# | dc_use_split_config='true'
# | dc_hide_mailname=''
# | dc_mailname_in_oh='true'
# | dc_localdelivery='mail_spool'
# | EOF
# | 
# |     /usr/sbin/update-exim4.conf
# | }
# | ed_exim4_daemonize () 
# | { 
# |     if [[ "${EXIM4_ENABLE:-0}" == "0" ]]; then
# |         rm -f /etc/s.supervisor/exim4.s;
# |         exit 0;
# |     fi;
# |     exec /usr/sbin/exim4 -v -bdf -q30m
# | }
# | ed_exim4_generate_config () 
# | { 
# |     ed_exim4_uid_gid_update;
# |     ed_exim4_config_update;
# |     cat > /etc/s.supervisor/exim4.s  <<EOF
# | [program:exim4]
# | command=/bocker.sh ed_exim4_daemonize
# | process_name=%(program_name)s
# | numprocs=1
# | directory=/
# | umask=022
# | priority=999
# | autostart=true
# | autorestart=true
# | startsecs=1
# | startretries=3
# | exitcodes=0,2
# | stopsignal=TERM
# | stopwaitsecs=10
# | user=Debian-exim
# | redirect_stderr=true
# | stdout_logfile=/supervisor/exim4.log
# | stdout_logfile_maxbytes=50MB
# | stdout_logfile_backups=10
# | stdout_capture_maxbytes=0
# | stdout_events_enabled=false
# | stderr_logfile=AUTO
# | stderr_logfile_maxbytes=50MB
# | stderr_logfile_backups=10
# | stderr_capture_maxbytes=0
# | stderr_events_enabled=false
# | environment=
# | EOF
# | 
# | }
# | ed_exim4_uid_gid_update () 
# | { 
# |     if [[ "${EXIM4_ENABLE:-0}" == "0" ]]; then
# |         rm -f /etc/s.supervisor/exim4.s;
# |         exit 0;
# |     fi;
# |     EXIM4_UID="${EXIM4_UID:-10004}";
# |     EXIM4_GID="${EXIM4_GID:-10004}";
# |     groupmod -g "$EXIM4_GID" Debian-exim;
# |     usermod -g "$EXIM4_GID" -u "$EXIM4_UID" Debian-exim;
# |     mkdir -pv /var/log/exim4 /var/spool/exim4/;
# |     chmod 750 /var/log/exim4 /var/spool/exim4/;
# |     chown Debian-exim:Debian-exim -Rc /var/spool/exim4/;
# |     chown Debian-exim:Debian-exim -Rc /var/log/exim4/;
# |     chown root:Debian-exim /etc/exim4/passwd.client;
# |     ln -vs /var/mail/mail /var/mail/root || :
# | }
# | ed_msyslog_damonize () 
# | { 
# |     if [[ "${MSYSLOG_ENABLE:-0}" == "0" ]]; then
# |         rm -f /etc/s.supervisor/msyslog.s;
# |         exit 0;
# |     fi;
# |     exec python2 /usr/bin/syslog-stdout.py
# | }
# | ed_msyslog_generate_config () 
# | { 
# |     if [[ "${MSYSLOG_ENABLE:-0}" == "0" ]]; then
# |         rm -f /etc/s.supervisor/msyslog.s;
# |         exit 0;
# |     fi;
# |     cat > /etc/s.supervisor/msyslog.s  <<-EOF
# | [eventlistener:stdout]
# | command = supervisor_stdout
# | buffer_size = 100
# | events = PROCESS_LOG
# | result_handler = supervisor_stdout:event_handler
# | priority = 1
# | 
# | [program:msyslog]
# | command=/bocker.sh ed_msyslog_damonize
# | stdout_events_enabled = true
# | stderr_events_enabled = true
# | priority = 10
# | EOF
# | 
# | }
# | ed_nginx_daemonize () 
# | { 
# |     /usr/sbin/nginx -t -c /etc/nginx/nginx.conf || exit 1;
# |     exec /usr/sbin/nginx -c /etc/nginx/nginx.conf
# | }
# | ed_nginx_generate_config () 
# | { 
# |     chown -R www-data:www-data /var/lib/nginx;
# |     cat > /etc/s.supervisor/nginx.s  <<EOF
# | [program:nginx]
# | command=/bocker.sh ed_nginx_daemonize
# | process_name=%(program_name)s
# | numprocs=1
# | directory=/
# | umask=022
# | priority=999
# | autostart=true
# | autorestart=true
# | startsecs=1
# | startretries=3
# | exitcodes=0,2
# | stopsignal=TERM
# | stopwaitsecs=10
# | user=root
# | redirect_stderr=true
# | stdout_logfile=/supervisor/nginx.log
# | stdout_logfile_maxbytes=50MB
# | stdout_logfile_backups=10
# | stdout_capture_maxbytes=0
# | stdout_events_enabled=false
# | stderr_logfile=AUTO
# | stderr_logfile_maxbytes=50MB
# | stderr_logfile_backups=10
# | stderr_capture_maxbytes=0
# | stderr_events_enabled=false
# | environment=
# | EOF
# | 
# | }
# | ed_phpfpm_daemonize () 
# | { 
# |     exec /usr/sbin/php5-fpm -F -y /phpfpm/phpfpm.conf
# | }
# | ed_phpfpm_generate_config () 
# | { 
# |     local _F_CONFIG="/etc/nginx/sites/phpfpm.conf";
# |     export PHPFPM_DOMAIN="${PHPFPM_DOMAIN:-$(hostname -f || hostname)}";
# |     if [[ ! -f "$_F_CONFIG" ]]; then
# |         echo ":: Warning: Generating $_F_CONFIG)..." 1>&2;
# |         ed_phpfpm_generate_nginx_config > $_F_CONFIG;
# |     fi;
# |     _F_CONFIG="/phpfpm/phpfpm.conf";
# |     if [[ ! -f $_F_CONFIG ]]; then
# |         echo ":: Using the default configuration file..." 1>&2;
# |         cp -fv $_F_CONFIG.default $_F_CONFIG;
# |     fi;
# |     mkdir -pv /phpfpm/var/ /phpfpm/logs/;
# |     chown -c www-data:www-data /phpfpm/var/ /phpfpm/logs/;
# |     chmod -c 750 /phpfpm/var/ /phpfpm/logs/;
# |     cat > /etc/s.supervisor/phpfpm.s  <<EOF
# | [program:phpfpm]
# | command=/bocker.sh ed_phpfpm_daemonize
# | process_name=%(program_name)s
# | numprocs=1
# | directory=/
# | umask=022
# | priority=999
# | autostart=true
# | autorestart=true
# | startsecs=1
# | startretries=3
# | exitcodes=0,2
# | stopsignal=TERM
# | stopwaitsecs=10
# | user=www-data
# | redirect_stderr=true
# | stdout_logfile=/supervisor/phpfpm.log
# | stdout_logfile_maxbytes=50MB
# | stdout_logfile_backups=10
# | stdout_capture_maxbytes=0
# | stdout_events_enabled=false
# | stderr_logfile=AUTO
# | stderr_logfile_maxbytes=50MB
# | stderr_logfile_backups=10
# | stderr_capture_maxbytes=0
# | stderr_events_enabled=false
# | environment=
# | EOF
# | 
# | }
# | ed_phpfpm_generate_nginx_config () 
# | { 
# |     cat  <<-EOF
# |   server {
# |     listen       80;
# |     server_name  ${PHPFPM_DOMAIN} ${PHPFPM_OTHER_DOMAINS:-};
# |     root         /phpfpm/www/;
# | 
# |     index index.php index.html;
# | 
# |     error_log   /var/log/nginx/${PHPFPM_DOMAIN}.error.log;
# |     access_log  /var/log/nginx/${PHPFPM_DOMAIN}.acces.log main;
# | 
# |     include /etc/nginx/misc/security.conf;
# | 
# |     location ~ \.php$ {
# |       fastcgi_pass     unix:/phpfpm/var/phpfpm.sock;
# |       fastcgi_index    index.php;
# |       fastcgi_param    SCRIPT_FILENAME  /phpfpm/www/\$fastcgi_script_name;
# |       include          /etc/nginx/fastcgi_params;
# |     }
# |   }
# | EOF
# | 
# | }
# | ed_supervisor_daemonize () 
# | { 
# |     ed_supervisor_generate_base_config;
# |     ed_supervisor_fix_uid_gid;
# |     ed_supervisor_execute_generators;
# |     exec /usr/bin/supervisord --configuration /etc/supervisord.conf
# | }
# | ed_supervisor_execute_generators () 
# | { 
# |     while read FILE; do
# |         chmod -c 755 "$FILE";
# |         bash -n "$FILE" && { 
# |             echo ":: $FUNCNAME => $FILE..." 1>&2;
# |             bash "$FILE"
# |         } || true;
# |     done < <(find /etc/s.supervisor/ -type f -iname "*.sh" | sort)
# | }
# | ed_supervisor_fix_uid_gid () 
# | { 
# |     env | grep -E '^[A-Z0-9]+_UID=[0-9]+$' | awk -F '_UID=' '{
# |       name = tolower($1);
# |       if (name == "exim4") { name = "Debian-exim" ;}
# |       if (name == "www") { name = "www-data" ;}
# |       id = $2;
# |       if (id == 0) { id = 6000; }
# |       printf("groupmod -g %s %s || groupadd -g %s %s\n", id, name, id, name);
# |       printf("usermod -u %s -g %s %s || useradd -s /bin/true -u %s -g %s %s\n", id, id, name, id, id, name);
# |     }' | bash -x;
# |     env | grep -E '^[A-Z0-9]+_GID=[0-9]+$' | awk -F '_GID=' '{
# |       name = tolower($1);
# |       if (name == "exim4") { name = "Debian-exim" ;}
# |       if (name == "www") { name = "www-data" ;}
# |       id = $2;
# |       if (id == 0) { id = 6000; }
# |       printf("groupmod -g %s %s || groupadd -g %s %s\n", id, name, id, name);
# |     }' | bash -x
# | }
# | ed_supervisor_generate_base_config () 
# | { 
# |     cat > /etc/supervisord.conf  <<EOF
# | ;
# | ; supervisord main config file - v0.1
# | ; Do not edit this file
# | ;
# | 
# | [unix_http_server]
# | file=/var/run/supervisor.sock   ; (the path to the socket file)
# | chmod=0700                      ; sockef file mode (default 0700)
# | 
# | [supervisord]
# | nodaemon=true
# | logfile=/supervisor/__daemon.log ; (main log file;default $CWD/supervisord.log)
# | pidfile=/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
# | childlogdir=/supervisor/         ; ('AUTO' child log dir, default $TEMP)
# | logfile_maxbytes=50MB            ; (max main logfile bytes b4 rotation;default 50MB)
# | logfile_backups=10               ; (num of main logfile rotation backups;default 10)
# | loglevel=${SUPERVISOR_LOG_LEVEL:-info}             ; (log level;default info; others: debug,warn,trace)
# | 
# | ; the below section must remain in the config file for RPC
# | ; (supervisorctl/web interface) to work, additional interfaces may be
# | ; added by defining them in separate rpcinterface: sections
# | [rpcinterface:supervisor]
# | supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface
# | 
# | [supervisorctl]
# | serverurl=unix:///var/run/supervisor.sock ; use a unix:// URL  for a unix socket
# | 
# | [include]
# | files = /etc/s.supervisor/*.s
# | EOF
# | 
# | }
# | echo '#!/bin/bash' > /bocker.sh
# | echo '# This file is generated by Bocker.' >> /bocker.sh
# | declare -f >> /bocker.sh
# | echo 'if [[ -n "$@" ]]; then $@; fi; ' >> /bocker.sh
# | chmod 755 /bocker.sh
#
RUN echo \
c2V0IC1ldXgKaWYgW1sgLWYgL2JvY2tlci5zaCBdXTsgdGhlbiBzb3VyY2UgL2JvY2tlci5\
zaDsgZmkKZWRfY3Jvbl9kYWVtb25pemUgKCkgCnsgCiAgICBpZiBbWyAiJHtDUk9OX0VOQU\
JMRTotMH0iID09ICIwIiBdXTsgdGhlbgogICAgICAgIHJtIC1mIC9ldGMvcy5zdXBlcnZpc\
29yL2Nyb24uczsKICAgICAgICBleGl0IDA7CiAgICBmaTsKICAgIGV4ZWMgL3Vzci9zYmlu\
L2Nyb24gLWYgLUwgJHtDUk9OX0xPR0xFVkVMOi0xfQp9CmVkX2Nyb25fZ2VuZXJhdGVfY29\
uZmlnICgpIAp7IAogICAgaWYgW1sgIiR7Q1JPTl9FTkFCTEU6LTB9IiA9PSAiMCIgXV07IH\
RoZW4KICAgICAgICBybSAtZiAvZXRjL3Muc3VwZXJ2aXNvci9jcm9uLnM7CiAgICAgICAgZ\
XhpdCAwOwogICAgZmk7CiAgICBjYXQgPiAvZXRjL3Muc3VwZXJ2aXNvci9jcm9uLnMgIDw8\
RU9GCltwcm9ncmFtOmNyb25dCmNvbW1hbmQ9L2JvY2tlci5zaCBlZF9jcm9uX2RhZW1vbml\
6ZQpwcm9jZXNzX25hbWU9JShwcm9ncmFtX25hbWUpcwpudW1wcm9jcz0xCmRpcmVjdG9yeT\
0vCnVtYXNrPTAyMgpwcmlvcml0eT05OTkKYXV0b3N0YXJ0PXRydWUKYXV0b3Jlc3RhcnQ9d\
HJ1ZQpzdGFydHNlY3M9MQpzdGFydHJldHJpZXM9MwpleGl0Y29kZXM9MCwyCnN0b3BzaWdu\
YWw9VEVSTQpzdG9wd2FpdHNlY3M9MTAKdXNlcj1yb290CnJlZGlyZWN0X3N0ZGVycj10cnV\
lCnN0ZG91dF9sb2dmaWxlPS9zdXBlcnZpc29yL2Nyb24ubG9nCnN0ZG91dF9sb2dmaWxlX2\
1heGJ5dGVzPTUwTUIKc3Rkb3V0X2xvZ2ZpbGVfYmFja3Vwcz0xMApzdGRvdXRfY2FwdHVyZ\
V9tYXhieXRlcz0wCnN0ZG91dF9ldmVudHNfZW5hYmxlZD1mYWxzZQpzdGRlcnJfbG9nZmls\
ZT1BVVRPCnN0ZGVycl9sb2dmaWxlX21heGJ5dGVzPTUwTUIKc3RkZXJyX2xvZ2ZpbGVfYmF\
ja3Vwcz0xMApzdGRlcnJfY2FwdHVyZV9tYXhieXRlcz0wCnN0ZGVycl9ldmVudHNfZW5hYm\
xlZD1mYWxzZQplbnZpcm9ubWVudD0KRU9GCgp9CmVkX2V4aW00X2NvbmZpZ191cGRhdGUgK\
CkgCnsgCiAgICBsb2NhbCBfb3RoZXJfbmFtZXM7CiAgICBpZiBbWyAiJHtFWElNNF9NSU5F\
X0NPTkZJRzotMH0iICE9IDAgXV07IHRoZW4KICAgICAgICAvdXNyL3NiaW4vdXBkYXRlLWV\
4aW00LmNvbmY7CiAgICAgICAgcmV0dXJuOwogICAgZmk7CiAgICBpZiBbWyAteiAiJHtFWE\
lNNF9NQUlMTkFNRTotfSIgXV07IHRoZW4KICAgICAgICBFWElNNF9NQUlMTkFNRT0iJChob\
3N0bmFtZSAtZikiOwogICAgZmk7CiAgICBlY2hvICIkRVhJTTRfTUFJTE5BTUUiID4gL2V0\
Yy9tYWlsbmFtZTsKICAgIGxvY2FsIF9vdGhlcl9uYW1lcz0iJEVYSU00X01BSUxOQU1FIjs\
KICAgIGZvciBfbmFtZSBpbiAke0VYSU00X09USEVSX05BTUVTOi19OwogICAgZG8KICAgIC\
AgICBfb3RoZXJfbmFtZXM9IiRfb3RoZXJfbmFtZXMgOyAkX25hbWUiOwogICAgZG9uZTsKI\
CAgIGNhdCA+IC9ldGMvZXhpbTQvdXBkYXRlLWV4aW00LmNvbmYuY29uZiAgPDxFT0YKIyBU\
aGlzIGZpbGUgaXMgZ2VuZXJhdGVkIGJ5IERvY2tlciBnZW5lcmF0b3IuCiMgUGxlYXNlIGR\
vIG5vdCBlZGl0IHRoaXMgZmlsZS4KZGNfZXhpbWNvbmZpZ19jb25maWd0eXBlPSdpbnRlcm\
5ldCcKZGNfb3RoZXJfaG9zdG5hbWVzPSckX290aGVyX25hbWVzJwpkY19sb2NhbF9pbnRlc\
mZhY2VzPScxMjcuMC4wLjEgOyA6OjEnCmRjX3JlYWRob3N0PScnCmRjX3JlbGF5X2RvbWFp\
bnM9JycKZGNfbWluaW1hbGRucz0nZmFsc2UnCmRjX3JlbGF5X25ldHM9JycKZGNfc21hcnR\
ob3N0PScnCkNGSUxFTU9ERT0nNjQ0JwpkY191c2Vfc3BsaXRfY29uZmlnPSd0cnVlJwpkY1\
9oaWRlX21haWxuYW1lPScnCmRjX21haWxuYW1lX2luX29oPSd0cnVlJwpkY19sb2NhbGRlb\
Gl2ZXJ5PSdtYWlsX3Nwb29sJwpFT0YKCiAgICAvdXNyL3NiaW4vdXBkYXRlLWV4aW00LmNv\
bmYKfQplZF9leGltNF9kYWVtb25pemUgKCkgCnsgCiAgICBpZiBbWyAiJHtFWElNNF9FTkF\
CTEU6LTB9IiA9PSAiMCIgXV07IHRoZW4KICAgICAgICBybSAtZiAvZXRjL3Muc3VwZXJ2aX\
Nvci9leGltNC5zOwogICAgICAgIGV4aXQgMDsKICAgIGZpOwogICAgZXhlYyAvdXNyL3Nia\
W4vZXhpbTQgLXYgLWJkZiAtcTMwbQp9CmVkX2V4aW00X2dlbmVyYXRlX2NvbmZpZyAoKSAK\
eyAKICAgIGVkX2V4aW00X3VpZF9naWRfdXBkYXRlOwogICAgZWRfZXhpbTRfY29uZmlnX3V\
wZGF0ZTsKICAgIGNhdCA+IC9ldGMvcy5zdXBlcnZpc29yL2V4aW00LnMgIDw8RU9GCltwcm\
9ncmFtOmV4aW00XQpjb21tYW5kPS9ib2NrZXIuc2ggZWRfZXhpbTRfZGFlbW9uaXplCnByb\
2Nlc3NfbmFtZT0lKHByb2dyYW1fbmFtZSlzCm51bXByb2NzPTEKZGlyZWN0b3J5PS8KdW1h\
c2s9MDIyCnByaW9yaXR5PTk5OQphdXRvc3RhcnQ9dHJ1ZQphdXRvcmVzdGFydD10cnVlCnN\
0YXJ0c2Vjcz0xCnN0YXJ0cmV0cmllcz0zCmV4aXRjb2Rlcz0wLDIKc3RvcHNpZ25hbD1URV\
JNCnN0b3B3YWl0c2Vjcz0xMAp1c2VyPURlYmlhbi1leGltCnJlZGlyZWN0X3N0ZGVycj10c\
nVlCnN0ZG91dF9sb2dmaWxlPS9zdXBlcnZpc29yL2V4aW00LmxvZwpzdGRvdXRfbG9nZmls\
ZV9tYXhieXRlcz01ME1CCnN0ZG91dF9sb2dmaWxlX2JhY2t1cHM9MTAKc3Rkb3V0X2NhcHR\
1cmVfbWF4Ynl0ZXM9MApzdGRvdXRfZXZlbnRzX2VuYWJsZWQ9ZmFsc2UKc3RkZXJyX2xvZ2\
ZpbGU9QVVUTwpzdGRlcnJfbG9nZmlsZV9tYXhieXRlcz01ME1CCnN0ZGVycl9sb2dmaWxlX\
2JhY2t1cHM9MTAKc3RkZXJyX2NhcHR1cmVfbWF4Ynl0ZXM9MApzdGRlcnJfZXZlbnRzX2Vu\
YWJsZWQ9ZmFsc2UKZW52aXJvbm1lbnQ9CkVPRgoKfQplZF9leGltNF91aWRfZ2lkX3VwZGF\
0ZSAoKSAKeyAKICAgIGlmIFtbICIke0VYSU00X0VOQUJMRTotMH0iID09ICIwIiBdXTsgdG\
hlbgogICAgICAgIHJtIC1mIC9ldGMvcy5zdXBlcnZpc29yL2V4aW00LnM7CiAgICAgICAgZ\
XhpdCAwOwogICAgZmk7CiAgICBFWElNNF9VSUQ9IiR7RVhJTTRfVUlEOi0xMDAwNH0iOwog\
ICAgRVhJTTRfR0lEPSIke0VYSU00X0dJRDotMTAwMDR9IjsKICAgIGdyb3VwbW9kIC1nICI\
kRVhJTTRfR0lEIiBEZWJpYW4tZXhpbTsKICAgIHVzZXJtb2QgLWcgIiRFWElNNF9HSUQiIC\
11ICIkRVhJTTRfVUlEIiBEZWJpYW4tZXhpbTsKICAgIG1rZGlyIC1wdiAvdmFyL2xvZy9le\
GltNCAvdmFyL3Nwb29sL2V4aW00LzsKICAgIGNobW9kIDc1MCAvdmFyL2xvZy9leGltNCAv\
dmFyL3Nwb29sL2V4aW00LzsKICAgIGNob3duIERlYmlhbi1leGltOkRlYmlhbi1leGltIC1\
SYyAvdmFyL3Nwb29sL2V4aW00LzsKICAgIGNob3duIERlYmlhbi1leGltOkRlYmlhbi1leG\
ltIC1SYyAvdmFyL2xvZy9leGltNC87CiAgICBjaG93biByb290OkRlYmlhbi1leGltIC9ld\
GMvZXhpbTQvcGFzc3dkLmNsaWVudDsKICAgIGxuIC12cyAvdmFyL21haWwvbWFpbCAvdmFy\
L21haWwvcm9vdCB8fCA6Cn0KZWRfbXN5c2xvZ19kYW1vbml6ZSAoKSAKeyAKICAgIGlmIFt\
bICIke01TWVNMT0dfRU5BQkxFOi0wfSIgPT0gIjAiIF1dOyB0aGVuCiAgICAgICAgcm0gLW\
YgL2V0Yy9zLnN1cGVydmlzb3IvbXN5c2xvZy5zOwogICAgICAgIGV4aXQgMDsKICAgIGZpO\
wogICAgZXhlYyBweXRob24yIC91c3IvYmluL3N5c2xvZy1zdGRvdXQucHkKfQplZF9tc3lz\
bG9nX2dlbmVyYXRlX2NvbmZpZyAoKSAKeyAKICAgIGlmIFtbICIke01TWVNMT0dfRU5BQkx\
FOi0wfSIgPT0gIjAiIF1dOyB0aGVuCiAgICAgICAgcm0gLWYgL2V0Yy9zLnN1cGVydmlzb3\
IvbXN5c2xvZy5zOwogICAgICAgIGV4aXQgMDsKICAgIGZpOwogICAgY2F0ID4gL2V0Yy9zL\
nN1cGVydmlzb3IvbXN5c2xvZy5zICA8PC1FT0YKW2V2ZW50bGlzdGVuZXI6c3Rkb3V0XQpj\
b21tYW5kID0gc3VwZXJ2aXNvcl9zdGRvdXQKYnVmZmVyX3NpemUgPSAxMDAKZXZlbnRzID0\
gUFJPQ0VTU19MT0cKcmVzdWx0X2hhbmRsZXIgPSBzdXBlcnZpc29yX3N0ZG91dDpldmVudF\
9oYW5kbGVyCnByaW9yaXR5ID0gMQoKW3Byb2dyYW06bXN5c2xvZ10KY29tbWFuZD0vYm9ja\
2VyLnNoIGVkX21zeXNsb2dfZGFtb25pemUKc3Rkb3V0X2V2ZW50c19lbmFibGVkID0gdHJ1\
ZQpzdGRlcnJfZXZlbnRzX2VuYWJsZWQgPSB0cnVlCnByaW9yaXR5ID0gMTAKRU9GCgp9CmV\
kX25naW54X2RhZW1vbml6ZSAoKSAKeyAKICAgIC91c3Ivc2Jpbi9uZ2lueCAtdCAtYyAvZX\
RjL25naW54L25naW54LmNvbmYgfHwgZXhpdCAxOwogICAgZXhlYyAvdXNyL3NiaW4vbmdpb\
nggLWMgL2V0Yy9uZ2lueC9uZ2lueC5jb25mCn0KZWRfbmdpbnhfZ2VuZXJhdGVfY29uZmln\
ICgpIAp7IAogICAgY2hvd24gLVIgd3d3LWRhdGE6d3d3LWRhdGEgL3Zhci9saWIvbmdpbng\
7CiAgICBjYXQgPiAvZXRjL3Muc3VwZXJ2aXNvci9uZ2lueC5zICA8PEVPRgpbcHJvZ3JhbT\
puZ2lueF0KY29tbWFuZD0vYm9ja2VyLnNoIGVkX25naW54X2RhZW1vbml6ZQpwcm9jZXNzX\
25hbWU9JShwcm9ncmFtX25hbWUpcwpudW1wcm9jcz0xCmRpcmVjdG9yeT0vCnVtYXNrPTAy\
Mgpwcmlvcml0eT05OTkKYXV0b3N0YXJ0PXRydWUKYXV0b3Jlc3RhcnQ9dHJ1ZQpzdGFydHN\
lY3M9MQpzdGFydHJldHJpZXM9MwpleGl0Y29kZXM9MCwyCnN0b3BzaWduYWw9VEVSTQpzdG\
9wd2FpdHNlY3M9MTAKdXNlcj1yb290CnJlZGlyZWN0X3N0ZGVycj10cnVlCnN0ZG91dF9sb\
2dmaWxlPS9zdXBlcnZpc29yL25naW54LmxvZwpzdGRvdXRfbG9nZmlsZV9tYXhieXRlcz01\
ME1CCnN0ZG91dF9sb2dmaWxlX2JhY2t1cHM9MTAKc3Rkb3V0X2NhcHR1cmVfbWF4Ynl0ZXM\
9MApzdGRvdXRfZXZlbnRzX2VuYWJsZWQ9ZmFsc2UKc3RkZXJyX2xvZ2ZpbGU9QVVUTwpzdG\
RlcnJfbG9nZmlsZV9tYXhieXRlcz01ME1CCnN0ZGVycl9sb2dmaWxlX2JhY2t1cHM9MTAKc\
3RkZXJyX2NhcHR1cmVfbWF4Ynl0ZXM9MApzdGRlcnJfZXZlbnRzX2VuYWJsZWQ9ZmFsc2UK\
ZW52aXJvbm1lbnQ9CkVPRgoKfQplZF9waHBmcG1fZGFlbW9uaXplICgpIAp7IAogICAgZXh\
lYyAvdXNyL3NiaW4vcGhwNS1mcG0gLUYgLXkgL3BocGZwbS9waHBmcG0uY29uZgp9CmVkX3\
BocGZwbV9nZW5lcmF0ZV9jb25maWcgKCkgCnsgCiAgICBsb2NhbCBfRl9DT05GSUc9Ii9ld\
GMvbmdpbngvc2l0ZXMvcGhwZnBtLmNvbmYiOwogICAgZXhwb3J0IFBIUEZQTV9ET01BSU49\
IiR7UEhQRlBNX0RPTUFJTjotJChob3N0bmFtZSAtZiB8fCBob3N0bmFtZSl9IjsKICAgIGl\
mIFtbICEgLWYgIiRfRl9DT05GSUciIF1dOyB0aGVuCiAgICAgICAgZWNobyAiOjogV2Fybm\
luZzogR2VuZXJhdGluZyAkX0ZfQ09ORklHKS4uLiIgMT4mMjsKICAgICAgICBlZF9waHBmc\
G1fZ2VuZXJhdGVfbmdpbnhfY29uZmlnID4gJF9GX0NPTkZJRzsKICAgIGZpOwogICAgX0Zf\
Q09ORklHPSIvcGhwZnBtL3BocGZwbS5jb25mIjsKICAgIGlmIFtbICEgLWYgJF9GX0NPTkZ\
JRyBdXTsgdGhlbgogICAgICAgIGVjaG8gIjo6IFVzaW5nIHRoZSBkZWZhdWx0IGNvbmZpZ3\
VyYXRpb24gZmlsZS4uLiIgMT4mMjsKICAgICAgICBjcCAtZnYgJF9GX0NPTkZJRy5kZWZhd\
Wx0ICRfRl9DT05GSUc7CiAgICBmaTsKICAgIG1rZGlyIC1wdiAvcGhwZnBtL3Zhci8gL3Bo\
cGZwbS9sb2dzLzsKICAgIGNob3duIC1jIHd3dy1kYXRhOnd3dy1kYXRhIC9waHBmcG0vdmF\
yLyAvcGhwZnBtL2xvZ3MvOwogICAgY2htb2QgLWMgNzUwIC9waHBmcG0vdmFyLyAvcGhwZn\
BtL2xvZ3MvOwogICAgY2F0ID4gL2V0Yy9zLnN1cGVydmlzb3IvcGhwZnBtLnMgIDw8RU9GC\
ltwcm9ncmFtOnBocGZwbV0KY29tbWFuZD0vYm9ja2VyLnNoIGVkX3BocGZwbV9kYWVtb25p\
emUKcHJvY2Vzc19uYW1lPSUocHJvZ3JhbV9uYW1lKXMKbnVtcHJvY3M9MQpkaXJlY3Rvcnk\
9Lwp1bWFzaz0wMjIKcHJpb3JpdHk9OTk5CmF1dG9zdGFydD10cnVlCmF1dG9yZXN0YXJ0PX\
RydWUKc3RhcnRzZWNzPTEKc3RhcnRyZXRyaWVzPTMKZXhpdGNvZGVzPTAsMgpzdG9wc2lnb\
mFsPVRFUk0Kc3RvcHdhaXRzZWNzPTEwCnVzZXI9d3d3LWRhdGEKcmVkaXJlY3Rfc3RkZXJy\
PXRydWUKc3Rkb3V0X2xvZ2ZpbGU9L3N1cGVydmlzb3IvcGhwZnBtLmxvZwpzdGRvdXRfbG9\
nZmlsZV9tYXhieXRlcz01ME1CCnN0ZG91dF9sb2dmaWxlX2JhY2t1cHM9MTAKc3Rkb3V0X2\
NhcHR1cmVfbWF4Ynl0ZXM9MApzdGRvdXRfZXZlbnRzX2VuYWJsZWQ9ZmFsc2UKc3RkZXJyX\
2xvZ2ZpbGU9QVVUTwpzdGRlcnJfbG9nZmlsZV9tYXhieXRlcz01ME1CCnN0ZGVycl9sb2dm\
aWxlX2JhY2t1cHM9MTAKc3RkZXJyX2NhcHR1cmVfbWF4Ynl0ZXM9MApzdGRlcnJfZXZlbnR\
zX2VuYWJsZWQ9ZmFsc2UKZW52aXJvbm1lbnQ9CkVPRgoKfQplZF9waHBmcG1fZ2VuZXJhdG\
VfbmdpbnhfY29uZmlnICgpIAp7IAogICAgY2F0ICA8PC1FT0YKICBzZXJ2ZXIgewogICAgb\
GlzdGVuICAgICAgIDgwOwogICAgc2VydmVyX25hbWUgICR7UEhQRlBNX0RPTUFJTn0gJHtQ\
SFBGUE1fT1RIRVJfRE9NQUlOUzotfTsKICAgIHJvb3QgICAgICAgICAvcGhwZnBtL3d3dy8\
7CgogICAgaW5kZXggaW5kZXgucGhwIGluZGV4Lmh0bWw7CgogICAgZXJyb3JfbG9nICAgL3\
Zhci9sb2cvbmdpbngvJHtQSFBGUE1fRE9NQUlOfS5lcnJvci5sb2c7CiAgICBhY2Nlc3Nfb\
G9nICAvdmFyL2xvZy9uZ2lueC8ke1BIUEZQTV9ET01BSU59LmFjY2VzLmxvZyBtYWluOwoK\
ICAgIGluY2x1ZGUgL2V0Yy9uZ2lueC9taXNjL3NlY3VyaXR5LmNvbmY7CgogICAgbG9jYXR\
pb24gfiBcLnBocCQgewogICAgICBmYXN0Y2dpX3Bhc3MgICAgIHVuaXg6L3BocGZwbS92YX\
IvcGhwZnBtLnNvY2s7CiAgICAgIGZhc3RjZ2lfaW5kZXggICAgaW5kZXgucGhwOwogICAgI\
CBmYXN0Y2dpX3BhcmFtICAgIFNDUklQVF9GSUxFTkFNRSAgL3BocGZwbS93d3cvXCRmYXN0\
Y2dpX3NjcmlwdF9uYW1lOwogICAgICBpbmNsdWRlICAgICAgICAgIC9ldGMvbmdpbngvZmF\
zdGNnaV9wYXJhbXM7CiAgICB9CiAgfQpFT0YKCn0KZWRfc3VwZXJ2aXNvcl9kYWVtb25pem\
UgKCkgCnsgCiAgICBlZF9zdXBlcnZpc29yX2dlbmVyYXRlX2Jhc2VfY29uZmlnOwogICAgZ\
WRfc3VwZXJ2aXNvcl9maXhfdWlkX2dpZDsKICAgIGVkX3N1cGVydmlzb3JfZXhlY3V0ZV9n\
ZW5lcmF0b3JzOwogICAgZXhlYyAvdXNyL2Jpbi9zdXBlcnZpc29yZCAtLWNvbmZpZ3VyYXR\
pb24gL2V0Yy9zdXBlcnZpc29yZC5jb25mCn0KZWRfc3VwZXJ2aXNvcl9leGVjdXRlX2dlbm\
VyYXRvcnMgKCkgCnsgCiAgICB3aGlsZSByZWFkIEZJTEU7IGRvCiAgICAgICAgY2htb2QgL\
WMgNzU1ICIkRklMRSI7CiAgICAgICAgYmFzaCAtbiAiJEZJTEUiICYmIHsgCiAgICAgICAg\
ICAgIGVjaG8gIjo6ICRGVU5DTkFNRSA9PiAkRklMRS4uLiIgMT4mMjsKICAgICAgICAgICA\
gYmFzaCAiJEZJTEUiCiAgICAgICAgfSB8fCB0cnVlOwogICAgZG9uZSA8IDwoZmluZCAvZX\
RjL3Muc3VwZXJ2aXNvci8gLXR5cGUgZiAtaW5hbWUgIiouc2giIHwgc29ydCkKfQplZF9zd\
XBlcnZpc29yX2ZpeF91aWRfZ2lkICgpIAp7IAogICAgZW52IHwgZ3JlcCAtRSAnXltBLVow\
LTldK19VSUQ9WzAtOV0rJCcgfCBhd2sgLUYgJ19VSUQ9JyAnewogICAgICBuYW1lID0gdG9\
sb3dlcigkMSk7CiAgICAgIGlmIChuYW1lID09ICJleGltNCIpIHsgbmFtZSA9ICJEZWJpYW\
4tZXhpbSIgO30KICAgICAgaWYgKG5hbWUgPT0gInd3dyIpIHsgbmFtZSA9ICJ3d3ctZGF0Y\
SIgO30KICAgICAgaWQgPSAkMjsKICAgICAgaWYgKGlkID09IDApIHsgaWQgPSA2MDAwOyB9\
CiAgICAgIHByaW50ZigiZ3JvdXBtb2QgLWcgJXMgJXMgfHwgZ3JvdXBhZGQgLWcgJXMgJXN\
cbiIsIGlkLCBuYW1lLCBpZCwgbmFtZSk7CiAgICAgIHByaW50ZigidXNlcm1vZCAtdSAlcy\
AtZyAlcyAlcyB8fCB1c2VyYWRkIC1zIC9iaW4vdHJ1ZSAtdSAlcyAtZyAlcyAlc1xuIiwga\
WQsIGlkLCBuYW1lLCBpZCwgaWQsIG5hbWUpOwogICAgfScgfCBiYXNoIC14OwogICAgZW52\
IHwgZ3JlcCAtRSAnXltBLVowLTldK19HSUQ9WzAtOV0rJCcgfCBhd2sgLUYgJ19HSUQ9JyA\
newogICAgICBuYW1lID0gdG9sb3dlcigkMSk7CiAgICAgIGlmIChuYW1lID09ICJleGltNC\
IpIHsgbmFtZSA9ICJEZWJpYW4tZXhpbSIgO30KICAgICAgaWYgKG5hbWUgPT0gInd3dyIpI\
HsgbmFtZSA9ICJ3d3ctZGF0YSIgO30KICAgICAgaWQgPSAkMjsKICAgICAgaWYgKGlkID09\
IDApIHsgaWQgPSA2MDAwOyB9CiAgICAgIHByaW50ZigiZ3JvdXBtb2QgLWcgJXMgJXMgfHw\
gZ3JvdXBhZGQgLWcgJXMgJXNcbiIsIGlkLCBuYW1lLCBpZCwgbmFtZSk7CiAgICB9JyB8IG\
Jhc2ggLXgKfQplZF9zdXBlcnZpc29yX2dlbmVyYXRlX2Jhc2VfY29uZmlnICgpIAp7IAogI\
CAgY2F0ID4gL2V0Yy9zdXBlcnZpc29yZC5jb25mICA8PEVPRgo7Cjsgc3VwZXJ2aXNvcmQg\
bWFpbiBjb25maWcgZmlsZSAtIHYwLjEKOyBEbyBub3QgZWRpdCB0aGlzIGZpbGUKOwoKW3V\
uaXhfaHR0cF9zZXJ2ZXJdCmZpbGU9L3Zhci9ydW4vc3VwZXJ2aXNvci5zb2NrICAgOyAodG\
hlIHBhdGggdG8gdGhlIHNvY2tldCBmaWxlKQpjaG1vZD0wNzAwICAgICAgICAgICAgICAgI\
CAgICAgIDsgc29ja2VmIGZpbGUgbW9kZSAoZGVmYXVsdCAwNzAwKQoKW3N1cGVydmlzb3Jk\
XQpub2RhZW1vbj10cnVlCmxvZ2ZpbGU9L3N1cGVydmlzb3IvX19kYWVtb24ubG9nIDsgKG1\
haW4gbG9nIGZpbGU7ZGVmYXVsdCAkQ1dEL3N1cGVydmlzb3JkLmxvZykKcGlkZmlsZT0vdm\
FyL3J1bi9zdXBlcnZpc29yZC5waWQgOyAoc3VwZXJ2aXNvcmQgcGlkZmlsZTtkZWZhdWx0I\
HN1cGVydmlzb3JkLnBpZCkKY2hpbGRsb2dkaXI9L3N1cGVydmlzb3IvICAgICAgICAgOyAo\
J0FVVE8nIGNoaWxkIGxvZyBkaXIsIGRlZmF1bHQgJFRFTVApCmxvZ2ZpbGVfbWF4Ynl0ZXM\
9NTBNQiAgICAgICAgICAgIDsgKG1heCBtYWluIGxvZ2ZpbGUgYnl0ZXMgYjQgcm90YXRpb2\
47ZGVmYXVsdCA1ME1CKQpsb2dmaWxlX2JhY2t1cHM9MTAgICAgICAgICAgICAgICA7IChud\
W0gb2YgbWFpbiBsb2dmaWxlIHJvdGF0aW9uIGJhY2t1cHM7ZGVmYXVsdCAxMCkKbG9nbGV2\
ZWw9JHtTVVBFUlZJU09SX0xPR19MRVZFTDotaW5mb30gICAgICAgICAgICAgOyAobG9nIGx\
ldmVsO2RlZmF1bHQgaW5mbzsgb3RoZXJzOiBkZWJ1Zyx3YXJuLHRyYWNlKQoKOyB0aGUgYm\
Vsb3cgc2VjdGlvbiBtdXN0IHJlbWFpbiBpbiB0aGUgY29uZmlnIGZpbGUgZm9yIFJQQwo7I\
ChzdXBlcnZpc29yY3RsL3dlYiBpbnRlcmZhY2UpIHRvIHdvcmssIGFkZGl0aW9uYWwgaW50\
ZXJmYWNlcyBtYXkgYmUKOyBhZGRlZCBieSBkZWZpbmluZyB0aGVtIGluIHNlcGFyYXRlIHJ\
wY2ludGVyZmFjZTogc2VjdGlvbnMKW3JwY2ludGVyZmFjZTpzdXBlcnZpc29yXQpzdXBlcn\
Zpc29yLnJwY2ludGVyZmFjZV9mYWN0b3J5ID0gc3VwZXJ2aXNvci5ycGNpbnRlcmZhY2U6b\
WFrZV9tYWluX3JwY2ludGVyZmFjZQoKW3N1cGVydmlzb3JjdGxdCnNlcnZlcnVybD11bml4\
Oi8vL3Zhci9ydW4vc3VwZXJ2aXNvci5zb2NrIDsgdXNlIGEgdW5peDovLyBVUkwgIGZvciB\
hIHVuaXggc29ja2V0CgpbaW5jbHVkZV0KZmlsZXMgPSAvZXRjL3Muc3VwZXJ2aXNvci8qLn\
MKRU9GCgp9CmVjaG8gJyMhL2Jpbi9iYXNoJyA+IC9ib2NrZXIuc2gKZWNobyAnIyBUaGlzI\
GZpbGUgaXMgZ2VuZXJhdGVkIGJ5IEJvY2tlci4nID4+IC9ib2NrZXIuc2gKZGVjbGFyZSAt\
ZiA+PiAvYm9ja2VyLnNoCmVjaG8gJ2lmIFtbIC1uICIkQCIgXV07IHRoZW4gJEA7IGZpOyA\
nID4+IC9ib2NrZXIuc2gKY2htb2QgNzU1IC9ib2NrZXIuc2gK\
  | base64 -d | bash

ENV WWW_UID 10005

VOLUME /phpfpm/www/

CMD ["/supervisor.sh"]
