###############################################################
# Dockerfile generated by Bocker-v1.0. Do not edit this file. #
###############################################################

FROM debian:wheezy
MAINTAINER Anh K. Huynh <kyanh@theslinux.org>

ENV DEBIAN_FRONTEND noninteractive

# On Debian-based system, /bin/sh is /bin/dash by default.
RUN set -eux; echo 'dash dash/sh boolean false' | debconf-set-selections; dpkg-reconfigure -f noninteractive dash

# Bocker method => __ed_ship
# * The output is /bocker.sh in the result image.
# * List of methods: ed_apt_clean ed_apt_purge.
#
# | set -eux
# | if [[ -f /bocker.sh ]]; then source /bocker.sh; fi
# | ed_apt_clean () 
# | { 
# |     rm -fv /var/cache/apt/*.bin;
# |     rm -fv /var/cache/apt/archives/*.*;
# |     rm -fv /var/lib/apt/lists/*.*;
# |     apt-get autoclean
# | }
# | ed_apt_purge () 
# | { 
# |     apt-get purge -y --auto-remove $@;
# |     ed_apt_clean
# | }
# | echo '#!/bin/bash' > /bocker.sh
# | echo '# This file is generated by Bocker.' >> /bocker.sh
# | declare -f >> /bocker.sh
# | echo 'if [[ -n "$@" ]]; then $@; fi; ' >> /bocker.sh
# | chmod 755 /bocker.sh
#
RUN echo c2V0IC1ldXgKaWYgW1sgLWYgL2JvY2tlci5zaCBdXTsgdGhlbiBzb3VyY2UgL2JvY2tlci5zaDsgZmkKZWRfYXB0X2NsZWFuICgpIAp7IAogICAgcm0gLWZ2IC92YXIvY2FjaGUvYXB0LyouYmluOwogICAgcm0gLWZ2IC92YXIvY2FjaGUvYXB0L2FyY2hpdmVzLyouKjsKICAgIHJtIC1mdiAvdmFyL2xpYi9hcHQvbGlzdHMvKi4qOwogICAgYXB0LWdldCBhdXRvY2xlYW4KfQplZF9hcHRfcHVyZ2UgKCkgCnsgCiAgICBhcHQtZ2V0IHB1cmdlIC15IC0tYXV0by1yZW1vdmUgJEA7CiAgICBlZF9hcHRfY2xlYW4KfQplY2hvICcjIS9iaW4vYmFzaCcgPiAvYm9ja2VyLnNoCmVjaG8gJyMgVGhpcyBmaWxlIGlzIGdlbmVyYXRlZCBieSBCb2NrZXIuJyA+PiAvYm9ja2VyLnNoCmRlY2xhcmUgLWYgPj4gL2JvY2tlci5zaAplY2hvICdpZiBbWyAtbiAiJEAiIF1dOyB0aGVuICRAOyBmaTsgJyA+PiAvYm9ja2VyLnNoCmNobW9kIDc1NSAvYm9ja2VyLnNoCg== | base64 -d | bash

# Bocker method => ed_supervisor_install_base
#
# | set -eux
# | if [[ -f /bocker.sh ]]; then source /bocker.sh; fi
# | ed_supervisor_install_base () 
# | { 
# |     apt-get update;
# |     apt-get install -y supervisor cron exim4-daemon-light curl ca-certificates;
# |     ed_apt_clean;
# |     rm -rf /etc/supervisor/;
# |     mkdir -pv /etc/s.supervisor/ /supervisor/;
# |     ln -s /usr/bin/supervisorctl /usr/bin/s;
# |     rm -rf /var/log/exim4/ /var/spool/exim4/
# | }
# | ed_supervisor_install_base
#
RUN echo c2V0IC1ldXgKaWYgW1sgLWYgL2JvY2tlci5zaCBdXTsgdGhlbiBzb3VyY2UgL2JvY2tlci5zaDsgZmkKZWRfc3VwZXJ2aXNvcl9pbnN0YWxsX2Jhc2UgKCkgCnsgCiAgICBhcHQtZ2V0IHVwZGF0ZTsKICAgIGFwdC1nZXQgaW5zdGFsbCAteSBzdXBlcnZpc29yIGNyb24gZXhpbTQtZGFlbW9uLWxpZ2h0IGN1cmwgY2EtY2VydGlmaWNhdGVzOwogICAgZWRfYXB0X2NsZWFuOwogICAgcm0gLXJmIC9ldGMvc3VwZXJ2aXNvci87CiAgICBta2RpciAtcHYgL2V0Yy9zLnN1cGVydmlzb3IvIC9zdXBlcnZpc29yLzsKICAgIGxuIC1zIC91c3IvYmluL3N1cGVydmlzb3JjdGwgL3Vzci9iaW4vczsKICAgIHJtIC1yZiAvdmFyL2xvZy9leGltNC8gL3Zhci9zcG9vbC9leGltNC8KfQplZF9zdXBlcnZpc29yX2luc3RhbGxfYmFzZQo= | base64 -d | bash

# Bocker method => ed_supervisor_install_supervisor
#
# | set -eux
# | if [[ -f /bocker.sh ]]; then source /bocker.sh; fi
# | ed_supervisor_install_supervisor () 
# | { 
# |     apt-get update;
# |     apt-get install -y python-setuptools --no-install-recommends;
# |     curl -Lso /usr/bin/syslog-stdout.py https://raw.githubusercontent.com/icyfork/syslog-stdout/master/syslog-stdout.py;
# |     mkdir -pv /usr/src/pip/;
# |     cd /usr/src/pip/;
# |     curl -Lso - https://github.com/icyfork/supervisor-stdout/archive/master.tar.gz | tar -xzf - -C /usr/src/pip/ --strip-components=1;
# |     python2 setup.py install;
# |     cd /;
# |     rm -rf /usr/src/pip/;
# |     ed_apt_purge python-setuptools
# | }
# | ed_supervisor_install_supervisor
#
RUN echo c2V0IC1ldXgKaWYgW1sgLWYgL2JvY2tlci5zaCBdXTsgdGhlbiBzb3VyY2UgL2JvY2tlci5zaDsgZmkKZWRfc3VwZXJ2aXNvcl9pbnN0YWxsX3N1cGVydmlzb3IgKCkgCnsgCiAgICBhcHQtZ2V0IHVwZGF0ZTsKICAgIGFwdC1nZXQgaW5zdGFsbCAteSBweXRob24tc2V0dXB0b29scyAtLW5vLWluc3RhbGwtcmVjb21tZW5kczsKICAgIGN1cmwgLUxzbyAvdXNyL2Jpbi9zeXNsb2ctc3Rkb3V0LnB5IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9pY3lmb3JrL3N5c2xvZy1zdGRvdXQvbWFzdGVyL3N5c2xvZy1zdGRvdXQucHk7CiAgICBta2RpciAtcHYgL3Vzci9zcmMvcGlwLzsKICAgIGNkIC91c3Ivc3JjL3BpcC87CiAgICBjdXJsIC1Mc28gLSBodHRwczovL2dpdGh1Yi5jb20vaWN5Zm9yay9zdXBlcnZpc29yLXN0ZG91dC9hcmNoaXZlL21hc3Rlci50YXIuZ3ogfCB0YXIgLXh6ZiAtIC1DIC91c3Ivc3JjL3BpcC8gLS1zdHJpcC1jb21wb25lbnRzPTE7CiAgICBweXRob24yIHNldHVwLnB5IGluc3RhbGw7CiAgICBjZCAvOwogICAgcm0gLXJmIC91c3Ivc3JjL3BpcC87CiAgICBlZF9hcHRfcHVyZ2UgcHl0aG9uLXNldHVwdG9vbHMKfQplZF9zdXBlcnZpc29yX2luc3RhbGxfc3VwZXJ2aXNvcgo= | base64 -d | bash

# Bocker method => ed_supervisor_install_init_script
#
# | set -eux
# | if [[ -f /bocker.sh ]]; then source /bocker.sh; fi
# | ed_supervisor_install_init_script () 
# | { 
# |     { 
# |         echo "#!/bin/bash";
# |         echo "exec /bocker.sh ed_supervisor_daemonize"
# |     } > /supervisor.sh;
# |     chmod 755 /supervisor.sh
# | }
# | ed_supervisor_install_init_script
#
RUN echo c2V0IC1ldXgKaWYgW1sgLWYgL2JvY2tlci5zaCBdXTsgdGhlbiBzb3VyY2UgL2JvY2tlci5zaDsgZmkKZWRfc3VwZXJ2aXNvcl9pbnN0YWxsX2luaXRfc2NyaXB0ICgpIAp7IAogICAgeyAKICAgICAgICBlY2hvICIjIS9iaW4vYmFzaCI7CiAgICAgICAgZWNobyAiZXhlYyAvYm9ja2VyLnNoIGVkX3N1cGVydmlzb3JfZGFlbW9uaXplIgogICAgfSA+IC9zdXBlcnZpc29yLnNoOwogICAgY2htb2QgNzU1IC9zdXBlcnZpc29yLnNoCn0KZWRfc3VwZXJ2aXNvcl9pbnN0YWxsX2luaXRfc2NyaXB0Cg== | base64 -d | bash

RUN chmod 700 /supervisor.sh

ADD supervisor/*.sh supervisor/*.s /etc/s.supervisor/

# Bocker method => __ed_ship
# * The output is /bocker.sh in the result image.
# * List of methods: ed_cron_daemonize ed_cron_generate_config ed_supervisor_daemonize ed_supervisor_execute_generators ed_supervisor_fix_uid_gid ed_supervisor_generate_base_config.
#
# | set -eux
# | if [[ -f /bocker.sh ]]; then source /bocker.sh; fi
# | ed_cron_daemonize () 
# | { 
# |     if [[ "${CRON_ENABLE:-0}" == "0" ]]; then
# |         rm -f /etc/s.supervisor/cron.s;
# |         exit 0;
# |     fi;
# |     exec /usr/sbin/cron -f -L ${CRON_LOGLEVEL:-1}
# | }
# | ed_cron_generate_config () 
# | { 
# |     cat > /etc/s.supervisor/cron.s  <<EOF
# | [program:cron]
# | command=/bocker.sh ed_cron_daemonize
# | process_name=%(program_name)s
# | numprocs=1
# | directory=/
# | umask=022
# | priority=999
# | autostart=true
# | autorestart=true
# | startsecs=1
# | startretries=3
# | exitcodes=0,2
# | stopsignal=TERM
# | stopwaitsecs=10
# | user=root
# | redirect_stderr=true
# | stdout_logfile=/supervisor/cron.log
# | stdout_logfile_maxbytes=50MB
# | stdout_logfile_backups=10
# | stdout_capture_maxbytes=0
# | stdout_events_enabled=false
# | stderr_logfile=AUTO
# | stderr_logfile_maxbytes=50MB
# | stderr_logfile_backups=10
# | stderr_capture_maxbytes=0
# | stderr_events_enabled=false
# | environment=
# | EOF
# | 
# | }
# | ed_supervisor_daemonize () 
# | { 
# |     ed_supervisor_generate_base_config;
# |     ed_supervisor_fix_uid_gid;
# |     ed_supervisor_execute_generators;
# |     exec /usr/bin/supervisord --configuration /etc/supervisord.conf
# | }
# | ed_supervisor_execute_generators () 
# | { 
# |     while read FILE; do
# |         chmod -c 755 "$FILE";
# |         bash -n "$FILE" && { 
# |             echo ":: $FUNCNAME => $FILE..." 1>&2;
# |             bash "$FILE"
# |         } || true;
# |     done < <(find /etc/s.supervisor/ -type f -iname "*.sh" | sort)
# | }
# | ed_supervisor_fix_uid_gid () 
# | { 
# |     env | grep -E '^[A-Z0-9]+_UID=[0-9]+$' | awk -F '_UID=' '{
# |       name = tolower($1);
# |       if (name == "exim4") { name = "Debian-exim" ;}
# |       if (name == "www") { name = "www-data" ;}
# |       id = $2;
# |       if (id == 0) { id = 6000; }
# |       printf("groupmod -g %s %s || groupadd -g %s %s\n", id, name, id, name);
# |       printf("usermod -u %s -g %s %s || useradd -s /bin/true -u %s -g %s %s\n", id, id, name, id, id, name);
# |     }' | bash -x;
# |     env | grep -E '^[A-Z0-9]+_GID=[0-9]+$' | awk -F '_GID=' '{
# |       name = tolower($1);
# |       if (name == "exim4") { name = "Debian-exim" ;}
# |       if (name == "www") { name = "www-data" ;}
# |       id = $2;
# |       if (id == 0) { id = 6000; }
# |       printf("groupmod -g %s %s || groupadd -g %s %s\n", id, name, id, name);
# |     }' | bash -x
# | }
# | ed_supervisor_generate_base_config () 
# | { 
# |     cat > /etc/supervisord.conf  <<EOF
# | ;
# | ; supervisord main config file - v0.1
# | ; Do not edit this file
# | ;
# | 
# | [unix_http_server]
# | file=/var/run/supervisor.sock   ; (the path to the socket file)
# | chmod=0700                      ; sockef file mode (default 0700)
# | 
# | [supervisord]
# | nodaemon=true
# | logfile=/supervisor/__daemon.log ; (main log file;default $CWD/supervisord.log)
# | pidfile=/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
# | childlogdir=/supervisor/         ; ('AUTO' child log dir, default $TEMP)
# | logfile_maxbytes=50MB            ; (max main logfile bytes b4 rotation;default 50MB)
# | logfile_backups=10               ; (num of main logfile rotation backups;default 10)
# | loglevel=${SUPERVISOR_LOG_LEVEL:-info}             ; (log level;default info; others: debug,warn,trace)
# | 
# | ; the below section must remain in the config file for RPC
# | ; (supervisorctl/web interface) to work, additional interfaces may be
# | ; added by defining them in separate rpcinterface: sections
# | [rpcinterface:supervisor]
# | supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface
# | 
# | [supervisorctl]
# | serverurl=unix:///var/run/supervisor.sock ; use a unix:// URL  for a unix socket
# | 
# | [include]
# | files = /etc/s.supervisor/*.s
# | EOF
# | 
# | }
# | echo '#!/bin/bash' > /bocker.sh
# | echo '# This file is generated by Bocker.' >> /bocker.sh
# | declare -f >> /bocker.sh
# | echo 'if [[ -n "$@" ]]; then $@; fi; ' >> /bocker.sh
# | chmod 755 /bocker.sh
#
RUN echo c2V0IC1ldXgKaWYgW1sgLWYgL2JvY2tlci5zaCBdXTsgdGhlbiBzb3VyY2UgL2JvY2tlci5zaDsgZmkKZWRfY3Jvbl9kYWVtb25pemUgKCkgCnsgCiAgICBpZiBbWyAiJHtDUk9OX0VOQUJMRTotMH0iID09ICIwIiBdXTsgdGhlbgogICAgICAgIHJtIC1mIC9ldGMvcy5zdXBlcnZpc29yL2Nyb24uczsKICAgICAgICBleGl0IDA7CiAgICBmaTsKICAgIGV4ZWMgL3Vzci9zYmluL2Nyb24gLWYgLUwgJHtDUk9OX0xPR0xFVkVMOi0xfQp9CmVkX2Nyb25fZ2VuZXJhdGVfY29uZmlnICgpIAp7IAogICAgY2F0ID4gL2V0Yy9zLnN1cGVydmlzb3IvY3Jvbi5zICA8PEVPRgpbcHJvZ3JhbTpjcm9uXQpjb21tYW5kPS9ib2NrZXIuc2ggZWRfY3Jvbl9kYWVtb25pemUKcHJvY2Vzc19uYW1lPSUocHJvZ3JhbV9uYW1lKXMKbnVtcHJvY3M9MQpkaXJlY3Rvcnk9Lwp1bWFzaz0wMjIKcHJpb3JpdHk9OTk5CmF1dG9zdGFydD10cnVlCmF1dG9yZXN0YXJ0PXRydWUKc3RhcnRzZWNzPTEKc3RhcnRyZXRyaWVzPTMKZXhpdGNvZGVzPTAsMgpzdG9wc2lnbmFsPVRFUk0Kc3RvcHdhaXRzZWNzPTEwCnVzZXI9cm9vdApyZWRpcmVjdF9zdGRlcnI9dHJ1ZQpzdGRvdXRfbG9nZmlsZT0vc3VwZXJ2aXNvci9jcm9uLmxvZwpzdGRvdXRfbG9nZmlsZV9tYXhieXRlcz01ME1CCnN0ZG91dF9sb2dmaWxlX2JhY2t1cHM9MTAKc3Rkb3V0X2NhcHR1cmVfbWF4Ynl0ZXM9MApzdGRvdXRfZXZlbnRzX2VuYWJsZWQ9ZmFsc2UKc3RkZXJyX2xvZ2ZpbGU9QVVUTwpzdGRlcnJfbG9nZmlsZV9tYXhieXRlcz01ME1CCnN0ZGVycl9sb2dmaWxlX2JhY2t1cHM9MTAKc3RkZXJyX2NhcHR1cmVfbWF4Ynl0ZXM9MApzdGRlcnJfZXZlbnRzX2VuYWJsZWQ9ZmFsc2UKZW52aXJvbm1lbnQ9CkVPRgoKfQplZF9zdXBlcnZpc29yX2RhZW1vbml6ZSAoKSAKeyAKICAgIGVkX3N1cGVydmlzb3JfZ2VuZXJhdGVfYmFzZV9jb25maWc7CiAgICBlZF9zdXBlcnZpc29yX2ZpeF91aWRfZ2lkOwogICAgZWRfc3VwZXJ2aXNvcl9leGVjdXRlX2dlbmVyYXRvcnM7CiAgICBleGVjIC91c3IvYmluL3N1cGVydmlzb3JkIC0tY29uZmlndXJhdGlvbiAvZXRjL3N1cGVydmlzb3JkLmNvbmYKfQplZF9zdXBlcnZpc29yX2V4ZWN1dGVfZ2VuZXJhdG9ycyAoKSAKeyAKICAgIHdoaWxlIHJlYWQgRklMRTsgZG8KICAgICAgICBjaG1vZCAtYyA3NTUgIiRGSUxFIjsKICAgICAgICBiYXNoIC1uICIkRklMRSIgJiYgeyAKICAgICAgICAgICAgZWNobyAiOjogJEZVTkNOQU1FID0+ICRGSUxFLi4uIiAxPiYyOwogICAgICAgICAgICBiYXNoICIkRklMRSIKICAgICAgICB9IHx8IHRydWU7CiAgICBkb25lIDwgPChmaW5kIC9ldGMvcy5zdXBlcnZpc29yLyAtdHlwZSBmIC1pbmFtZSAiKi5zaCIgfCBzb3J0KQp9CmVkX3N1cGVydmlzb3JfZml4X3VpZF9naWQgKCkgCnsgCiAgICBlbnYgfCBncmVwIC1FICdeW0EtWjAtOV0rX1VJRD1bMC05XSskJyB8IGF3ayAtRiAnX1VJRD0nICd7CiAgICAgIG5hbWUgPSB0b2xvd2VyKCQxKTsKICAgICAgaWYgKG5hbWUgPT0gImV4aW00IikgeyBuYW1lID0gIkRlYmlhbi1leGltIiA7fQogICAgICBpZiAobmFtZSA9PSAid3d3IikgeyBuYW1lID0gInd3dy1kYXRhIiA7fQogICAgICBpZCA9ICQyOwogICAgICBpZiAoaWQgPT0gMCkgeyBpZCA9IDYwMDA7IH0KICAgICAgcHJpbnRmKCJncm91cG1vZCAtZyAlcyAlcyB8fCBncm91cGFkZCAtZyAlcyAlc1xuIiwgaWQsIG5hbWUsIGlkLCBuYW1lKTsKICAgICAgcHJpbnRmKCJ1c2VybW9kIC11ICVzIC1nICVzICVzIHx8IHVzZXJhZGQgLXMgL2Jpbi90cnVlIC11ICVzIC1nICVzICVzXG4iLCBpZCwgaWQsIG5hbWUsIGlkLCBpZCwgbmFtZSk7CiAgICB9JyB8IGJhc2ggLXg7CiAgICBlbnYgfCBncmVwIC1FICdeW0EtWjAtOV0rX0dJRD1bMC05XSskJyB8IGF3ayAtRiAnX0dJRD0nICd7CiAgICAgIG5hbWUgPSB0b2xvd2VyKCQxKTsKICAgICAgaWYgKG5hbWUgPT0gImV4aW00IikgeyBuYW1lID0gIkRlYmlhbi1leGltIiA7fQogICAgICBpZiAobmFtZSA9PSAid3d3IikgeyBuYW1lID0gInd3dy1kYXRhIiA7fQogICAgICBpZCA9ICQyOwogICAgICBpZiAoaWQgPT0gMCkgeyBpZCA9IDYwMDA7IH0KICAgICAgcHJpbnRmKCJncm91cG1vZCAtZyAlcyAlcyB8fCBncm91cGFkZCAtZyAlcyAlc1xuIiwgaWQsIG5hbWUsIGlkLCBuYW1lKTsKICAgIH0nIHwgYmFzaCAteAp9CmVkX3N1cGVydmlzb3JfZ2VuZXJhdGVfYmFzZV9jb25maWcgKCkgCnsgCiAgICBjYXQgPiAvZXRjL3N1cGVydmlzb3JkLmNvbmYgIDw8RU9GCjsKOyBzdXBlcnZpc29yZCBtYWluIGNvbmZpZyBmaWxlIC0gdjAuMQo7IERvIG5vdCBlZGl0IHRoaXMgZmlsZQo7CgpbdW5peF9odHRwX3NlcnZlcl0KZmlsZT0vdmFyL3J1bi9zdXBlcnZpc29yLnNvY2sgICA7ICh0aGUgcGF0aCB0byB0aGUgc29ja2V0IGZpbGUpCmNobW9kPTA3MDAgICAgICAgICAgICAgICAgICAgICAgOyBzb2NrZWYgZmlsZSBtb2RlIChkZWZhdWx0IDA3MDApCgpbc3VwZXJ2aXNvcmRdCm5vZGFlbW9uPXRydWUKbG9nZmlsZT0vc3VwZXJ2aXNvci9fX2RhZW1vbi5sb2cgOyAobWFpbiBsb2cgZmlsZTtkZWZhdWx0ICRDV0Qvc3VwZXJ2aXNvcmQubG9nKQpwaWRmaWxlPS92YXIvcnVuL3N1cGVydmlzb3JkLnBpZCA7IChzdXBlcnZpc29yZCBwaWRmaWxlO2RlZmF1bHQgc3VwZXJ2aXNvcmQucGlkKQpjaGlsZGxvZ2Rpcj0vc3VwZXJ2aXNvci8gICAgICAgICA7ICgnQVVUTycgY2hpbGQgbG9nIGRpciwgZGVmYXVsdCAkVEVNUCkKbG9nZmlsZV9tYXhieXRlcz01ME1CICAgICAgICAgICAgOyAobWF4IG1haW4gbG9nZmlsZSBieXRlcyBiNCByb3RhdGlvbjtkZWZhdWx0IDUwTUIpCmxvZ2ZpbGVfYmFja3Vwcz0xMCAgICAgICAgICAgICAgIDsgKG51bSBvZiBtYWluIGxvZ2ZpbGUgcm90YXRpb24gYmFja3VwcztkZWZhdWx0IDEwKQpsb2dsZXZlbD0ke1NVUEVSVklTT1JfTE9HX0xFVkVMOi1pbmZvfSAgICAgICAgICAgICA7IChsb2cgbGV2ZWw7ZGVmYXVsdCBpbmZvOyBvdGhlcnM6IGRlYnVnLHdhcm4sdHJhY2UpCgo7IHRoZSBiZWxvdyBzZWN0aW9uIG11c3QgcmVtYWluIGluIHRoZSBjb25maWcgZmlsZSBmb3IgUlBDCjsgKHN1cGVydmlzb3JjdGwvd2ViIGludGVyZmFjZSkgdG8gd29yaywgYWRkaXRpb25hbCBpbnRlcmZhY2VzIG1heSBiZQo7IGFkZGVkIGJ5IGRlZmluaW5nIHRoZW0gaW4gc2VwYXJhdGUgcnBjaW50ZXJmYWNlOiBzZWN0aW9ucwpbcnBjaW50ZXJmYWNlOnN1cGVydmlzb3JdCnN1cGVydmlzb3IucnBjaW50ZXJmYWNlX2ZhY3RvcnkgPSBzdXBlcnZpc29yLnJwY2ludGVyZmFjZTptYWtlX21haW5fcnBjaW50ZXJmYWNlCgpbc3VwZXJ2aXNvcmN0bF0Kc2VydmVydXJsPXVuaXg6Ly8vdmFyL3J1bi9zdXBlcnZpc29yLnNvY2sgOyB1c2UgYSB1bml4Oi8vIFVSTCAgZm9yIGEgdW5peCBzb2NrZXQKCltpbmNsdWRlXQpmaWxlcyA9IC9ldGMvcy5zdXBlcnZpc29yLyoucwpFT0YKCn0KZWNobyAnIyEvYmluL2Jhc2gnID4gL2JvY2tlci5zaAplY2hvICcjIFRoaXMgZmlsZSBpcyBnZW5lcmF0ZWQgYnkgQm9ja2VyLicgPj4gL2JvY2tlci5zaApkZWNsYXJlIC1mID4+IC9ib2NrZXIuc2gKZWNobyAnaWYgW1sgLW4gIiRAIiBdXTsgdGhlbiAkQDsgZmk7ICcgPj4gL2JvY2tlci5zaApjaG1vZCA3NTUgL2JvY2tlci5zaAo= | base64 -d | bash

CMD ["/supervisor.sh"]

ONBUILD COPY cron.d/* /etc/cron.d/
ONBUILD COPY supervisor/*.sh supervisor/*.s /etc/s.supervisor/
