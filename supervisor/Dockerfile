###############################################################
# Dockerfile generated by Bocker-v1.1. Do not edit this file. #
###############################################################

FROM debian:wheezy
MAINTAINER Anh K. Huynh <kyanh@theslinux.org>

ENV DEBIAN_FRONTEND noninteractive

# Bocker method => __ed_ship
# * The output is /bocker.sh in the result image.
# * List of methods:
#   - ed_apt_clean
#   - ed_apt_purge
#
# | set -eux
# | if [[ -f /bocker.sh ]]; then source /bocker.sh; fi
# | ed_apt_clean () 
# | { 
# |     rm -fv /var/cache/apt/*.bin;
# |     rm -fv /var/cache/apt/archives/*.*;
# |     rm -fv /var/lib/apt/lists/*.*;
# |     apt-get autoclean
# | }
# | ed_apt_purge () 
# | { 
# |     apt-get purge -y --auto-remove $@;
# |     ed_apt_clean
# | }
# | echo '#!/bin/bash' > /bocker.sh
# | echo '# This file is generated by Bocker.' >> /bocker.sh
# | declare -f >> /bocker.sh
# | echo 'if [[ -n "$@" ]]; then $@; fi; ' >> /bocker.sh
# | chmod 755 /bocker.sh
#
RUN echo \
c2V0IC1ldXgKaWYgW1sgLWYgL2JvY2tlci5zaCBdXTsgdGhlbiBzb3VyY2UgL2JvY2tlci5\
zaDsgZmkKZWRfYXB0X2NsZWFuICgpIAp7IAogICAgcm0gLWZ2IC92YXIvY2FjaGUvYXB0Ly\
ouYmluOwogICAgcm0gLWZ2IC92YXIvY2FjaGUvYXB0L2FyY2hpdmVzLyouKjsKICAgIHJtI\
C1mdiAvdmFyL2xpYi9hcHQvbGlzdHMvKi4qOwogICAgYXB0LWdldCBhdXRvY2xlYW4KfQpl\
ZF9hcHRfcHVyZ2UgKCkgCnsgCiAgICBhcHQtZ2V0IHB1cmdlIC15IC0tYXV0by1yZW1vdmU\
gJEA7CiAgICBlZF9hcHRfY2xlYW4KfQplY2hvICcjIS9iaW4vYmFzaCcgPiAvYm9ja2VyLn\
NoCmVjaG8gJyMgVGhpcyBmaWxlIGlzIGdlbmVyYXRlZCBieSBCb2NrZXIuJyA+PiAvYm9ja\
2VyLnNoCmRlY2xhcmUgLWYgPj4gL2JvY2tlci5zaAplY2hvICdpZiBbWyAtbiAiJEAiIF1d\
OyB0aGVuICRAOyBmaTsgJyA+PiAvYm9ja2VyLnNoCmNobW9kIDc1NSAvYm9ja2VyLnNoCg=\
=\
  | base64 -d | bash

# Bocker method => ed_supervisor_install_base
#
# | set -eux
# | if [[ -f /bocker.sh ]]; then source /bocker.sh; fi
# | ed_supervisor_install_base () 
# | { 
# |     apt-get update;
# |     apt-get install -y supervisor cron exim4-daemon-light curl ca-certificates;
# |     ed_apt_clean;
# |     rm -rf /etc/supervisor/;
# |     mkdir -pv /etc/s.supervisor/ /supervisor/;
# |     ln -s /usr/bin/supervisorctl /usr/bin/s;
# |     rm -rf /var/log/exim4/ /var/spool/exim4/
# | }
# | ed_supervisor_install_base
#
RUN echo \
c2V0IC1ldXgKaWYgW1sgLWYgL2JvY2tlci5zaCBdXTsgdGhlbiBzb3VyY2UgL2JvY2tlci5\
zaDsgZmkKZWRfc3VwZXJ2aXNvcl9pbnN0YWxsX2Jhc2UgKCkgCnsgCiAgICBhcHQtZ2V0IH\
VwZGF0ZTsKICAgIGFwdC1nZXQgaW5zdGFsbCAteSBzdXBlcnZpc29yIGNyb24gZXhpbTQtZ\
GFlbW9uLWxpZ2h0IGN1cmwgY2EtY2VydGlmaWNhdGVzOwogICAgZWRfYXB0X2NsZWFuOwog\
ICAgcm0gLXJmIC9ldGMvc3VwZXJ2aXNvci87CiAgICBta2RpciAtcHYgL2V0Yy9zLnN1cGV\
ydmlzb3IvIC9zdXBlcnZpc29yLzsKICAgIGxuIC1zIC91c3IvYmluL3N1cGVydmlzb3JjdG\
wgL3Vzci9iaW4vczsKICAgIHJtIC1yZiAvdmFyL2xvZy9leGltNC8gL3Zhci9zcG9vbC9le\
GltNC8KfQplZF9zdXBlcnZpc29yX2luc3RhbGxfYmFzZQo=\
  | base64 -d | bash

# Bocker method => ed_supervisor_install_supervisor
#
# | set -eux
# | if [[ -f /bocker.sh ]]; then source /bocker.sh; fi
# | ed_supervisor_install_supervisor () 
# | { 
# |     apt-get update;
# |     apt-get install -y python-setuptools --no-install-recommends;
# |     curl -Lso /usr/bin/syslog-stdout.py https://raw.githubusercontent.com/icyfork/syslog-stdout/master/syslog-stdout.py;
# |     mkdir -pv /usr/src/pip/;
# |     cd /usr/src/pip/;
# |     curl -Lso - https://github.com/icyfork/supervisor-stdout/archive/master.tar.gz | tar -xzf - -C /usr/src/pip/ --strip-components=1;
# |     python2 setup.py install;
# |     cd /;
# |     rm -rf /usr/src/pip/;
# |     ed_apt_purge python-setuptools
# | }
# | ed_supervisor_install_supervisor
#
RUN echo \
c2V0IC1ldXgKaWYgW1sgLWYgL2JvY2tlci5zaCBdXTsgdGhlbiBzb3VyY2UgL2JvY2tlci5\
zaDsgZmkKZWRfc3VwZXJ2aXNvcl9pbnN0YWxsX3N1cGVydmlzb3IgKCkgCnsgCiAgICBhcH\
QtZ2V0IHVwZGF0ZTsKICAgIGFwdC1nZXQgaW5zdGFsbCAteSBweXRob24tc2V0dXB0b29sc\
yAtLW5vLWluc3RhbGwtcmVjb21tZW5kczsKICAgIGN1cmwgLUxzbyAvdXNyL2Jpbi9zeXNs\
b2ctc3Rkb3V0LnB5IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9pY3lmb3J\
rL3N5c2xvZy1zdGRvdXQvbWFzdGVyL3N5c2xvZy1zdGRvdXQucHk7CiAgICBta2RpciAtcH\
YgL3Vzci9zcmMvcGlwLzsKICAgIGNkIC91c3Ivc3JjL3BpcC87CiAgICBjdXJsIC1Mc28gL\
SBodHRwczovL2dpdGh1Yi5jb20vaWN5Zm9yay9zdXBlcnZpc29yLXN0ZG91dC9hcmNoaXZl\
L21hc3Rlci50YXIuZ3ogfCB0YXIgLXh6ZiAtIC1DIC91c3Ivc3JjL3BpcC8gLS1zdHJpcC1\
jb21wb25lbnRzPTE7CiAgICBweXRob24yIHNldHVwLnB5IGluc3RhbGw7CiAgICBjZCAvOw\
ogICAgcm0gLXJmIC91c3Ivc3JjL3BpcC87CiAgICBlZF9hcHRfcHVyZ2UgcHl0aG9uLXNld\
HVwdG9vbHMKfQplZF9zdXBlcnZpc29yX2luc3RhbGxfc3VwZXJ2aXNvcgo=\
  | base64 -d | bash

# Bocker method => ed_supervisor_install_init_script
#
# | set -eux
# | if [[ -f /bocker.sh ]]; then source /bocker.sh; fi
# | ed_supervisor_install_init_script () 
# | { 
# |     { 
# |         echo "#!/bin/bash";
# |         echo "/bocker.sh ed_cron_generate_config";
# |         echo "/bocker.sh ed_exim4_generate_config";
# |         echo "/bocker.sh ed_msyslog_generate_config";
# |         echo "exec /bocker.sh ed_supervisor_daemonize"
# |     } > /supervisor.sh;
# |     chmod 755 /supervisor.sh
# | }
# | ed_supervisor_install_init_script
#
RUN echo \
c2V0IC1ldXgKaWYgW1sgLWYgL2JvY2tlci5zaCBdXTsgdGhlbiBzb3VyY2UgL2JvY2tlci5\
zaDsgZmkKZWRfc3VwZXJ2aXNvcl9pbnN0YWxsX2luaXRfc2NyaXB0ICgpIAp7IAogICAgey\
AKICAgICAgICBlY2hvICIjIS9iaW4vYmFzaCI7CiAgICAgICAgZWNobyAiL2JvY2tlci5za\
CBlZF9jcm9uX2dlbmVyYXRlX2NvbmZpZyI7CiAgICAgICAgZWNobyAiL2JvY2tlci5zaCBl\
ZF9leGltNF9nZW5lcmF0ZV9jb25maWciOwogICAgICAgIGVjaG8gIi9ib2NrZXIuc2ggZWR\
fbXN5c2xvZ19nZW5lcmF0ZV9jb25maWciOwogICAgICAgIGVjaG8gImV4ZWMgL2JvY2tlci\
5zaCBlZF9zdXBlcnZpc29yX2RhZW1vbml6ZSIKICAgIH0gPiAvc3VwZXJ2aXNvci5zaDsKI\
CAgIGNobW9kIDc1NSAvc3VwZXJ2aXNvci5zaAp9CmVkX3N1cGVydmlzb3JfaW5zdGFsbF9p\
bml0X3NjcmlwdAo=\
  | base64 -d | bash

# Bocker method => __ed_ship
# * The output is /bocker.sh in the result image.
# * List of methods:
#   - ed_cron_daemonize
#   - ed_cron_generate_config
#   - ed_exim4_config_update
#   - ed_exim4_daemonize
#   - ed_exim4_generate_config
#   - ed_exim4_uid_gid_update
#   - ed_msyslog_damonize
#   - ed_msyslog_generate_config
#   - ed_supervisor_daemonize
#   - ed_supervisor_execute_generators
#   - ed_supervisor_fix_uid_gid
#   - ed_supervisor_generate_base_config
#
# | set -eux
# | if [[ -f /bocker.sh ]]; then source /bocker.sh; fi
# | ed_cron_daemonize () 
# | { 
# |     if [[ "${CRON_ENABLE:-0}" == "0" ]]; then
# |         rm -f /etc/s.supervisor/cron.s;
# |         exit 0;
# |     fi;
# |     exec /usr/sbin/cron -f -L ${CRON_LOGLEVEL:-1}
# | }
# | ed_cron_generate_config () 
# | { 
# |     if [[ "${CRON_ENABLE:-0}" == "0" ]]; then
# |         rm -f /etc/s.supervisor/cron.s;
# |         exit 0;
# |     fi;
# |     cat > /etc/s.supervisor/cron.s  <<EOF
# | [program:cron]
# | command=/bocker.sh ed_cron_daemonize
# | process_name=%(program_name)s
# | numprocs=1
# | directory=/
# | umask=022
# | priority=999
# | autostart=true
# | autorestart=true
# | startsecs=1
# | startretries=3
# | exitcodes=0,2
# | stopsignal=TERM
# | stopwaitsecs=10
# | user=root
# | redirect_stderr=true
# | stdout_logfile=/supervisor/cron.log
# | stdout_logfile_maxbytes=50MB
# | stdout_logfile_backups=10
# | stdout_capture_maxbytes=0
# | stdout_events_enabled=false
# | stderr_logfile=AUTO
# | stderr_logfile_maxbytes=50MB
# | stderr_logfile_backups=10
# | stderr_capture_maxbytes=0
# | stderr_events_enabled=false
# | environment=
# | EOF
# | 
# | }
# | ed_exim4_config_update () 
# | { 
# |     local _other_names;
# |     if [[ "${EXIM4_MINE_CONFIG:-0}" != 0 ]]; then
# |         /usr/sbin/update-exim4.conf;
# |         return;
# |     fi;
# |     if [[ -z "${EXIM4_MAILNAME:-}" ]]; then
# |         EXIM4_MAILNAME="$(hostname -f)";
# |     fi;
# |     echo "$EXIM4_MAILNAME" > /etc/mailname;
# |     local _other_names="$EXIM4_MAILNAME";
# |     for _name in ${EXIM4_OTHER_NAMES:-};
# |     do
# |         _other_names="$_other_names ; $_name";
# |     done;
# |     cat > /etc/exim4/update-exim4.conf.conf  <<EOF
# | # This file is generated by Docker generator.
# | # Please do not edit this file.
# | dc_eximconfig_configtype='internet'
# | dc_other_hostnames='$_other_names'
# | dc_local_interfaces='127.0.0.1 ; ::1'
# | dc_readhost=''
# | dc_relay_domains=''
# | dc_minimaldns='false'
# | dc_relay_nets=''
# | dc_smarthost=''
# | CFILEMODE='644'
# | dc_use_split_config='true'
# | dc_hide_mailname=''
# | dc_mailname_in_oh='true'
# | dc_localdelivery='mail_spool'
# | EOF
# | 
# |     /usr/sbin/update-exim4.conf
# | }
# | ed_exim4_daemonize () 
# | { 
# |     if [[ "${EXIM4_ENABLE:-0}" == "0" ]]; then
# |         rm -f /etc/s.supervisor/exim4.s;
# |         exit 0;
# |     fi;
# |     exec /usr/sbin/exim4 -v -bdf -q30m
# | }
# | ed_exim4_generate_config () 
# | { 
# |     ed_exim4_uid_gid_update;
# |     ed_exim4_config_update;
# |     cat > /etc/s.supervisor/exim4.s  <<EOF
# | [program:exim4]
# | command=/bocker.sh ed_exim4_daemonize
# | process_name=%(program_name)s
# | numprocs=1
# | directory=/
# | umask=022
# | priority=999
# | autostart=true
# | autorestart=true
# | startsecs=1
# | startretries=3
# | exitcodes=0,2
# | stopsignal=TERM
# | stopwaitsecs=10
# | user=Debian-exim
# | redirect_stderr=true
# | stdout_logfile=/supervisor/exim4.log
# | stdout_logfile_maxbytes=50MB
# | stdout_logfile_backups=10
# | stdout_capture_maxbytes=0
# | stdout_events_enabled=false
# | stderr_logfile=AUTO
# | stderr_logfile_maxbytes=50MB
# | stderr_logfile_backups=10
# | stderr_capture_maxbytes=0
# | stderr_events_enabled=false
# | environment=
# | EOF
# | 
# | }
# | ed_exim4_uid_gid_update () 
# | { 
# |     if [[ "${EXIM4_ENABLE:-0}" == "0" ]]; then
# |         rm -f /etc/s.supervisor/exim4.s;
# |         exit 0;
# |     fi;
# |     EXIM4_UID="${EXIM4_UID:-10004}";
# |     EXIM4_GID="${EXIM4_GID:-10004}";
# |     groupmod -g "$EXIM4_GID" Debian-exim;
# |     usermod -g "$EXIM4_GID" -u "$EXIM4_UID" Debian-exim;
# |     mkdir -pv /var/log/exim4 /var/spool/exim4/;
# |     chmod 750 /var/log/exim4 /var/spool/exim4/;
# |     chown Debian-exim:Debian-exim -Rc /var/spool/exim4/;
# |     chown Debian-exim:Debian-exim -Rc /var/log/exim4/;
# |     chown root:Debian-exim /etc/exim4/passwd.client;
# |     ln -vs /var/mail/mail /var/mail/root || :
# | }
# | ed_msyslog_damonize () 
# | { 
# |     if [[ "${MSYSLOG_ENABLE:-0}" == "0" ]]; then
# |         rm -f /etc/s.supervisor/msyslog.s;
# |         exit 0;
# |     fi;
# |     exec python2 /usr/bin/syslog-stdout.py
# | }
# | ed_msyslog_generate_config () 
# | { 
# |     if [[ "${MSYSLOG_ENABLE:-0}" == "0" ]]; then
# |         rm -f /etc/s.supervisor/msyslog.s;
# |         exit 0;
# |     fi;
# |     cat > /etc/s.supervisor/msyslog.s  <<-EOF
# | [eventlistener:stdout]
# | command = supervisor_stdout
# | buffer_size = 100
# | events = PROCESS_LOG
# | result_handler = supervisor_stdout:event_handler
# | priority = 1
# | 
# | [program:msyslog]
# | command=/bocker.sh ed_msyslog_damonize
# | stdout_events_enabled = true
# | stderr_events_enabled = true
# | priority = 10
# | EOF
# | 
# | }
# | ed_supervisor_daemonize () 
# | { 
# |     ed_supervisor_generate_base_config;
# |     ed_supervisor_fix_uid_gid;
# |     ed_supervisor_execute_generators;
# |     exec /usr/bin/supervisord --configuration /etc/supervisord.conf
# | }
# | ed_supervisor_execute_generators () 
# | { 
# |     while read FILE; do
# |         chmod -c 755 "$FILE";
# |         bash -n "$FILE" && { 
# |             echo ":: $FUNCNAME => $FILE..." 1>&2;
# |             bash "$FILE"
# |         } || true;
# |     done < <(find /etc/s.supervisor/ -type f -iname "*.sh" | sort)
# | }
# | ed_supervisor_fix_uid_gid () 
# | { 
# |     env | grep -E '^[A-Z0-9]+_UID=[0-9]+$' | awk -F '_UID=' '{
# |       name = tolower($1);
# |       if (name == "exim4") { name = "Debian-exim" ;}
# |       if (name == "www") { name = "www-data" ;}
# |       id = $2;
# |       if (id == 0) { id = 6000; }
# |       printf("groupmod -g %s %s || groupadd -g %s %s\n", id, name, id, name);
# |       printf("usermod -u %s -g %s %s || useradd -s /bin/true -u %s -g %s %s\n", id, id, name, id, id, name);
# |     }' | bash -x;
# |     env | grep -E '^[A-Z0-9]+_GID=[0-9]+$' | awk -F '_GID=' '{
# |       name = tolower($1);
# |       if (name == "exim4") { name = "Debian-exim" ;}
# |       if (name == "www") { name = "www-data" ;}
# |       id = $2;
# |       if (id == 0) { id = 6000; }
# |       printf("groupmod -g %s %s || groupadd -g %s %s\n", id, name, id, name);
# |     }' | bash -x
# | }
# | ed_supervisor_generate_base_config () 
# | { 
# |     cat > /etc/supervisord.conf  <<EOF
# | ;
# | ; supervisord main config file - v0.1
# | ; Do not edit this file
# | ;
# | 
# | [unix_http_server]
# | file=/var/run/supervisor.sock   ; (the path to the socket file)
# | chmod=0700                      ; sockef file mode (default 0700)
# | 
# | [supervisord]
# | nodaemon=true
# | logfile=/supervisor/__daemon.log ; (main log file;default $CWD/supervisord.log)
# | pidfile=/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
# | childlogdir=/supervisor/         ; ('AUTO' child log dir, default $TEMP)
# | logfile_maxbytes=50MB            ; (max main logfile bytes b4 rotation;default 50MB)
# | logfile_backups=10               ; (num of main logfile rotation backups;default 10)
# | loglevel=${SUPERVISOR_LOG_LEVEL:-info}             ; (log level;default info; others: debug,warn,trace)
# | 
# | ; the below section must remain in the config file for RPC
# | ; (supervisorctl/web interface) to work, additional interfaces may be
# | ; added by defining them in separate rpcinterface: sections
# | [rpcinterface:supervisor]
# | supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface
# | 
# | [supervisorctl]
# | serverurl=unix:///var/run/supervisor.sock ; use a unix:// URL  for a unix socket
# | 
# | [include]
# | files = /etc/s.supervisor/*.s
# | EOF
# | 
# | }
# | echo '#!/bin/bash' > /bocker.sh
# | echo '# This file is generated by Bocker.' >> /bocker.sh
# | declare -f >> /bocker.sh
# | echo 'if [[ -n "$@" ]]; then $@; fi; ' >> /bocker.sh
# | chmod 755 /bocker.sh
#
RUN echo \
c2V0IC1ldXgKaWYgW1sgLWYgL2JvY2tlci5zaCBdXTsgdGhlbiBzb3VyY2UgL2JvY2tlci5\
zaDsgZmkKZWRfY3Jvbl9kYWVtb25pemUgKCkgCnsgCiAgICBpZiBbWyAiJHtDUk9OX0VOQU\
JMRTotMH0iID09ICIwIiBdXTsgdGhlbgogICAgICAgIHJtIC1mIC9ldGMvcy5zdXBlcnZpc\
29yL2Nyb24uczsKICAgICAgICBleGl0IDA7CiAgICBmaTsKICAgIGV4ZWMgL3Vzci9zYmlu\
L2Nyb24gLWYgLUwgJHtDUk9OX0xPR0xFVkVMOi0xfQp9CmVkX2Nyb25fZ2VuZXJhdGVfY29\
uZmlnICgpIAp7IAogICAgaWYgW1sgIiR7Q1JPTl9FTkFCTEU6LTB9IiA9PSAiMCIgXV07IH\
RoZW4KICAgICAgICBybSAtZiAvZXRjL3Muc3VwZXJ2aXNvci9jcm9uLnM7CiAgICAgICAgZ\
XhpdCAwOwogICAgZmk7CiAgICBjYXQgPiAvZXRjL3Muc3VwZXJ2aXNvci9jcm9uLnMgIDw8\
RU9GCltwcm9ncmFtOmNyb25dCmNvbW1hbmQ9L2JvY2tlci5zaCBlZF9jcm9uX2RhZW1vbml\
6ZQpwcm9jZXNzX25hbWU9JShwcm9ncmFtX25hbWUpcwpudW1wcm9jcz0xCmRpcmVjdG9yeT\
0vCnVtYXNrPTAyMgpwcmlvcml0eT05OTkKYXV0b3N0YXJ0PXRydWUKYXV0b3Jlc3RhcnQ9d\
HJ1ZQpzdGFydHNlY3M9MQpzdGFydHJldHJpZXM9MwpleGl0Y29kZXM9MCwyCnN0b3BzaWdu\
YWw9VEVSTQpzdG9wd2FpdHNlY3M9MTAKdXNlcj1yb290CnJlZGlyZWN0X3N0ZGVycj10cnV\
lCnN0ZG91dF9sb2dmaWxlPS9zdXBlcnZpc29yL2Nyb24ubG9nCnN0ZG91dF9sb2dmaWxlX2\
1heGJ5dGVzPTUwTUIKc3Rkb3V0X2xvZ2ZpbGVfYmFja3Vwcz0xMApzdGRvdXRfY2FwdHVyZ\
V9tYXhieXRlcz0wCnN0ZG91dF9ldmVudHNfZW5hYmxlZD1mYWxzZQpzdGRlcnJfbG9nZmls\
ZT1BVVRPCnN0ZGVycl9sb2dmaWxlX21heGJ5dGVzPTUwTUIKc3RkZXJyX2xvZ2ZpbGVfYmF\
ja3Vwcz0xMApzdGRlcnJfY2FwdHVyZV9tYXhieXRlcz0wCnN0ZGVycl9ldmVudHNfZW5hYm\
xlZD1mYWxzZQplbnZpcm9ubWVudD0KRU9GCgp9CmVkX2V4aW00X2NvbmZpZ191cGRhdGUgK\
CkgCnsgCiAgICBsb2NhbCBfb3RoZXJfbmFtZXM7CiAgICBpZiBbWyAiJHtFWElNNF9NSU5F\
X0NPTkZJRzotMH0iICE9IDAgXV07IHRoZW4KICAgICAgICAvdXNyL3NiaW4vdXBkYXRlLWV\
4aW00LmNvbmY7CiAgICAgICAgcmV0dXJuOwogICAgZmk7CiAgICBpZiBbWyAteiAiJHtFWE\
lNNF9NQUlMTkFNRTotfSIgXV07IHRoZW4KICAgICAgICBFWElNNF9NQUlMTkFNRT0iJChob\
3N0bmFtZSAtZikiOwogICAgZmk7CiAgICBlY2hvICIkRVhJTTRfTUFJTE5BTUUiID4gL2V0\
Yy9tYWlsbmFtZTsKICAgIGxvY2FsIF9vdGhlcl9uYW1lcz0iJEVYSU00X01BSUxOQU1FIjs\
KICAgIGZvciBfbmFtZSBpbiAke0VYSU00X09USEVSX05BTUVTOi19OwogICAgZG8KICAgIC\
AgICBfb3RoZXJfbmFtZXM9IiRfb3RoZXJfbmFtZXMgOyAkX25hbWUiOwogICAgZG9uZTsKI\
CAgIGNhdCA+IC9ldGMvZXhpbTQvdXBkYXRlLWV4aW00LmNvbmYuY29uZiAgPDxFT0YKIyBU\
aGlzIGZpbGUgaXMgZ2VuZXJhdGVkIGJ5IERvY2tlciBnZW5lcmF0b3IuCiMgUGxlYXNlIGR\
vIG5vdCBlZGl0IHRoaXMgZmlsZS4KZGNfZXhpbWNvbmZpZ19jb25maWd0eXBlPSdpbnRlcm\
5ldCcKZGNfb3RoZXJfaG9zdG5hbWVzPSckX290aGVyX25hbWVzJwpkY19sb2NhbF9pbnRlc\
mZhY2VzPScxMjcuMC4wLjEgOyA6OjEnCmRjX3JlYWRob3N0PScnCmRjX3JlbGF5X2RvbWFp\
bnM9JycKZGNfbWluaW1hbGRucz0nZmFsc2UnCmRjX3JlbGF5X25ldHM9JycKZGNfc21hcnR\
ob3N0PScnCkNGSUxFTU9ERT0nNjQ0JwpkY191c2Vfc3BsaXRfY29uZmlnPSd0cnVlJwpkY1\
9oaWRlX21haWxuYW1lPScnCmRjX21haWxuYW1lX2luX29oPSd0cnVlJwpkY19sb2NhbGRlb\
Gl2ZXJ5PSdtYWlsX3Nwb29sJwpFT0YKCiAgICAvdXNyL3NiaW4vdXBkYXRlLWV4aW00LmNv\
bmYKfQplZF9leGltNF9kYWVtb25pemUgKCkgCnsgCiAgICBpZiBbWyAiJHtFWElNNF9FTkF\
CTEU6LTB9IiA9PSAiMCIgXV07IHRoZW4KICAgICAgICBybSAtZiAvZXRjL3Muc3VwZXJ2aX\
Nvci9leGltNC5zOwogICAgICAgIGV4aXQgMDsKICAgIGZpOwogICAgZXhlYyAvdXNyL3Nia\
W4vZXhpbTQgLXYgLWJkZiAtcTMwbQp9CmVkX2V4aW00X2dlbmVyYXRlX2NvbmZpZyAoKSAK\
eyAKICAgIGVkX2V4aW00X3VpZF9naWRfdXBkYXRlOwogICAgZWRfZXhpbTRfY29uZmlnX3V\
wZGF0ZTsKICAgIGNhdCA+IC9ldGMvcy5zdXBlcnZpc29yL2V4aW00LnMgIDw8RU9GCltwcm\
9ncmFtOmV4aW00XQpjb21tYW5kPS9ib2NrZXIuc2ggZWRfZXhpbTRfZGFlbW9uaXplCnByb\
2Nlc3NfbmFtZT0lKHByb2dyYW1fbmFtZSlzCm51bXByb2NzPTEKZGlyZWN0b3J5PS8KdW1h\
c2s9MDIyCnByaW9yaXR5PTk5OQphdXRvc3RhcnQ9dHJ1ZQphdXRvcmVzdGFydD10cnVlCnN\
0YXJ0c2Vjcz0xCnN0YXJ0cmV0cmllcz0zCmV4aXRjb2Rlcz0wLDIKc3RvcHNpZ25hbD1URV\
JNCnN0b3B3YWl0c2Vjcz0xMAp1c2VyPURlYmlhbi1leGltCnJlZGlyZWN0X3N0ZGVycj10c\
nVlCnN0ZG91dF9sb2dmaWxlPS9zdXBlcnZpc29yL2V4aW00LmxvZwpzdGRvdXRfbG9nZmls\
ZV9tYXhieXRlcz01ME1CCnN0ZG91dF9sb2dmaWxlX2JhY2t1cHM9MTAKc3Rkb3V0X2NhcHR\
1cmVfbWF4Ynl0ZXM9MApzdGRvdXRfZXZlbnRzX2VuYWJsZWQ9ZmFsc2UKc3RkZXJyX2xvZ2\
ZpbGU9QVVUTwpzdGRlcnJfbG9nZmlsZV9tYXhieXRlcz01ME1CCnN0ZGVycl9sb2dmaWxlX\
2JhY2t1cHM9MTAKc3RkZXJyX2NhcHR1cmVfbWF4Ynl0ZXM9MApzdGRlcnJfZXZlbnRzX2Vu\
YWJsZWQ9ZmFsc2UKZW52aXJvbm1lbnQ9CkVPRgoKfQplZF9leGltNF91aWRfZ2lkX3VwZGF\
0ZSAoKSAKeyAKICAgIGlmIFtbICIke0VYSU00X0VOQUJMRTotMH0iID09ICIwIiBdXTsgdG\
hlbgogICAgICAgIHJtIC1mIC9ldGMvcy5zdXBlcnZpc29yL2V4aW00LnM7CiAgICAgICAgZ\
XhpdCAwOwogICAgZmk7CiAgICBFWElNNF9VSUQ9IiR7RVhJTTRfVUlEOi0xMDAwNH0iOwog\
ICAgRVhJTTRfR0lEPSIke0VYSU00X0dJRDotMTAwMDR9IjsKICAgIGdyb3VwbW9kIC1nICI\
kRVhJTTRfR0lEIiBEZWJpYW4tZXhpbTsKICAgIHVzZXJtb2QgLWcgIiRFWElNNF9HSUQiIC\
11ICIkRVhJTTRfVUlEIiBEZWJpYW4tZXhpbTsKICAgIG1rZGlyIC1wdiAvdmFyL2xvZy9le\
GltNCAvdmFyL3Nwb29sL2V4aW00LzsKICAgIGNobW9kIDc1MCAvdmFyL2xvZy9leGltNCAv\
dmFyL3Nwb29sL2V4aW00LzsKICAgIGNob3duIERlYmlhbi1leGltOkRlYmlhbi1leGltIC1\
SYyAvdmFyL3Nwb29sL2V4aW00LzsKICAgIGNob3duIERlYmlhbi1leGltOkRlYmlhbi1leG\
ltIC1SYyAvdmFyL2xvZy9leGltNC87CiAgICBjaG93biByb290OkRlYmlhbi1leGltIC9ld\
GMvZXhpbTQvcGFzc3dkLmNsaWVudDsKICAgIGxuIC12cyAvdmFyL21haWwvbWFpbCAvdmFy\
L21haWwvcm9vdCB8fCA6Cn0KZWRfbXN5c2xvZ19kYW1vbml6ZSAoKSAKeyAKICAgIGlmIFt\
bICIke01TWVNMT0dfRU5BQkxFOi0wfSIgPT0gIjAiIF1dOyB0aGVuCiAgICAgICAgcm0gLW\
YgL2V0Yy9zLnN1cGVydmlzb3IvbXN5c2xvZy5zOwogICAgICAgIGV4aXQgMDsKICAgIGZpO\
wogICAgZXhlYyBweXRob24yIC91c3IvYmluL3N5c2xvZy1zdGRvdXQucHkKfQplZF9tc3lz\
bG9nX2dlbmVyYXRlX2NvbmZpZyAoKSAKeyAKICAgIGlmIFtbICIke01TWVNMT0dfRU5BQkx\
FOi0wfSIgPT0gIjAiIF1dOyB0aGVuCiAgICAgICAgcm0gLWYgL2V0Yy9zLnN1cGVydmlzb3\
IvbXN5c2xvZy5zOwogICAgICAgIGV4aXQgMDsKICAgIGZpOwogICAgY2F0ID4gL2V0Yy9zL\
nN1cGVydmlzb3IvbXN5c2xvZy5zICA8PC1FT0YKW2V2ZW50bGlzdGVuZXI6c3Rkb3V0XQpj\
b21tYW5kID0gc3VwZXJ2aXNvcl9zdGRvdXQKYnVmZmVyX3NpemUgPSAxMDAKZXZlbnRzID0\
gUFJPQ0VTU19MT0cKcmVzdWx0X2hhbmRsZXIgPSBzdXBlcnZpc29yX3N0ZG91dDpldmVudF\
9oYW5kbGVyCnByaW9yaXR5ID0gMQoKW3Byb2dyYW06bXN5c2xvZ10KY29tbWFuZD0vYm9ja\
2VyLnNoIGVkX21zeXNsb2dfZGFtb25pemUKc3Rkb3V0X2V2ZW50c19lbmFibGVkID0gdHJ1\
ZQpzdGRlcnJfZXZlbnRzX2VuYWJsZWQgPSB0cnVlCnByaW9yaXR5ID0gMTAKRU9GCgp9CmV\
kX3N1cGVydmlzb3JfZGFlbW9uaXplICgpIAp7IAogICAgZWRfc3VwZXJ2aXNvcl9nZW5lcm\
F0ZV9iYXNlX2NvbmZpZzsKICAgIGVkX3N1cGVydmlzb3JfZml4X3VpZF9naWQ7CiAgICBlZ\
F9zdXBlcnZpc29yX2V4ZWN1dGVfZ2VuZXJhdG9yczsKICAgIGV4ZWMgL3Vzci9iaW4vc3Vw\
ZXJ2aXNvcmQgLS1jb25maWd1cmF0aW9uIC9ldGMvc3VwZXJ2aXNvcmQuY29uZgp9CmVkX3N\
1cGVydmlzb3JfZXhlY3V0ZV9nZW5lcmF0b3JzICgpIAp7IAogICAgd2hpbGUgcmVhZCBGSU\
xFOyBkbwogICAgICAgIGNobW9kIC1jIDc1NSAiJEZJTEUiOwogICAgICAgIGJhc2ggLW4gI\
iRGSUxFIiAmJiB7IAogICAgICAgICAgICBlY2hvICI6OiAkRlVOQ05BTUUgPT4gJEZJTEUu\
Li4iIDE+JjI7CiAgICAgICAgICAgIGJhc2ggIiRGSUxFIgogICAgICAgIH0gfHwgdHJ1ZTs\
KICAgIGRvbmUgPCA8KGZpbmQgL2V0Yy9zLnN1cGVydmlzb3IvIC10eXBlIGYgLWluYW1lIC\
IqLnNoIiB8IHNvcnQpCn0KZWRfc3VwZXJ2aXNvcl9maXhfdWlkX2dpZCAoKSAKeyAKICAgI\
GVudiB8IGdyZXAgLUUgJ15bQS1aMC05XStfVUlEPVswLTldKyQnIHwgYXdrIC1GICdfVUlE\
PScgJ3sKICAgICAgbmFtZSA9IHRvbG93ZXIoJDEpOwogICAgICBpZiAobmFtZSA9PSAiZXh\
pbTQiKSB7IG5hbWUgPSAiRGViaWFuLWV4aW0iIDt9CiAgICAgIGlmIChuYW1lID09ICJ3d3\
ciKSB7IG5hbWUgPSAid3d3LWRhdGEiIDt9CiAgICAgIGlkID0gJDI7CiAgICAgIGlmIChpZ\
CA9PSAwKSB7IGlkID0gNjAwMDsgfQogICAgICBwcmludGYoImdyb3VwbW9kIC1nICVzICVz\
IHx8IGdyb3VwYWRkIC1nICVzICVzXG4iLCBpZCwgbmFtZSwgaWQsIG5hbWUpOwogICAgICB\
wcmludGYoInVzZXJtb2QgLXUgJXMgLWcgJXMgJXMgfHwgdXNlcmFkZCAtcyAvYmluL3RydW\
UgLXUgJXMgLWcgJXMgJXNcbiIsIGlkLCBpZCwgbmFtZSwgaWQsIGlkLCBuYW1lKTsKICAgI\
H0nIHwgYmFzaCAteDsKICAgIGVudiB8IGdyZXAgLUUgJ15bQS1aMC05XStfR0lEPVswLTld\
KyQnIHwgYXdrIC1GICdfR0lEPScgJ3sKICAgICAgbmFtZSA9IHRvbG93ZXIoJDEpOwogICA\
gICBpZiAobmFtZSA9PSAiZXhpbTQiKSB7IG5hbWUgPSAiRGViaWFuLWV4aW0iIDt9CiAgIC\
AgIGlmIChuYW1lID09ICJ3d3ciKSB7IG5hbWUgPSAid3d3LWRhdGEiIDt9CiAgICAgIGlkI\
D0gJDI7CiAgICAgIGlmIChpZCA9PSAwKSB7IGlkID0gNjAwMDsgfQogICAgICBwcmludGYo\
Imdyb3VwbW9kIC1nICVzICVzIHx8IGdyb3VwYWRkIC1nICVzICVzXG4iLCBpZCwgbmFtZSw\
gaWQsIG5hbWUpOwogICAgfScgfCBiYXNoIC14Cn0KZWRfc3VwZXJ2aXNvcl9nZW5lcmF0ZV\
9iYXNlX2NvbmZpZyAoKSAKeyAKICAgIGNhdCA+IC9ldGMvc3VwZXJ2aXNvcmQuY29uZiAgP\
DxFT0YKOwo7IHN1cGVydmlzb3JkIG1haW4gY29uZmlnIGZpbGUgLSB2MC4xCjsgRG8gbm90\
IGVkaXQgdGhpcyBmaWxlCjsKClt1bml4X2h0dHBfc2VydmVyXQpmaWxlPS92YXIvcnVuL3N\
1cGVydmlzb3Iuc29jayAgIDsgKHRoZSBwYXRoIHRvIHRoZSBzb2NrZXQgZmlsZSkKY2htb2\
Q9MDcwMCAgICAgICAgICAgICAgICAgICAgICA7IHNvY2tlZiBmaWxlIG1vZGUgKGRlZmF1b\
HQgMDcwMCkKCltzdXBlcnZpc29yZF0Kbm9kYWVtb249dHJ1ZQpsb2dmaWxlPS9zdXBlcnZp\
c29yL19fZGFlbW9uLmxvZyA7IChtYWluIGxvZyBmaWxlO2RlZmF1bHQgJENXRC9zdXBlcnZ\
pc29yZC5sb2cpCnBpZGZpbGU9L3Zhci9ydW4vc3VwZXJ2aXNvcmQucGlkIDsgKHN1cGVydm\
lzb3JkIHBpZGZpbGU7ZGVmYXVsdCBzdXBlcnZpc29yZC5waWQpCmNoaWxkbG9nZGlyPS9zd\
XBlcnZpc29yLyAgICAgICAgIDsgKCdBVVRPJyBjaGlsZCBsb2cgZGlyLCBkZWZhdWx0ICRU\
RU1QKQpsb2dmaWxlX21heGJ5dGVzPTUwTUIgICAgICAgICAgICA7IChtYXggbWFpbiBsb2d\
maWxlIGJ5dGVzIGI0IHJvdGF0aW9uO2RlZmF1bHQgNTBNQikKbG9nZmlsZV9iYWNrdXBzPT\
EwICAgICAgICAgICAgICAgOyAobnVtIG9mIG1haW4gbG9nZmlsZSByb3RhdGlvbiBiYWNrd\
XBzO2RlZmF1bHQgMTApCmxvZ2xldmVsPSR7U1VQRVJWSVNPUl9MT0dfTEVWRUw6LWluZm99\
ICAgICAgICAgICAgIDsgKGxvZyBsZXZlbDtkZWZhdWx0IGluZm87IG90aGVyczogZGVidWc\
sd2Fybix0cmFjZSkKCjsgdGhlIGJlbG93IHNlY3Rpb24gbXVzdCByZW1haW4gaW4gdGhlIG\
NvbmZpZyBmaWxlIGZvciBSUEMKOyAoc3VwZXJ2aXNvcmN0bC93ZWIgaW50ZXJmYWNlKSB0b\
yB3b3JrLCBhZGRpdGlvbmFsIGludGVyZmFjZXMgbWF5IGJlCjsgYWRkZWQgYnkgZGVmaW5p\
bmcgdGhlbSBpbiBzZXBhcmF0ZSBycGNpbnRlcmZhY2U6IHNlY3Rpb25zCltycGNpbnRlcmZ\
hY2U6c3VwZXJ2aXNvcl0Kc3VwZXJ2aXNvci5ycGNpbnRlcmZhY2VfZmFjdG9yeSA9IHN1cG\
Vydmlzb3IucnBjaW50ZXJmYWNlOm1ha2VfbWFpbl9ycGNpbnRlcmZhY2UKCltzdXBlcnZpc\
29yY3RsXQpzZXJ2ZXJ1cmw9dW5peDovLy92YXIvcnVuL3N1cGVydmlzb3Iuc29jayA7IHVz\
ZSBhIHVuaXg6Ly8gVVJMICBmb3IgYSB1bml4IHNvY2tldAoKW2luY2x1ZGVdCmZpbGVzID0\
gL2V0Yy9zLnN1cGVydmlzb3IvKi5zCkVPRgoKfQplY2hvICcjIS9iaW4vYmFzaCcgPiAvYm\
9ja2VyLnNoCmVjaG8gJyMgVGhpcyBmaWxlIGlzIGdlbmVyYXRlZCBieSBCb2NrZXIuJyA+P\
iAvYm9ja2VyLnNoCmRlY2xhcmUgLWYgPj4gL2JvY2tlci5zaAplY2hvICdpZiBbWyAtbiAi\
JEAiIF1dOyB0aGVuICRAOyBmaTsgJyA+PiAvYm9ja2VyLnNoCmNobW9kIDc1NSAvYm9ja2V\
yLnNoCg==\
  | base64 -d | bash

CMD ["/supervisor.sh"]
