#!/bin/bash

# Purpose: Bocker library for Supervisor support
# Author : Anh K. Huynh
# Date   : 2015 May 15th

source ../bocker/base.sh

source ./bocker/cron.sh
source ./bocker/exim4.sh
source ./bocker/msyslog.sh

# ed_onbuild COPY "supervisor/*.sh supervisor/*.s /etc/s.supervisor/"
# ed_onbuild COPY "cron.d/* /etc/cron.d/"

ed_ship --later \
  ed_supervisor_generate_base_config \
  ed_supervisor_fix_uid_gid \
  ed_supervisor_execute_generators \
  ed_supervisor_daemonize

ed_bocker() {
  ed_supervisor_install_base
  ed_supervisor_install_supervisor
  ed_supervisor_install_init_script
}

########################################################################
# Container init script
########################################################################

ed_supervisor_daemonize() {
  ed_supervisor_generate_base_config
  ed_supervisor_fix_uid_gid
  ed_supervisor_execute_generators

  exec /usr/bin/supervisord --configuration /etc/supervisord.conf
}

########################################################################
# Dockerbuild utils
########################################################################

ed_supervisor_install_base() {
  apt-get update
  apt-get install -y \
      supervisor cron exim4-daemon-light \
      curl ca-certificates

  ed_apt_clean

  rm -rf /etc/supervisor/
  mkdir -pv /etc/s.supervisor/ /supervisor/
  ln -s /usr/bin/supervisorctl /usr/bin/s
  rm -rf /var/log/exim4/ /var/spool/exim4/
}

ed_supervisor_install_supervisor() {

  apt-get update
  apt-get install -y python-setuptools --no-install-recommends

  curl -Lso /usr/bin/syslog-stdout.py \
    https://raw.githubusercontent.com/icyfork/syslog-stdout/master/syslog-stdout.py

  mkdir -pv /usr/src/pip/
  cd /usr/src/pip/

  curl -Lso - \
    https://github.com/icyfork/supervisor-stdout/archive/master.tar.gz \
    | tar -xzf - -C /usr/src/pip/ --strip-components=1

  python2 setup.py install

  cd /
  rm -rf /usr/src/pip/

  ed_apt_purge python-setuptools
}

ed_supervisor_install_init_script() {
  {
    echo "#!/bin/bash"

    echo "/bocker.sh ed_cron_generate_config"
    echo "/bocker.sh ed_exim4_generate_config"
    echo "/bocker.sh ed_msyslog_generate_config"

    echo "exec /bocker.sh ed_supervisor_daemonize"
  } \
  > /supervisor.sh

  chmod 755 /supervisor.sh
}

########################################################################
# Container utils
########################################################################

ed_supervisor_fix_uid_gid() {
  env \
  | grep -E '^[A-Z0-9]+_UID=[0-9]+$' \
  | awk -F '_UID=' '{
      name = tolower($1);
      if (name == "exim4") { name = "Debian-exim" ;}
      if (name == "www") { name = "www-data" ;}
      id = $2;
      if (id == 0) { id = 6000; }
      printf("groupmod -g %s %s || groupadd -g %s %s\n", id, name, id, name);
      printf("usermod -u %s -g %s %s || useradd -s /bin/true -u %s -g %s %s\n", id, id, name, id, id, name);
    }' \
  | bash -x

  env \
  | grep -E '^[A-Z0-9]+_GID=[0-9]+$' \
  | awk -F '_GID=' '{
      name = tolower($1);
      if (name == "exim4") { name = "Debian-exim" ;}
      if (name == "www") { name = "www-data" ;}
      id = $2;
      if (id == 0) { id = 6000; }
      printf("groupmod -g %s %s || groupadd -g %s %s\n", id, name, id, name);
    }' \
  | bash -x
}

ed_supervisor_execute_generators() {
  while read FILE; do
    chmod -c 755 "$FILE" # FIXME: This is a Docker bug!
    bash -n "$FILE" \
    && {
      echo >&2 ":: $FUNCNAME => $FILE..."
      bash "$FILE"
    } \
    || true
  done \
  < <(find /etc/s.supervisor/ -type f -iname "*.sh" | sort)
}

ed_supervisor_generate_base_config() {
  cat \
  > /etc/supervisord.conf \
<<EOF
;
; supervisord main config file - v0.1
; Do not edit this file
;

[unix_http_server]
file=/var/run/supervisor.sock   ; (the path to the socket file)
chmod=0700                      ; sockef file mode (default 0700)

[supervisord]
nodaemon=true
logfile=/supervisor/__daemon.log ; (main log file;default $CWD/supervisord.log)
pidfile=/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
childlogdir=/supervisor/         ; ('AUTO' child log dir, default $TEMP)
logfile_maxbytes=50MB            ; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups=10               ; (num of main logfile rotation backups;default 10)
loglevel=${SUPERVISOR_LOG_LEVEL:-info}             ; (log level;default info; others: debug,warn,trace)

; the below section must remain in the config file for RPC
; (supervisorctl/web interface) to work, additional interfaces may be
; added by defining them in separate rpcinterface: sections
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///var/run/supervisor.sock ; use a unix:// URL  for a unix socket

[include]
files = /etc/s.supervisor/*.s
EOF
}
