#!/bin/bash

# Purpose: Bocker library to generate Dockerfile for phantomjs image
# Author : Anh K. Huynh
# Date   : 2015 May 19th

ed_reuse ../supervisor/Bockerfile

ed_expose 8190
ed_volume /usr/share/fonts

ed_ship --later \
  ed_phantomjs_daemonize \
  ed_phantomjs_fix_permission \
  ed_phantomjs_generate_config

ed_bocker() {
  ed_phantomjs_install
  ed_phantomjs_fix_permission
}

########################################################################

ed_phantomjs_install() {
  ed_apt_install bzip2 fontconfig

  cd /usr/
  curl -Lso- \
    https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-1.9.8-linux-x86_64.tar.bz2 \
  | tar -xjf - \
      phantomjs-1.9.8-linux-x86_64/bin/phantomjs \
      --strip-components=1

  ed_apt_purge bzip2

  # Install the config. generator for Supervisor
  {
    echo "#!/bin/bash"
    echo "/bocker.sh ed_phantomjs_generate_config"
  } \
    > /etc/s.supervisor/phantomjs.sh
}

ed_phantomjs_fix_permission() {
  useradd -K UID_MIN=10001 phantomjs
  chmod 755 /usr/bin/phantomjs
  mkdir /home/phantomjs
  chown phantomjs:phantomjs /home/phantomjs
}

ed_phantomjs_daemonize() {
  fc-cache
  exec /usr/bin/phantomjs --webdriver=8190 --debug=${PHANTOMJS_DEBUG:-false}
}

ed_phantomjs_generate_config() {
  cat \
    > /etc/s.supervisor/phantomjs.s \
<<EOF
[program:phantomjs]
command=/bocker.sh ed_phantomjs_daemonize
process_name=%(program_name)s
numprocs=1
directory=/home/phantomjs/
umask=022
priority=999
autostart=true
autorestart=true
startsecs=1
startretries=3
exitcodes=0,2
stopsignal=TERM
stopwaitsecs=10
user=phantomjs
redirect_stderr=true
stdout_logfile=/supervisor/phantomjs.log
stdout_logfile_maxbytes=50MB
stdout_logfile_backups=10
stdout_capture_maxbytes=0
stdout_events_enabled=false
stderr_logfile=AUTO
stderr_logfile_maxbytes=50MB
stderr_logfile_backups=10
stderr_capture_maxbytes=0
stderr_events_enabled=false
environment=
EOF

}
