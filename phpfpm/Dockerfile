###############################################################
# Dockerfile generated by Bocker-v1.1. Do not edit this file. #
###############################################################

FROM icy/nginx:latest
MAINTAINER Anh K. Huynh <kyanh@theslinux.org>

ENV DEBIAN_FRONTEND noninteractive
ENV PHP5_PACKAGES php5-mysql php5-curl php5-gd php5-cgi php-mail php5-fpm

# Bocker method => __ed_ship
# * The output is /bocker.sh in the result image.
# * List of methods:
#   - ed_apt_clean
#   - ed_apt_purge
#
# | set -eux
# | if [[ -f /bocker.sh ]]; then source /bocker.sh; fi
# | ed_apt_clean () 
# | { 
# |     rm -fv /var/cache/apt/*.bin;
# |     rm -fv /var/cache/apt/archives/*.*;
# |     rm -fv /var/lib/apt/lists/*.*;
# |     apt-get autoclean
# | }
# | ed_apt_purge () 
# | { 
# |     apt-get purge -y --auto-remove $@;
# |     ed_apt_clean
# | }
# | echo '#!/bin/bash' > /bocker.sh
# | echo '# This file is generated by Bocker.' >> /bocker.sh
# | declare -f >> /bocker.sh
# | echo 'if [[ -n "$@" ]]; then $@; fi; ' >> /bocker.sh
# | chmod 755 /bocker.sh
#
RUN echo c2V0IC1ldXgKaWYgW1sgLWYgL2JvY2tlci5zaCBdXTsgdGhlbiBzb3VyY2UgL2JvY2tlci5zaDsgZmkKZWRfYXB0X2NsZWFuICgpIAp7IAogICAgcm0gLWZ2IC92YXIvY2FjaGUvYXB0LyouYmluOwogICAgcm0gLWZ2IC92YXIvY2FjaGUvYXB0L2FyY2hpdmVzLyouKjsKICAgIHJtIC1mdiAvdmFyL2xpYi9hcHQvbGlzdHMvKi4qOwogICAgYXB0LWdldCBhdXRvY2xlYW4KfQplZF9hcHRfcHVyZ2UgKCkgCnsgCiAgICBhcHQtZ2V0IHB1cmdlIC15IC0tYXV0by1yZW1vdmUgJEA7CiAgICBlZF9hcHRfY2xlYW4KfQplY2hvICcjIS9iaW4vYmFzaCcgPiAvYm9ja2VyLnNoCmVjaG8gJyMgVGhpcyBmaWxlIGlzIGdlbmVyYXRlZCBieSBCb2NrZXIuJyA+PiAvYm9ja2VyLnNoCmRlY2xhcmUgLWYgPj4gL2JvY2tlci5zaAplY2hvICdpZiBbWyAtbiAiJEAiIF1dOyB0aGVuICRAOyBmaTsgJyA+PiAvYm9ja2VyLnNoCmNobW9kIDc1NSAvYm9ja2VyLnNoCg== | base64 -d | bash

# Bocker method => ed_phpfpm_install
#
# | set -eux
# | if [[ -f /bocker.sh ]]; then source /bocker.sh; fi
# | ed_phpfpm_install () 
# | { 
# |     apt-get update;
# |     apt-get install -y $PHP5_PACKAGES;
# |     mkdir -p /phpfpm/www/ /phpfpm/var/ /phpfpm/logs/;
# |     ed_apt_clean;
# |     { 
# |         echo "#!/bin/bash";
# |         echo "/bocker.sh ed_phpfpm_generate_config"
# |     } > /etc/s.supervisor/phpfpm.sh
# | }
# | ed_phpfpm_install
#
RUN echo c2V0IC1ldXgKaWYgW1sgLWYgL2JvY2tlci5zaCBdXTsgdGhlbiBzb3VyY2UgL2JvY2tlci5zaDsgZmkKZWRfcGhwZnBtX2luc3RhbGwgKCkgCnsgCiAgICBhcHQtZ2V0IHVwZGF0ZTsKICAgIGFwdC1nZXQgaW5zdGFsbCAteSAkUEhQNV9QQUNLQUdFUzsKICAgIG1rZGlyIC1wIC9waHBmcG0vd3d3LyAvcGhwZnBtL3Zhci8gL3BocGZwbS9sb2dzLzsKICAgIGVkX2FwdF9jbGVhbjsKICAgIHsgCiAgICAgICAgZWNobyAiIyEvYmluL2Jhc2giOwogICAgICAgIGVjaG8gIi9ib2NrZXIuc2ggZWRfcGhwZnBtX2dlbmVyYXRlX2NvbmZpZyIKICAgIH0gPiAvZXRjL3Muc3VwZXJ2aXNvci9waHBmcG0uc2gKfQplZF9waHBmcG1faW5zdGFsbAo= | base64 -d | bash

ADD phpfpm.conf.default /phpfpm/

# Bocker method => __ed_ship
# * The output is /bocker.sh in the result image.
# * List of methods:
#   - ed_phpfpm_daemonize
#   - ed_phpfpm_generate_config
#   - ed_phpfpm_generate_nginx_config
#
# | set -eux
# | if [[ -f /bocker.sh ]]; then source /bocker.sh; fi
# | ed_phpfpm_daemonize () 
# | { 
# |     exec /usr/sbin/php5-fpm -F -y /phpfpm/phpfpm.conf
# | }
# | ed_phpfpm_generate_config () 
# | { 
# |     local _F_CONFIG="/etc/nginx/sites/phpfpm.conf";
# |     if [[ ! -f "$_F_CONFIG" ]]; then
# |         echo ":: Warning: Generating $_F_CONFIG)..." 1>&2;
# |         ed_phpfpm_generate_nginx_config > $_F_CONFIG;
# |     fi;
# |     _F_CONFIG="/phpfpm/phpfpm.conf";
# |     if [[ ! -f $_F_CONFIG ]]; then
# |         echo ":: Using the default configuration file..." 1>&2;
# |         cp -fv $_F_CONFIG.default $_F_CONFIG;
# |     fi;
# |     while read FILE; do
# |         chmod -c 755 "$FILE";
# |         bash -n "$FILE" && { 
# |             echo ":: $FUNCNAME:: Executing hook with '$FILE phpfpm_hook'..." 1>&2;
# |             "$FILE" phpfpm_hook
# |         } || true;
# |     done < <(find /etc/s.supervisor/ -type f -iname "phpfpm_*.sh" | sort);
# |     mkdir -pv /phpfpm/var/ /phpfpm/logs/;
# |     chown -c www-data:www-data /phpfpm/var/ /phpfpm/logs/;
# |     chmod -c 750 /phpfpm/var/ /phpfpm/logs/;
# |     cat > /etc/s.supervisor/phpfpm.s  <<EOF
# | [program:phpfpm]
# | command=/bocker.sh ed_nginx_daemonize
# | process_name=%(program_name)s
# | numprocs=1
# | directory=/
# | umask=022
# | priority=999
# | autostart=true
# | autorestart=true
# | startsecs=1
# | startretries=3
# | exitcodes=0,2
# | stopsignal=TERM
# | stopwaitsecs=10
# | user=www-data
# | redirect_stderr=true
# | stdout_logfile=/supervisor/phpfpm.log
# | stdout_logfile_maxbytes=50MB
# | stdout_logfile_backups=10
# | stdout_capture_maxbytes=0
# | stdout_events_enabled=false
# | stderr_logfile=AUTO
# | stderr_logfile_maxbytes=50MB
# | stderr_logfile_backups=10
# | stderr_capture_maxbytes=0
# | stderr_events_enabled=false
# | environment=
# | EOF
# | 
# | }
# | ed_phpfpm_generate_nginx_config () 
# | { 
# |     export PHPFPM_DOMAIN="${PHPFPM_DOMAIN:-$(hostname -f ||  hostname)}";
# |     cat  <<-EOF
# |   server {
# |     listen       80;
# |     server_name  ${PHPFPM_DOMAIN} ${PHPFPM_OTHER_DOMAINS:-};
# |     root         /phpfpm/www/;
# | 
# |     index index.php index.html;
# | 
# |     error_log   /var/log/nginx/${PHPFPM_DOMAIN}.error.log;
# |     access_log  /var/log/nginx/${PHPFPM_DOMAIN}.acces.log main;
# | 
# |     include /etc/nginx/misc/security.conf;
# | 
# |     location ~ \.php$ {
# |       fastcgi_pass     unix:/phpfpm/var/phpfpm.sock;
# |       fastcgi_index    index.php;
# |       fastcgi_param    SCRIPT_FILENAME  /phpfpm/www/\$fastcgi_script_name;
# |       include          /etc/nginx/fastcgi_params;
# |     }
# |   }
# | EOF
# | 
# | }
# | echo '#!/bin/bash' > /bocker.sh
# | echo '# This file is generated by Bocker.' >> /bocker.sh
# | declare -f >> /bocker.sh
# | echo 'if [[ -n "$@" ]]; then $@; fi; ' >> /bocker.sh
# | chmod 755 /bocker.sh
#
RUN echo c2V0IC1ldXgKaWYgW1sgLWYgL2JvY2tlci5zaCBdXTsgdGhlbiBzb3VyY2UgL2JvY2tlci5zaDsgZmkKZWRfcGhwZnBtX2RhZW1vbml6ZSAoKSAKeyAKICAgIGV4ZWMgL3Vzci9zYmluL3BocDUtZnBtIC1GIC15IC9waHBmcG0vcGhwZnBtLmNvbmYKfQplZF9waHBmcG1fZ2VuZXJhdGVfY29uZmlnICgpIAp7IAogICAgbG9jYWwgX0ZfQ09ORklHPSIvZXRjL25naW54L3NpdGVzL3BocGZwbS5jb25mIjsKICAgIGlmIFtbICEgLWYgIiRfRl9DT05GSUciIF1dOyB0aGVuCiAgICAgICAgZWNobyAiOjogV2FybmluZzogR2VuZXJhdGluZyAkX0ZfQ09ORklHKS4uLiIgMT4mMjsKICAgICAgICBlZF9waHBmcG1fZ2VuZXJhdGVfbmdpbnhfY29uZmlnID4gJF9GX0NPTkZJRzsKICAgIGZpOwogICAgX0ZfQ09ORklHPSIvcGhwZnBtL3BocGZwbS5jb25mIjsKICAgIGlmIFtbICEgLWYgJF9GX0NPTkZJRyBdXTsgdGhlbgogICAgICAgIGVjaG8gIjo6IFVzaW5nIHRoZSBkZWZhdWx0IGNvbmZpZ3VyYXRpb24gZmlsZS4uLiIgMT4mMjsKICAgICAgICBjcCAtZnYgJF9GX0NPTkZJRy5kZWZhdWx0ICRfRl9DT05GSUc7CiAgICBmaTsKICAgIHdoaWxlIHJlYWQgRklMRTsgZG8KICAgICAgICBjaG1vZCAtYyA3NTUgIiRGSUxFIjsKICAgICAgICBiYXNoIC1uICIkRklMRSIgJiYgeyAKICAgICAgICAgICAgZWNobyAiOjogJEZVTkNOQU1FOjogRXhlY3V0aW5nIGhvb2sgd2l0aCAnJEZJTEUgcGhwZnBtX2hvb2snLi4uIiAxPiYyOwogICAgICAgICAgICAiJEZJTEUiIHBocGZwbV9ob29rCiAgICAgICAgfSB8fCB0cnVlOwogICAgZG9uZSA8IDwoZmluZCAvZXRjL3Muc3VwZXJ2aXNvci8gLXR5cGUgZiAtaW5hbWUgInBocGZwbV8qLnNoIiB8IHNvcnQpOwogICAgbWtkaXIgLXB2IC9waHBmcG0vdmFyLyAvcGhwZnBtL2xvZ3MvOwogICAgY2hvd24gLWMgd3d3LWRhdGE6d3d3LWRhdGEgL3BocGZwbS92YXIvIC9waHBmcG0vbG9ncy87CiAgICBjaG1vZCAtYyA3NTAgL3BocGZwbS92YXIvIC9waHBmcG0vbG9ncy87CiAgICBjYXQgPiAvZXRjL3Muc3VwZXJ2aXNvci9waHBmcG0ucyAgPDxFT0YKW3Byb2dyYW06cGhwZnBtXQpjb21tYW5kPS9ib2NrZXIuc2ggZWRfbmdpbnhfZGFlbW9uaXplCnByb2Nlc3NfbmFtZT0lKHByb2dyYW1fbmFtZSlzCm51bXByb2NzPTEKZGlyZWN0b3J5PS8KdW1hc2s9MDIyCnByaW9yaXR5PTk5OQphdXRvc3RhcnQ9dHJ1ZQphdXRvcmVzdGFydD10cnVlCnN0YXJ0c2Vjcz0xCnN0YXJ0cmV0cmllcz0zCmV4aXRjb2Rlcz0wLDIKc3RvcHNpZ25hbD1URVJNCnN0b3B3YWl0c2Vjcz0xMAp1c2VyPXd3dy1kYXRhCnJlZGlyZWN0X3N0ZGVycj10cnVlCnN0ZG91dF9sb2dmaWxlPS9zdXBlcnZpc29yL3BocGZwbS5sb2cKc3Rkb3V0X2xvZ2ZpbGVfbWF4Ynl0ZXM9NTBNQgpzdGRvdXRfbG9nZmlsZV9iYWNrdXBzPTEwCnN0ZG91dF9jYXB0dXJlX21heGJ5dGVzPTAKc3Rkb3V0X2V2ZW50c19lbmFibGVkPWZhbHNlCnN0ZGVycl9sb2dmaWxlPUFVVE8Kc3RkZXJyX2xvZ2ZpbGVfbWF4Ynl0ZXM9NTBNQgpzdGRlcnJfbG9nZmlsZV9iYWNrdXBzPTEwCnN0ZGVycl9jYXB0dXJlX21heGJ5dGVzPTAKc3RkZXJyX2V2ZW50c19lbmFibGVkPWZhbHNlCmVudmlyb25tZW50PQpFT0YKCn0KZWRfcGhwZnBtX2dlbmVyYXRlX25naW54X2NvbmZpZyAoKSAKeyAKICAgIGV4cG9ydCBQSFBGUE1fRE9NQUlOPSIke1BIUEZQTV9ET01BSU46LSQoaG9zdG5hbWUgLWYgfHwgIGhvc3RuYW1lKX0iOwogICAgY2F0ICA8PC1FT0YKICBzZXJ2ZXIgewogICAgbGlzdGVuICAgICAgIDgwOwogICAgc2VydmVyX25hbWUgICR7UEhQRlBNX0RPTUFJTn0gJHtQSFBGUE1fT1RIRVJfRE9NQUlOUzotfTsKICAgIHJvb3QgICAgICAgICAvcGhwZnBtL3d3dy87CgogICAgaW5kZXggaW5kZXgucGhwIGluZGV4Lmh0bWw7CgogICAgZXJyb3JfbG9nICAgL3Zhci9sb2cvbmdpbngvJHtQSFBGUE1fRE9NQUlOfS5lcnJvci5sb2c7CiAgICBhY2Nlc3NfbG9nICAvdmFyL2xvZy9uZ2lueC8ke1BIUEZQTV9ET01BSU59LmFjY2VzLmxvZyBtYWluOwoKICAgIGluY2x1ZGUgL2V0Yy9uZ2lueC9taXNjL3NlY3VyaXR5LmNvbmY7CgogICAgbG9jYXRpb24gfiBcLnBocCQgewogICAgICBmYXN0Y2dpX3Bhc3MgICAgIHVuaXg6L3BocGZwbS92YXIvcGhwZnBtLnNvY2s7CiAgICAgIGZhc3RjZ2lfaW5kZXggICAgaW5kZXgucGhwOwogICAgICBmYXN0Y2dpX3BhcmFtICAgIFNDUklQVF9GSUxFTkFNRSAgL3BocGZwbS93d3cvXCRmYXN0Y2dpX3NjcmlwdF9uYW1lOwogICAgICBpbmNsdWRlICAgICAgICAgIC9ldGMvbmdpbngvZmFzdGNnaV9wYXJhbXM7CiAgICB9CiAgfQpFT0YKCn0KZWNobyAnIyEvYmluL2Jhc2gnID4gL2JvY2tlci5zaAplY2hvICcjIFRoaXMgZmlsZSBpcyBnZW5lcmF0ZWQgYnkgQm9ja2VyLicgPj4gL2JvY2tlci5zaApkZWNsYXJlIC1mID4+IC9ib2NrZXIuc2gKZWNobyAnaWYgW1sgLW4gIiRAIiBdXTsgdGhlbiAkQDsgZmk7ICcgPj4gL2JvY2tlci5zaApjaG1vZCA3NTUgL2JvY2tlci5zaAo= | base64 -d | bash

VOLUME /phpfpm/www/

CMD ["/supervisor.sh"]
