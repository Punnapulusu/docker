#!/bin/bash

# Purpose: Create an image with Percona
# Author : Anh K. Huynh
# Date   : 2015 May 21 (ported from the former Dockerfile)
# Based on
#  https://github.com/docker-library/percona/tree/master/5.6

ed_reuse  "$(dirname ${BASH_SOURCE[0]:-.})"/Bockerfile.supervisor
ed_expose 3306
ed_ship   --later \
            ed_percona_init \
            ed_percona_generate_config \
            ed_percona_set_datadir \
            ed_percona_daemonize

ed_bocker() {
  ed_percona_install
}

ed_percona_install() {
  local PERCONA_MAJOR=5.6

  apt-key adv \
      --keyserver keys.gnupg.net \
      --recv-keys 430BDF5C56E7C94E848EE60C1C4CBDCDCD2EFD2A

  echo 'deb http://repo.percona.com/apt wheezy main' \
      > /etc/apt/sources.list.d/percona.list

  ed_apt_install percona-server-server-$PERCONA_MAJOR
  ed_apt_clean

  mkdir /mysql/
  groupmod -g 10003 mysql
  usermod -u 10003 -g 10003 mysql

  # Due to Docker issue (783), these stuff must be removed!
  rm -rf /var/log/mysql/ /var/run/mysqld/

  # Give a generator to Supervisor
  {
    echo "#!/bin/bash"
    echo "/bocker.sh ed_percona_generate_config"
  } \
  > /etc/s.supervisor/percona.sh
}

########################################################################

ed_percona_set_datadir() {
  if [[ "$UID" == 0 ]]; then
    if [[ -f "/mysql/my.cnf" ]]; then
      echo >&2 ":: MySQL: /mysql/my.conf found. Copying it to /etc/mysql/my.conf"
      cp -vf /mysql/my.cnf /etc/mysql/my.cnf || return 1
    fi

    echo >&2 ":: MySQL: Fix bind-address..."
    sed -ri 's/^(bind-address|skip-networking)/;\1/' /etc/mysql/my.cnf

    echo >&2 ":: MySQL: Fix datadir setting in /etc/mysql/my.cnf"
    sed -i \
      -e 's#datadir[[:space:]]*=.*$#datadir = /mysql/#g' \
      /etc/mysql/my.cnf
  fi

  _D_DATA="$(/usr/sbin/mysqld --verbose --help 2>/dev/null | awk '$1 == "datadir" { print $2; exit }')"
  if [[ "$_D_DATA" != "/mysql/" ]]; then
    echo >&2 ":: MySQL: data directory must be /mysql/. Current value: $_D_DATA."
    return 1
  fi

  echo "$_D_DATA"
}

ed_percona_init() {
  _D_DATA="$(ed_percona_set_datadir)" || exit 1

  if [[ -d "/mysql/mysql/" ]]; then
    return 0
  fi

  local _f_init='/mysql/docker-init.sql'
  local _f_0run='/mysql/docker.first.run'

  if [[ -f "$_f_init" ]]; then
    return 0
  fi

  echo >&2 ":: MySQL: Unable to locate the base data directory /mysql/mysql/."
  echo >&2 ":: MySQL: Going to initialize a new database set."

  if [[ -z "$MYSQL_ROOT_PASSWD" ]]; then
    MYSQL_ROOT_PASSWD="#$RANDOM#$RANDOM#"
    echo >&2 ":: MySQL: No password is provided. A random password will be used."
    echo >&2 ":: MySQL: You can find this password in '$_f_init'."
  fi

  echo >&2 ':: MySQL: Running mysql_install_db...'
  mysql_install_db --datadir="/mysql/"
  echo >&2 ':: MySQL: Finished mysql_install_db.'

  touch /mysql/docker-init.sql
  chmod 600 /mysql/docker-init.sql

  cat > "$_f_init" \
<<-EOSQL
    DELETE FROM mysql.user WHERE user='root';
    CREATE USER 'root'@'%' IDENTIFIED BY '${MYSQL_ROOT_PASSWD}' ;
    GRANT ALL ON *.* TO 'root'@'%' WITH GRANT OPTION ;
    DROP DATABASE IF EXISTS test ;
    FLUSH PRIVILEGES ;
EOSQL

  echo > "$_f_0run"
}

ed_percona_daemonize() {
  if [[ -f "/mysql/docker-init.sql" \
      && -f "/mysql/docker.first.run" ]]; then

    rm -f /mysql/docker.first.run
    exec /usr/sbin/mysqld \
        --init-file=/mysql/docker-init.sql
  fi

  exec /usr/sbin/mysqld;
}

########################################################################
# Supervisor generator
########################################################################

ed_percona_generate_config() {
  _D_DATA="$(ed_percona_set_datadir)" || exit 1

  # These directories are removed at the Installation process
  mkdir -pv /var/run/mysqld/ /var/log/mysql/
  chown -R mysql:mysql /mysql/ /var/run/mysqld/ /var/log/mysql/

  # Initialize the database if necessary
  # NOTE: mysqld is from /usr/sbin/ directory. If "su -" is used,
  # the `mysqld` command is not found, and script just fails.
  su mysql -s /bin/bash -c "/bocker.sh ed_percona_init"
  if [[ $? -ge 1 ]]; then
    echo >&2 ":: $FUNCNAME: Aborted due to init fails."
    exit 1
  fi

  # Percona warning message
  cat <<-EOF
~~~~~~~
* Percona Server is distributed with several useful UDF (User Defined Function) from Percona Toolkit.
* Run the following commands to create these functions:

    mysql -e "CREATE FUNCTION fnv1a_64 RETURNS INTEGER SONAME 'libfnv1a_udf.so'"
    mysql -e "CREATE FUNCTION fnv_64 RETURNS INTEGER SONAME 'libfnv_udf.so'"
    mysql -e "CREATE FUNCTION murmur_hash RETURNS INTEGER SONAME 'libmurmur_udf.so'"

* See http://www.percona.com/doc/percona-server/5.6/management/udf_percona_toolkit.html for more details
~~~~~~~
EOF

  # now generator supervisor configuration
  cat \
    > /etc/s.supervisor/mysql.s \
<<EOF
[program:mysql]
command=/bocker.sh ed_percona_daemonize
process_name=%(program_name)s
numprocs=1
directory=/mysql
umask=022
priority=999
autostart=true
autorestart=true
startsecs=1
startretries=3
exitcodes=0,2
stopsignal=TERM
stopwaitsecs=10
user=mysql
redirect_stderr=true
stdout_logfile=/supervisor/mysql.log
stdout_logfile_maxbytes=50MB
stdout_logfile_backups=10
stdout_capture_maxbytes=0
stdout_events_enabled=false
stderr_logfile=AUTO
stderr_logfile_maxbytes=50MB
stderr_logfile_backups=10
stderr_capture_maxbytes=0
stderr_events_enabled=false
environment=
EOF

}
